{"version":3,"sources":["webpack://@r-tek/colr_pickr/./src/components/wc-colr-pickr/wc-colr-pickr.scss","webpack://@r-tek/colr_pickr/./node_modules/css-loader/dist/runtime/api.js","webpack://@r-tek/colr_pickr/./node_modules/css-loader/dist/runtime/cssWithMappingToString.js","webpack://@r-tek/colr_pickr/./src/components/wc-colr-pickr/wc-colr-pickr.html","webpack://@r-tek/colr_pickr/webpack/bootstrap","webpack://@r-tek/colr_pickr/webpack/runtime/compat get default export","webpack://@r-tek/colr_pickr/webpack/runtime/define property getters","webpack://@r-tek/colr_pickr/webpack/runtime/hasOwnProperty shorthand","webpack://@r-tek/colr_pickr/./src/components/wc-colr-pickr/utility/color-conversion.js","webpack://@r-tek/colr_pickr/./src/components/wc-colr-pickr/mixins/color-change-event.js","webpack://@r-tek/colr_pickr/./src/components/wc-colr-pickr/mixins/color-text-values.js","webpack://@r-tek/colr_pickr/./src/components/wc-colr-pickr/mixins/custom-color.js","webpack://@r-tek/colr_pickr/./src/components/wc-colr-pickr/mixins/hue-slider.js","webpack://@r-tek/colr_pickr/./src/components/wc-colr-pickr/mixins/opacity-slider.js","webpack://@r-tek/colr_pickr/./src/components/wc-colr-pickr/mixins/saturation-lightness-box.js","webpack://@r-tek/colr_pickr/./src/components/wc-colr-pickr/mixins/update-picker.js","webpack://@r-tek/colr_pickr/./src/components/wc-colr-pickr/wc-colr-pickr.js"],"names":["___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","concat","join","i","modules","mediaQuery","dedupe","alreadyImportedModules","length","_i","_slicedToArray","arr","Array","isArray","_arrayWithHoles","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","next","done","value","err","_iterableToArrayLimit","o","minLen","_arrayLikeToArray","n","prototype","call","slice","constructor","name","from","test","_unsupportedIterableToArray","TypeError","_nonIterableRest","len","arr2","_item","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","sourceURLs","sources","source","sourceRoot","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","getter","__esModule","d","a","definition","key","defineProperty","enumerable","get","obj","prop","hasOwnProperty","HSLAToRGBA","h","s","l","toHex","_l","c","Math","abs","x","m","r","g","b","round","_r","_g","_b","_a","RGBAToHexA","RGBAToHSLA","cmin","min","cmax","max","delta","toFixed","hexAToRGBA","toHSL","_h","substring","_this","colorChange","color","_color","rgbaValue","hex","event","CustomEvent","detail","hsl","rgb","hsla","rgba","hexa","button","setAttribute","style","background","shadowRoot","dispatchEvent","switchColorType","colorTypeStatus","getElementById","display","RGBAValue","hue","saturation","lightness","alpha","querySelectorAll","hexValue","connectedCallback","addEventListener","hexInput","match","updateColorDisplays","updatePicker","forEach","element","rgbaInput","Error","hslaInput","addCustomColor","customColorElem","document","createElement","className","appendChild","LSCustomColors","unshift","localStorage","setItem","clearSingleCustomColor","elemToRemove","contextMenuElem","removeChild","0","isNaN","getAttribute","title","clearAllCustomColors","target","preventDefault","contextMenu","top","getBoundingClientRect","left","initHSEventListeners","sliderStatus","colorSliderHandler","pageX","sliderStatusTouch","changedTouches","clientX","passive","position","sliderContainer","sliderDragger","eventX","attributes","nodeValue","percent","HColor","children","updateColorValueInput","initOSEventListeners","opacityStatus","opacitySliderHandler","opacityStatusTouch","Number","initSLBEventListeners","boxStatus","colorBoxHandler","pageY","boxStatusTouch","clientY","positionX","positionY","touch","boxContainer","boxDragger","eventY","window","scrollY","y","SPercent","percentX","percentY","LPercent","floor","uColor","hueSliderDragger","hueX","alphaSliderDragger","alphaX","Static","elementInstance","component","htmlText","cssText","debug","seal","WCColrPickr","HTMLElement","super","attachShadow","mode","listeners","pickerOpen","instance","doubleTapTime","innerHTML","console","addEventListenersFromAttributes","initPickR","listener","removeEventListener","function","attrName","oldValue","newValue","split","action","targetEvent","targetFunc","error","getItem","parse","label","colorPickerObj","picker","offsetHeight","innerHeight","offsetWidth","innerWidth","focus","keyShortcuts","bind","querySelector","outlineElements","classList","add","remove","tagName","closePicker","keyCode","activeElement","customElements","define"],"mappings":"oEAGIA,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOC,GAAI,mpJAAkqJ,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,8DAA8D,oCAAoC,wCAAwC,qCAAqC,MAAQ,GAAG,SAAW,4/DAA4/D,eAAiB,CAAC,6yIAAqzI,mkCAAmkC,mXAAmX,ygBAAygB,WAAa,MAE1ra,W,QCCAD,EAAOE,QAAU,SAAUC,GACzB,IAAIC,EAAO,GAuDX,OArDAA,EAAKC,SAAW,WACd,OAAOC,KAAKC,KAAI,SAAUC,GACxB,IAAIC,EAAUN,EAAuBK,GAErC,OAAIA,EAAK,GACA,UAAUE,OAAOF,EAAK,GAAI,MAAME,OAAOD,EAAS,KAGlDA,KACNE,KAAK,KAKVP,EAAKQ,EAAI,SAAUC,EAASC,EAAYC,GACf,iBAAZF,IAETA,EAAU,CAAC,CAAC,KAAMA,EAAS,MAG7B,IAAIG,EAAyB,GAE7B,GAAID,EACF,IAAK,IAAIH,EAAI,EAAGA,EAAIN,KAAKW,OAAQL,IAAK,CAEpC,IAAIX,EAAKK,KAAKM,GAAG,GAEP,MAANX,IACFe,EAAuBf,IAAM,GAKnC,IAAK,IAAIiB,EAAK,EAAGA,EAAKL,EAAQI,OAAQC,IAAM,CAC1C,IAAIV,EAAO,GAAGE,OAAOG,EAAQK,IAEzBH,GAAUC,EAAuBR,EAAK,MAKtCM,IACGN,EAAK,GAGRA,EAAK,GAAK,GAAGE,OAAOI,EAAY,SAASJ,OAAOF,EAAK,IAFrDA,EAAK,GAAKM,GAMdV,EAAKL,KAAKS,MAIPJ,I,OC9DT,SAASe,EAAeC,EAAKR,GAAK,OAUlC,SAAyBQ,GAAO,GAAIC,MAAMC,QAAQF,GAAM,OAAOA,EAVtBG,CAAgBH,IAQzD,SAA+BA,EAAKR,GAAK,GAAsB,oBAAXY,UAA4BA,OAAOC,YAAYC,OAAON,IAAO,OAAQ,IAAIO,EAAO,GAAQC,GAAK,EAAUC,GAAK,EAAWC,OAAKC,EAAW,IAAM,IAAK,IAAiCC,EAA7Bd,EAAKE,EAAII,OAAOC,cAAmBG,GAAMI,EAAKd,EAAGe,QAAQC,QAAoBP,EAAK5B,KAAKiC,EAAGG,QAAYvB,GAAKe,EAAKV,SAAWL,GAA3DgB,GAAK,IAAoE,MAAOQ,GAAOP,GAAK,EAAMC,EAAKM,EAAO,QAAU,IAAWR,GAAsB,MAAhBV,EAAW,QAAWA,EAAW,SAAO,QAAU,GAAIW,EAAI,MAAMC,GAAQ,OAAOH,EARjaU,CAAsBjB,EAAKR,IAI5F,SAAqC0B,EAAGC,GAAU,IAAKD,EAAG,OAAQ,GAAiB,iBAANA,EAAgB,OAAOE,EAAkBF,EAAGC,GAAS,IAAIE,EAAIf,OAAOgB,UAAUrC,SAASsC,KAAKL,GAAGM,MAAM,GAAI,GAAc,WAANH,GAAkBH,EAAEO,cAAaJ,EAAIH,EAAEO,YAAYC,MAAM,GAAU,QAANL,GAAqB,QAANA,EAAa,OAAOpB,MAAM0B,KAAKT,GAAI,GAAU,cAANG,GAAqB,2CAA2CO,KAAKP,GAAI,OAAOD,EAAkBF,EAAGC,GAJpTU,CAA4B7B,EAAKR,IAEnI,WAA8B,MAAM,IAAIsC,UAAU,6IAFuFC,GAMzI,SAASX,EAAkBpB,EAAKgC,IAAkB,MAAPA,GAAeA,EAAMhC,EAAIH,UAAQmC,EAAMhC,EAAIH,QAAQ,IAAK,IAAIL,EAAI,EAAGyC,EAAO,IAAIhC,MAAM+B,GAAMxC,EAAIwC,EAAKxC,IAAOyC,EAAKzC,GAAKQ,EAAIR,GAAM,OAAOyC,EAMhLrD,EAAOE,QAAU,SAAgCM,GAC/C,IAAI8C,EAAQnC,EAAeX,EAAM,GAC7BC,EAAU6C,EAAM,GAChBC,EAAaD,EAAM,GAEvB,GAAoB,mBAATE,KAAqB,CAE9B,IAAIC,EAASD,KAAKE,SAASC,mBAAmBC,KAAKC,UAAUN,MACzDO,EAAO,+DAA+DpD,OAAO+C,GAC7EM,EAAgB,OAAOrD,OAAOoD,EAAM,OACpCE,EAAaT,EAAWU,QAAQ1D,KAAI,SAAU2D,GAChD,MAAO,iBAAiBxD,OAAO6C,EAAWY,YAAc,IAAIzD,OAAOwD,EAAQ,UAE7E,MAAO,CAACzD,GAASC,OAAOsD,GAAYtD,OAAO,CAACqD,IAAgBpD,KAAK,MAGnE,MAAO,CAACF,GAASE,KAAK,Q,QC3BxBX,EAAOE,QAFI,2+LCAPkE,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,GAAGF,EAAyBE,GAC3B,OAAOF,EAAyBE,GAAUpE,QAG3C,IAAIF,EAASoE,EAAyBE,GAAY,CACjDrE,GAAIqE,EAEJpE,QAAS,IAOV,OAHAqE,EAAoBD,GAAUtE,EAAQA,EAAOE,QAASmE,GAG/CrE,EAAOE,QCnBfmE,EAAoB5B,EAAKzC,IACxB,IAAIwE,EAASxE,GAAUA,EAAOyE,WAC7B,IAAMzE,EAAgB,QACtB,IAAMA,EAEP,OADAqE,EAAoBK,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,GCLRH,EAAoBK,EAAI,CAACxE,EAAS0E,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoB/B,EAAEsC,EAAYC,KAASR,EAAoB/B,EAAEpC,EAAS2E,IAC5EnD,OAAOoD,eAAe5E,EAAS2E,EAAK,CAAEE,YAAY,EAAMC,IAAKJ,EAAWC,MCJ3ER,EAAoB/B,EAAI,CAAC2C,EAAKC,IAASxD,OAAOgB,UAAUyC,eAAexC,KAAKsC,EAAKC,G,qCCkB1E,SAASE,EAAWC,EAAGC,EAAGC,EAAGZ,EAAGa,GACrC,IAAIxD,EAAKsD,EAAI,IACTG,EAAKF,EAAI,IAETG,GAAK,EAAIC,KAAKC,IAAI,EAAIH,EAAK,IAAMzD,EACnC6D,EAAIH,GAAK,EAAIC,KAAKC,IAAMP,EAAI,GAAM,EAAK,IACvCS,EAAIL,EAAKC,EAAI,EACbK,EAAI,EACJC,EAAI,EACJC,EAAI,EAgCN,OA9BIZ,GAAK,GAAKA,EAAI,IAChBU,EAAIL,EACJM,EAAIH,EACJI,EAAI,GACKZ,GAAK,IAAMA,EAAI,KACxBU,EAAIF,EACJG,EAAIN,EACJO,EAAI,GACKZ,GAAK,KAAOA,EAAI,KACzBU,EAAI,EACJC,EAAIN,EACJO,EAAIJ,GACKR,GAAK,KAAOA,EAAI,KACzBU,EAAI,EACJC,EAAIH,EACJI,EAAIP,GACKL,GAAK,KAAOA,EAAI,KACzBU,EAAIF,EACJG,EAAI,EACJC,EAAIP,GACKL,GAAK,KAAOA,EAAI,MACzBU,EAAIL,EACJM,EAAI,EACJC,EAAIJ,GAGNE,EAAIJ,KAAKO,MAAgB,KAATH,EAAID,IACpBE,EAAIL,KAAKO,MAAgB,KAATF,EAAIF,IACpBG,EAAIN,KAAKO,MAAgB,KAATD,EAAIH,KAEN,IAAVN,EA3DC,SAAoBO,EAAGC,EAAGC,EAAGtB,GAClC,IAAIwB,EAAKJ,EAAE1F,SAAS,IAChB+F,EAAKJ,EAAE3F,SAAS,IAChBgG,EAAKJ,EAAE5F,SAAS,IAChBiG,EAAKX,KAAKO,MAAU,IAAJvB,GAAStE,SAAS,IAOtC,OALkB,IAAd8F,EAAGlF,SAAckF,EAAK,IAAMA,GACd,IAAdC,EAAGnF,SAAcmF,EAAK,IAAMA,GACd,IAAdC,EAAGpF,SAAcoF,EAAK,IAAMA,GACd,IAAdC,EAAGrF,SAAcqF,EAAK,IAAMA,GAErB,OAAPA,EACK,IAAMH,EAAKC,EAAKC,EAGlB,IAAMF,EAAKC,EAAKC,EAAKC,EA6CnBC,CAAWR,EAAGC,EAAGC,EAAGtB,GAGtB,CACLoB,EAAGA,EACHC,EAAGA,EACHC,EAAGA,EACHtB,EAAGA,GAIA,SAAS6B,EAAWT,EAAGC,EAAGC,EAAGtB,GAClC,IAAIwB,EAAKJ,EAAI,IACTK,EAAKJ,EAAI,IACTK,EAAKJ,EAAI,IACTK,OAAWvE,IAAN4C,EAAkB,EAAIA,EAE3B8B,EAAOd,KAAKe,IAAIP,EAAIC,EAAIC,GAC1BM,EAAOhB,KAAKiB,IAAIT,EAAIC,EAAIC,GACxBQ,EAAQF,EAAOF,EACfpB,EAAI,EACJC,EAAI,EACJC,EAAI,EAuBN,OApBEF,EADY,IAAVwB,EACE,EACKF,IAASR,GACZC,EAAKC,GAAMQ,EAAS,EACjBF,IAASP,GACbC,EAAKF,GAAMU,EAAQ,GAEnBV,EAAKC,GAAMS,EAAQ,EAG1BxB,EAAIM,KAAKO,MAAU,GAAJb,GAEXA,EAAI,IAAGA,GAAK,KAEhBE,GAAKoB,EAAOF,GAAQ,EAEpBnB,EAAc,IAAVuB,EAAc,EAAIA,GAAS,EAAIlB,KAAKC,IAAI,EAAIL,EAAI,IAEpDD,IAAU,IAAJA,GAASwB,QAAQ,GACvBvB,IAAU,IAAJA,GAASuB,QAAQ,GAEhB,CACLzB,EAAGA,EACHC,EAAGA,EACHC,EAAGA,EACHZ,EAAG2B,GAIA,SAASS,EAAW1B,EAAG2B,GAC5B,IAAIC,EAAK5B,EAES,IAAd4B,EAAGhG,OACLgG,GAAM,KACiB,IAAdA,EAAGhG,SACZgG,GAAMA,EAAGC,UAAU,EAAG,GAAK,MAG7B,IAAInB,EAAI,EACNC,EAAI,EACJC,EAAI,EACJtB,EAAI,EAgBN,OAdkB,IAAdsC,EAAGhG,QACL8E,EAAI,KAAOkB,EAAG,GAAKA,EAAG,GACtBjB,EAAI,KAAOiB,EAAG,GAAKA,EAAG,GACtBhB,EAAI,KAAOgB,EAAG,GAAKA,EAAG,GACtBtC,EAAI,KAAOsC,EAAG,GAAKA,EAAG,IACC,IAAdA,EAAGhG,SACZ8E,EAAI,KAAOkB,EAAG,GAAKA,EAAG,GACtBjB,EAAI,KAAOiB,EAAG,GAAKA,EAAG,GACtBhB,EAAI,KAAOgB,EAAG,GAAKA,EAAG,GACtBtC,EAAI,KAAOsC,EAAG,GAAKA,EAAG,IAGxBtC,IAAMA,EAAI,KAAKmC,QAAQ,GAEnBE,EACKR,GAAYT,GAAIC,GAAIC,EAAGtB,GAGzB,UAAWoB,EAAI,MAAOC,EAAI,MAAOC,EAAI,IAAMtB,EAAI,IC/IxD,MA8DA,EA9DyB,CACvBwC,MAAO,KAaPC,YAAa,SAASC,GACpB,IAAIC,EAASD,EAGS,iBAAXC,IAETA,EAASP,EAAWO,GAAQ,IAI9B,MAAMC,EAAYnC,EAAWkC,EAAOjC,EAAGiC,EAAOhC,EAAGgC,EAAO/B,EAAG+B,EAAO3C,GAC5D6C,EAAMpC,EAAWkC,EAAOjC,EAAGiC,EAAOhC,EAAGgC,EAAO/B,EAAG+B,EAAO3C,GAAG,GAazD8C,EAAQ,IAAIC,YAAY,cAAe,CAE3CC,OAAQ,CACNN,MAAO,CACLO,IAAK,QAAQN,EAAOjC,MAAMiC,EAAOhC,OAAOgC,EAAO/B,MAC/CsC,IAAK,QAAQN,EAAUxB,MAAMwB,EAAUvB,MAAMuB,EAAUtB,KACvDuB,IAAKA,EACLM,KAAM,QAAQR,EAAOjC,MAAMiC,EAAOhC,OAAOgC,EAAO/B,OAAO+B,EAAO3C,KAC9DoD,KAAM,QAAQR,EAAUxB,MAAMwB,EAAUvB,MAAMuB,EAAUtB,MAAMsB,EAAU5C,KACxEqD,KAAMR,MAOZlH,KAAK6G,MAAMc,OAAOC,aAAa,aAAcV,GAC7ClH,KAAK6G,MAAMc,OAAOE,MAAMC,WAAaZ,EAGrClH,KAAK6G,MAAMkB,WAAWC,cAAcb,KCyDxC,EAnHwB,CACtBN,MAAO,KAGPoB,gBAAiB,WAEf,GAAmC,SAA/BjI,KAAK6G,MAAMqB,gBAA4B,CAEzClI,KAAK6G,MAAMqB,gBAAkB,OAG7BlI,KAAK6G,MAAMkB,WAAWI,eAAe,QAAQN,MAAMO,QAAU,OAC7DpI,KAAK6G,MAAMkB,WAAWI,eAAe,QAAQN,MAAMO,QAAU,QAG7D,MAAMC,EAAYvD,EAAW9E,KAAK6G,MAAMyB,IAAKtI,KAAK6G,MAAM0B,WAAYvI,KAAK6G,MAAM2B,UAAWxI,KAAK6G,MAAM4B,OAGrGzI,KAAK6G,MAAMkB,WAAWW,iBAAiB,eAAe,GAAG7G,MAAQwG,EAAU5C,EAC3EzF,KAAK6G,MAAMkB,WAAWW,iBAAiB,eAAe,GAAG7G,MAAQwG,EAAU3C,EAC3E1F,KAAK6G,MAAMkB,WAAWW,iBAAiB,eAAe,GAAG7G,MAAQwG,EAAU1C,EAC3E3F,KAAK6G,MAAMkB,WAAWW,iBAAiB,eAAe,GAAG7G,MAAQwG,EAAUhE,OACtE,GAAmC,SAA/BrE,KAAK6G,MAAMqB,gBAEpBlI,KAAK6G,MAAMqB,gBAAkB,OAG7BlI,KAAK6G,MAAMkB,WAAWI,eAAe,QAAQN,MAAMO,QAAU,OAC7DpI,KAAK6G,MAAMkB,WAAWI,eAAe,QAAQN,MAAMO,QAAU,QAG7DpI,KAAK6G,MAAMkB,WAAWW,iBAAiB,eAAe,GAAG7G,MAAQ7B,KAAK6G,MAAMyB,IAC5EtI,KAAK6G,MAAMkB,WAAWW,iBAAiB,eAAe,GAAG7G,MAAQ7B,KAAK6G,MAAM0B,WAC5EvI,KAAK6G,MAAMkB,WAAWW,iBAAiB,eAAe,GAAG7G,MAAQ7B,KAAK6G,MAAM2B,UAC5ExI,KAAK6G,MAAMkB,WAAWW,iBAAiB,eAAe,GAAG7G,MAAQ7B,KAAK6G,MAAM4B,WACvE,GAAmC,SAA/BzI,KAAK6G,MAAMqB,gBAA4B,CAEhDlI,KAAK6G,MAAMqB,gBAAkB,OAG7BlI,KAAK6G,MAAMkB,WAAWI,eAAe,QAAQN,MAAMO,QAAU,OAC7DpI,KAAK6G,MAAMkB,WAAWI,eAAe,QAAQN,MAAMO,QAAU,QAG7D,MAAMO,EAAW7D,EAAW9E,KAAK6G,MAAMyB,IAAKtI,KAAK6G,MAAM0B,WAAYvI,KAAK6G,MAAM2B,UAAWxI,KAAK6G,MAAM4B,OAAO,GAG3GzI,KAAK6G,MAAMkB,WAAWI,eAAe,aAAatG,MAAQ8G,IAI9DC,kBAAmB,WACjB5I,KAAK6G,MAAMkB,WAAWI,eAAe,qBAAqBU,iBAAiB,SAAS,KAClF7I,KAAKiI,qBAIPjI,KAAK6G,MAAMkB,WAAWI,eAAe,aAAaU,iBAAiB,QAAQ,KAEzE,MAAMC,EAAW9I,KAAK6G,MAAMkB,WAAWI,eAAe,aAAatG,MAG/DiH,EAASC,MAAM,gDAEjB/I,KAAK6G,MAAMmC,oBAAoBF,GAG/B9I,KAAK6G,MAAMoC,mBAKfjJ,KAAK6G,MAAMkB,WAAWW,iBAAiB,eAAeQ,SAASC,IAE7DA,EAAQN,iBAAiB,UAAU,KAEjC,MAAMO,EAAYpJ,KAAK6G,MAAMkB,WAAWW,iBAAiB,eAGzD,GAAIU,EAAU,GAAGvH,MAAQ,IAAK,MAAM,IAAIwH,MAAM,2BAC9C,GAAID,EAAU,GAAGvH,MAAQ,IAAK,MAAM,IAAIwH,MAAM,2BAC9C,GAAID,EAAU,GAAGvH,MAAQ,IAAK,MAAM,IAAIwH,MAAM,2BAC9C,GAAID,EAAU,GAAGvH,MAAQ,EAAG,MAAM,IAAIwH,MAAM,qCAG5CrJ,KAAK6G,MAAMmC,oBAAoB,QAAQI,EAAU,GAAGvH,UAAUuH,EAAU,GAAGvH,UAAUuH,EAAU,GAAGvH,UAAUuH,EAAU,GAAGvH,UAGzH7B,KAAK6G,MAAMoC,qBAKfjJ,KAAK6G,MAAMkB,WAAWW,iBAAiB,eAAeQ,SAASC,IAE7DA,EAAQN,iBAAiB,UAAU,KAEjC,MAAMS,EAAYtJ,KAAK6G,MAAMkB,WAAWW,iBAAiB,eAGzD,GAAIY,EAAU,GAAGzH,MAAQ,IAAK,MAAM,IAAIwH,MAAM,2BAC9C,GAAIC,EAAU,GAAGzH,MAAQ,IAAK,MAAM,IAAIwH,MAAM,2BAC9C,GAAIC,EAAU,GAAGzH,MAAQ,IAAK,MAAM,IAAIwH,MAAM,2BAC9C,GAAIC,EAAU,GAAGzH,MAAQ,EAAG,MAAM,IAAIwH,MAAM,qCAG5CrJ,KAAK6G,MAAMmC,oBAAoB,QAAQM,EAAU,GAAGzH,UAAUyH,EAAU,GAAGzH,WAAWyH,EAAU,GAAGzH,WAAWyH,EAAU,GAAGzH,UAG3H7B,KAAK6G,MAAMoC,uBCWnB,EA1HoB,CAClBpC,MAAO,KAGP0C,eAAgB,WAEd,MAAMxC,EAAQ,QAAQ/G,KAAK6G,MAAMyB,QAAQtI,KAAK6G,MAAM0B,gBAAgBvI,KAAK6G,MAAM2B,eAAexI,KAAK6G,MAAM4B,SAGzG,IAAIe,EAAkBC,SAASC,cAAc,UAC7CF,EAAgBG,UAAY,wBAC5BH,EAAgB3B,MAAMC,WAAaf,EACnCyC,EAAgB5B,aAAa,oBAAqBb,GAElD/G,KAAK6G,MAAMkB,WAAWI,eAAe,qBAAqByB,YAAYJ,GAGtExJ,KAAK6G,MAAMgD,eAAe,GAAGC,QAAQ,CAACjI,MAAOkF,IAG7CgD,aAAaC,QAAQ,gBAAiB1G,KAAKC,UAAUvD,KAAK6G,MAAMgD,kBAIlEI,uBAAwB,SAASd,GAC/B,MAAMe,OAA2BzI,IAAZ0H,EAAwBnJ,KAAK6G,MAAMsD,gBAAkBhB,EAG1EnJ,KAAK6G,MAAMkB,WAAWI,eAAe,qBAAqBiC,YAAYF,GAGtElK,KAAK6G,MAAMgD,eAAiB,CAAEQ,EAAG,IAGjC,IAAK,IAAI9E,KAAKvF,KAAK6G,MAAMkB,WAAWW,iBAAiB,0BAA2B,CAE9E,IAAiB,IAAb4B,MAAM/E,GACR,SAIF,IAAI4D,EAAUnJ,KAAK6G,MAAMkB,WAAWW,iBAAiB,0BAA0BnD,GAC/EvF,KAAK6G,MAAMgD,eAAe,GAAGpK,KAAK,CAChCoC,MAAOsH,EAAQoB,aAAa,qBAC5BC,MAAOrB,EAAQoB,aAAa,WAKhCR,aAAaC,QAAQ,gBAAiB1G,KAAKC,UAAUvD,KAAK6G,MAAMgD,iBAGhE7J,KAAK6G,MAAMkB,WAAWI,eAAe,qBAAqBN,MAAMO,QAAU,gBAI5EqC,qBAAsB,WAKpB,IAHAzK,KAAK6G,MAAMgD,eAAiB,CAAEQ,EAAG,IAG1BrK,KAAK6G,MAAMkB,WAAWW,iBAAiB,0BAA0B/H,OAAS,GAC/EX,KAAK6G,MAAMkB,WAAWI,eAAe,qBAAqBiC,YAAYpK,KAAK6G,MAAMkB,WAAWW,iBAAiB,0BAA0B,IAIzIqB,aAAaC,QAAQ,gBAAiB1G,KAAKC,UAAUvD,KAAK6G,MAAMgD,iBAGhE7J,KAAK6G,MAAMkB,WAAWI,eAAe,qBAAqBN,MAAMO,QAAU,gBAG5EQ,kBAAmB,WAEjB5I,KAAK6G,MAAMkB,WAAWI,eAAe,qBAAqBU,iBAAiB,SAAU1B,IAEnF,GAA+B,0BAA3BA,EAAMuD,OAAOf,UAAuC,CAEtD,MAAM5C,EAAQI,EAAMuD,OAAOH,aAAa,qBAGxCvK,KAAK6G,MAAMmC,oBAAoBjC,GAG/B/G,KAAK6G,MAAMoC,mBAIfjJ,KAAK6G,MAAMkB,WAAWI,eAAe,qBAAqBU,iBAAiB,SAAS,KAClF7I,KAAKuJ,oBAIPvJ,KAAK6G,MAAMkB,WAAWI,eAAe,qBAAqBU,iBAAiB,eAAgB1B,IAEzF,GAA+B,0BAA3BA,EAAMuD,OAAOf,UAAuC,CAEtDxC,EAAMwD,iBAGN,MAAMC,EAAc5K,KAAK6G,MAAMkB,WAAWI,eAAe,sBAGzDyC,EAAY/C,MAAMO,QAAU,QAC5BwC,EAAY/C,MAAMgD,IAAM1D,EAAMuD,OAAOI,wBAAwBD,IAAM,GAAK,KACxED,EAAY/C,MAAMkD,KAAO5D,EAAMuD,OAAOI,wBAAwBC,KAAO,KAGrE/K,KAAK6G,MAAMsD,gBAAkBhD,EAAMuD,WAIvC1K,KAAK6G,MAAMkB,WAAWI,eAAe,sBAAsBU,iBAAiB,aAAa,KACvF7I,KAAKiK,4BAGPjK,KAAK6G,MAAMkB,WAAWI,eAAe,mBAAmBU,iBAAiB,aAAa,KACpF7I,KAAKyK,4BCGX,EAxHkB,CAChB5D,MAAO,KAEP+B,kBAAmB,WACjB5I,KAAKgL,wBAGPA,qBAAsB,WAKpBhL,KAAK6G,MAAMkB,WAAWI,eAAe,gBAAgBU,iBAAiB,aAAc1B,IAElFnH,KAAK6G,MAAMoE,cAAe,EAE1BjL,KAAKkL,mBAAmB/D,EAAMgE,UAIhCnL,KAAK6G,MAAMkB,WAAWc,iBAAiB,aAAc1B,KAEnB,IAA5BnH,KAAK6G,MAAMoE,cAEbjL,KAAKkL,mBAAmB/D,EAAMgE,UAKlCnL,KAAK6G,MAAMkB,WAAWc,iBAAiB,WAAW,MAEhB,IAA5B7I,KAAK6G,MAAMoE,eAEbjL,KAAK6G,MAAMoE,cAAe,MAQ9BjL,KAAK6G,MAAMkB,WAAWI,eAAe,gBAAgBU,iBACnD,cACC1B,IAECnH,KAAK6G,MAAMuE,mBAAoB,EAE/BpL,KAAKkL,mBAAmB/D,EAAMkE,eAAe,GAAGC,WAElD,CAAEC,SAAS,IAIbvL,KAAK6G,MAAMkB,WAAWc,iBACpB,aACA,MAEuC,IAAjC7I,KAAK6G,MAAMuE,oBAEbjE,MAAMwD,iBAEN3K,KAAKkL,mBAAmB/D,MAAMkE,eAAe,GAAGC,YAGpD,CAAEC,SAAS,IAIbvL,KAAK6G,MAAMkB,WAAWc,iBAAiB,YAAY,MAEZ,IAAjC7I,KAAK6G,MAAMuE,oBAEbpL,KAAK6G,MAAMuE,mBAAoB,OAMrCF,mBAAoB,SAASM,GAE3B,MAAMC,EAAkBzL,KAAK6G,MAAMkB,WAAWI,eAAe,gBACvDuD,EAAgB1L,KAAK6G,MAAMkB,WAAWI,eAAe,wBAG3D,IAAIwD,EAASH,EAAWC,EAAgBX,wBAAwBC,KAG5DY,EAAS,KAAIA,EAAS,IAEtBA,EAAS,MAAKA,EAAS,KAG3BD,EAAcE,WAAWrG,EAAEsG,UAAYF,EAGvC,MAAMG,GAAYH,EAAS,IAAM,IAAO,IAKlCI,EAAS1G,KAAKO,MAAM,IAAM,KAAckG,GAG9C9L,KAAK6G,MAAMyB,IAAMyD,EAGjB/L,KAAK6G,MAAMkB,WAAWI,eAAe,cAAc6D,SAAS,GAAGpE,aAAa,aAAc,QAAQmE,iBAAsB/L,KAAK6G,MAAM4B,UAGnIzI,KAAK6G,MAAMoF,wBAIXjM,KAAK6G,MAAMe,aAAa,aAAc,SAGtC5H,KAAK6G,MAAMoC,iBCMf,EA1HsB,CACpBpC,MAAO,KAEP+B,kBAAmB,WACjB5I,KAAKkM,wBAGPA,qBAAsB,WAKpBlM,KAAK6G,MAAMkB,WAAWI,eAAe,kBAAkBU,iBAAiB,aAAc1B,IAEpFnH,KAAK6G,MAAMsF,eAAgB,EAE3BnM,KAAKoM,qBAAqBjF,EAAMgE,UAIlCnL,KAAK6G,MAAMkB,WAAWc,iBAAiB,aAAc1B,KAElB,IAA7BnH,KAAK6G,MAAMsF,eAEbnM,KAAKoM,qBAAqBjF,EAAMgE,UAKpCnL,KAAK6G,MAAMkB,WAAWc,iBAAiB,WAAW,MAEf,IAA7B7I,KAAK6G,MAAMsF,gBAEbnM,KAAK6G,MAAMsF,eAAgB,MAS/BnM,KAAK6G,MAAMkB,WAAWI,eAAe,kBAAkBU,iBACrD,cACC1B,IAECnH,KAAK6G,MAAMwF,oBAAqB,EAEhCrM,KAAKoM,qBAAqBjF,EAAMkE,eAAe,GAAGC,WAEpD,CAAEC,SAAS,IAIbvL,KAAK6G,MAAMkB,WAAWc,iBACpB,aACC1B,KAEuC,IAAlCnH,KAAK6G,MAAMwF,qBAEblF,EAAMwD,iBAEN3K,KAAKoM,qBAAqBjF,EAAMkE,eAAe,GAAGC,YAGtD,CAAEC,SAAS,IAIbvL,KAAK6G,MAAMkB,WAAWc,iBAAiB,YAAY,MAEX,IAAlC7I,KAAK6G,MAAMwF,qBAEbrM,KAAK6G,MAAMwF,oBAAqB,OAUtCD,qBAAsB,SAASZ,GAE7B,MAAMC,EAAkBzL,KAAK6G,MAAMkB,WAAWI,eAAe,kBACvDuD,EAAgB1L,KAAK6G,MAAMkB,WAAWI,eAAe,0BAG3D,IAAIwD,EAASH,EAAWC,EAAgBX,wBAAwBC,KAG5DY,EAAS,KAAIA,EAAS,IAEtBA,EAAS,MAAKA,EAAS,KAG3BD,EAAcE,WAAWrG,EAAEsG,UAAYF,EAMvC,IAAIlD,EAAQ,MAHMkD,EAAS,IAAM,IAAO,KAKxClD,EAAQ6D,OAAOjH,KAAKO,MAAM6C,QAAXpD,OAGfrF,KAAK6G,MAAM4B,MAAQA,EAGnBzI,KAAK6G,MAAMoF,wBAIXjM,KAAK6G,MAAMe,aAAa,aAAc,SAGtC5H,KAAK6G,MAAMoC,iBCkBf,EAxI+B,CAC7BpC,MAAO,KAEP+B,kBAAmB,WACjB5I,KAAKuM,yBAGPA,sBAAuB,WAMrBvM,KAAK6G,MAAMkB,WAAWI,eAAe,aAAaU,iBAAiB,aAAc1B,IAE/EnH,KAAK6G,MAAM2F,WAAY,EAEvBxM,KAAKyM,gBAAgBtF,EAAMgE,MAAOhE,EAAMuF,UAI1C1M,KAAK6G,MAAMkB,WAAWc,iBAAiB,aAAc1B,KAEtB,IAAzBnH,KAAK6G,MAAM2F,WAEbxM,KAAKyM,gBAAgBtF,EAAMgE,MAAOhE,EAAMuF,UAK5C1M,KAAK6G,MAAMkB,WAAWc,iBAAiB,WAAW,MAEnB,IAAzB7I,KAAK6G,MAAM2F,YAEbxM,KAAK6G,MAAM2F,WAAY,MAQ3BxM,KAAK6G,MAAMkB,WAAWI,eAAe,aAAaU,iBAChD,cACC1B,IAECnH,KAAK6G,MAAM8F,gBAAiB,EAE5B3M,KAAKyM,gBAAgBtF,EAAMkE,eAAe,GAAGC,QAASnE,EAAMkE,eAAe,GAAGuB,SAAS,KAEzF,CAAErB,SAAS,IAIbvL,KAAK6G,MAAMkB,WAAWc,iBACpB,aACC1B,KAEmC,IAA9BnH,KAAK6G,MAAM8F,iBAEbxF,EAAMwD,iBAEN3K,KAAKyM,gBAAgBtF,EAAMkE,eAAe,GAAGC,QAASnE,EAAMkE,eAAe,GAAGuB,SAAS,MAG3F,CAAErB,SAAS,IAIbvL,KAAK6G,MAAMkB,WAAWc,iBAAiB,YAAY,MAEf,IAA9B7I,KAAK6G,MAAM8F,iBAEb3M,KAAK6G,MAAM8F,gBAAiB,OASlCF,gBAAiB,SAASI,EAAWC,EAAWC,GAE9C,MAAMC,EAAehN,KAAK6G,MAAMkB,WAAWI,eAAe,aACpD8E,EAAajN,KAAK6G,MAAMkB,WAAWI,eAAe,eAGxD,IAAIwD,EAASkB,EAAYG,EAAalC,wBAAwBC,KAC1DmC,GACQ,IAAVH,EACID,EAAYE,EAAalC,wBAAwBD,IACjDiC,EAAYE,EAAalC,wBAAwBD,IAAMsC,OAAOC,QAGhEzB,EAAS,KAAIA,EAAS,IAEtBA,EAAS,MAAKA,EAAS,KAEvBuB,EAAS,KAAIA,EAAS,IAEtBA,EAAS,MAAKA,EAAS,KAG3BD,EAAWrB,WAAWyB,EAAExB,UAAYqB,EACpCD,EAAWrB,WAAWrG,EAAEsG,UAAYF,EAKpC,MAAM2B,EAAWjI,KAAKO,OAAQ+F,EAAS,IAAM,IAAO,KAG9C4B,EAAW,IAAMD,EAAW,EAC5BE,EAAW,KAAQN,EAAS,IAAM,IAAO,IAIzCO,EAAWpI,KAAKqI,MAAOF,EAAW,IAAOD,GAG/CvN,KAAK6G,MAAM0B,WAAa+E,EACxBtN,KAAK6G,MAAM2B,UAAYiF,EAGvBzN,KAAK6G,MAAMoF,wBAIXjM,KAAK6G,MAAMe,aAAa,aAAc,SAGtC5H,KAAK6G,MAAMoC,iBCGf,EArIqB,CACnBpC,MAAO,KAGPmC,oBAAqB,SAASjC,GAC5B,IAAI4G,EAAS5G,EAGb,GAAK4G,EAUH,GAA+B,MAA3BA,EAAO/G,UAAU,EAAG,GAEtB+G,EAASlH,EAAWkH,GAAQ,QACvB,GAA+B,MAA3BA,EAAO/G,UAAU,EAAG,GAAY,CAEzC,MAAMW,EAAMoG,EAAO5E,MAAM,YAGzBxB,EAAI,QAAgB9F,IAAX8F,EAAI,GAAmB,EAAIA,EAAI,GAGxCoG,EAASzH,EAAWqB,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAIA,EAAI,QAC3C,CAEL,MAAMD,EAAMqG,EAAO5E,MAAM,YAGzBzB,EAAI,QAAgB7F,IAAX6F,EAAI,GAAmB,EAAIA,EAAI,GAGxCqG,EAAS,CACP5I,EAAGuC,EAAI,GACPtC,EAAGsC,EAAI,GACPrC,EAAGqC,EAAI,GACPjD,EAAGiD,EAAI,SAhCXqG,EAAS,CACP5I,EAAG,EACHC,EAAG,IACHC,EAAG,GACHZ,EAAG,GAkCPrE,KAAK6G,MAAMyB,IAAMqF,EAAO5I,EACxB/E,KAAK6G,MAAM0B,WAAaoF,EAAO3I,EAC/BhF,KAAK6G,MAAM2B,UAAYmF,EAAO1I,EAC9BjF,KAAK6G,MAAM4B,MAAQkF,EAAOtJ,EAG1BrE,KAAKiM,wBAGLjM,KAAK6G,MAAMkB,WAAWI,eAAe,cAAc6D,SAAS,GAAGpE,aAAa,aAAc,OAAO+F,EAAO5I,iBAIxG,MAAMkI,EAAajN,KAAK6G,MAAMkB,WAAWI,eAAe,eAGxD,IAAI5C,EAAI,KAAcoI,EAAO3I,EAAI,GAIjC,IAAIqI,EAAI,MADS,IAAOM,EAAO1I,GAAK,IAAM0I,EAAO3I,EAAI,GAAM,KAC1B,GAG7BO,EAAI,KAAIA,EAAI,IAEZA,EAAI,MAAKA,EAAI,KAEb8H,EAAI,KAAIA,EAAI,IAEZA,EAAI,MAAKA,EAAI,KAGjBJ,EAAWrB,WAAWrG,EAAEsG,UAAYtG,EACpC0H,EAAWrB,WAAWyB,EAAExB,UAAYwB,EAIpC,MAAMO,EAAmB5N,KAAK6G,MAAMkB,WAAWI,eAAe,wBAG9D,IACI0F,EAAO,MADM,IAAOF,EAAO5I,EAAI,IAAO,KACJ,GAGtC6I,EAAiBhC,WAAWrG,EAAEsG,UAAYgC,EAI1C,MAAMC,EAAqB9N,KAAK6G,MAAMkB,WAAWI,eAAe,0BAGhE,IAAI4F,EAAmC,IAAXJ,EAAOtJ,EAAtB,KAAiC,GAG9CyJ,EAAmBlC,WAAWrG,EAAEsG,UAAYkC,GAI9C9B,sBAAuB,WAErB,GAAmC,SAA/BjM,KAAK6G,MAAMqB,gBAA4B,CAEzC,MAAMS,EAAW7D,EAAW9E,KAAK6G,MAAMyB,IAAKtI,KAAK6G,MAAM0B,WAAYvI,KAAK6G,MAAM2B,UAAWxI,KAAK6G,MAAM4B,OAAO,GAG3GzI,KAAK6G,MAAMkB,WAAWI,eAAe,aAAatG,MAAQ8G,OACrD,GAAmC,SAA/B3I,KAAK6G,MAAMqB,gBAA4B,CAEhD,MAAMG,EAAYvD,EAAW9E,KAAK6G,MAAMyB,IAAKtI,KAAK6G,MAAM0B,WAAYvI,KAAK6G,MAAM2B,UAAWxI,KAAK6G,MAAM4B,OAGrGzI,KAAK6G,MAAMkB,WAAWW,iBAAiB,eAAe,GAAG7G,MAAQwG,EAAU5C,EAC3EzF,KAAK6G,MAAMkB,WAAWW,iBAAiB,eAAe,GAAG7G,MAAQwG,EAAU3C,EAC3E1F,KAAK6G,MAAMkB,WAAWW,iBAAiB,eAAe,GAAG7G,MAAQwG,EAAU1C,EAC3E3F,KAAK6G,MAAMkB,WAAWW,iBAAiB,eAAe,GAAG7G,MAAQwG,EAAUhE,OAG3ErE,KAAK6G,MAAMkB,WAAWW,iBAAiB,eAAe,GAAG7G,MAAQ7B,KAAK6G,MAAMyB,IAC5EtI,KAAK6G,MAAMkB,WAAWW,iBAAiB,eAAe,GAAG7G,MAAQ7B,KAAK6G,MAAM0B,WAC5EvI,KAAK6G,MAAMkB,WAAWW,iBAAiB,eAAe,GAAG7G,MAAQ7B,KAAK6G,MAAM2B,UAC5ExI,KAAK6G,MAAMkB,WAAWW,iBAAiB,eAAe,GAAG7G,MAAQ7B,KAAK6G,MAAM4B,QCpH5EuF,EAAS,CACbC,gBAAiB,EACjBC,UAAW,gBACXC,SAAU,IACVC,QAAS,UAAU,cACnBC,OAAO,GAETjN,OAAOkN,KAAKN,GAOL,MAAMO,oBAAoBC,YAK/B,cACEC,QACAT,EAAOC,kBACPjO,KAAK0O,aAAa,CAAEC,KAAM,SAC1B3O,KAAK4O,UAAY,GAEjB5O,KAAK6O,YAAa,EAClB7O,KAAK8O,SAAW,KAChB9O,KAAKwM,WAAY,EACjBxM,KAAK2M,gBAAiB,EACtB3M,KAAKiL,cAAe,EACpBjL,KAAKoL,mBAAoB,EACzBpL,KAAKmM,eAAgB,EACrBnM,KAAKqM,oBAAqB,EAC1BrM,KAAKkI,gBAAkB,OACvBlI,KAAKsI,IAAM,EACXtI,KAAKuI,WAAa,IAClBvI,KAAKwI,UAAY,GACjBxI,KAAKyI,MAAQ,EACbzI,KAAKmK,gBAAkB,KACvBnK,KAAK+O,cAAgB,EACrB/O,KAAK6J,eAAiB,CAAEQ,EAAG,CACzB,CACE,MAAS,OACR,CACD,MAAS,QACR,CACD,MAAS,SACR,CACD,MAAS,UACR,CACD,MAAS,UACR,CACD,MAAS,UACR,CACD,MAAS,UAGb,QAAqBrK,KACrB,QAA+BA,KAC/B,QAAsBA,KACtB,QAAyBA,KACzB,QAAoBA,KACpB,QAAwBA,KACxB,QAAkBA,KAGpB,oBAAoB+G,GAClB,sBAAiCA,GAGnC,wBACE,0BAOF,oBAEE/G,KAAK+H,WAAWiH,UAAYhB,EAAOI,QAAUJ,EAAOG,SAGhDH,EAAOK,OACTY,QAAQZ,MAAM,GAAGL,EAAOE,wDAI1BlO,KAAKkP,kCACLlP,KAAKmP,YACL,sBACA,sBACA,sBACA,sBACA,sBAOF,uBACMnB,EAAOK,OACTY,QAAQZ,MAAM,GAAGL,EAAOE,gCAE1BlO,KAAK4O,UAAU1F,SAASkG,GAAaA,EAASjG,QAAQkG,oBAAoBD,EAASjI,MAAOiI,EAASE,YAOrG,kBACMtB,EAAOK,OACTY,QAAQZ,MAAM,GAAGL,EAAOE,4BAA6BlO,MAYzD,yBAAyBuP,EAAUC,EAAUC,GACvCD,IAAaC,GAAYzP,KAAKuP,KAChCvP,KAAKuP,GAAYE,GAWrB,gCACE,MAAO,GAQT,kCACE1O,MAAM0B,KAAKzC,KAAK+H,WAAWW,iBAAiB,kBAAkBQ,SAASC,IACrDA,EAAQoB,aAAa,eAAemF,MAAM,KAElDxG,SAASyG,IACf,IACE,IAAIC,EAAcD,EAAOD,MAAM,KAAK,GAChCG,EAAaF,EAAOD,MAAM,KAAK,GAE/B1P,KAAK6P,IACP1G,EAAQN,iBAAiB+G,EAAa5P,KAAK6P,IAE3C7P,KAAK4O,UAAUnP,KAAK,CAClB0J,QAASA,EACTmG,SAAUtP,KAAK6P,GACf1I,MAAOyI,KAGTX,QAAQa,MAAM,GAAG9B,EAAOE,8DAA8D2B,mBAExF,MAAOC,GACPb,QAAQa,MAAM,0EAA2E3G,EAASwG,UAM1G,YAEgD,OAA1C5F,aAAagG,QAAQ,iBAEvBhG,aAAaC,QAAQ,gBAAiB1G,KAAKC,UAAUvD,KAAK6J,iBAG1D7J,KAAK6J,eAAiBvG,KAAK0M,MAAMjG,aAAagG,QAAQ,kBAIxD,IAAK,IAAIxK,EAAIvF,KAAK6J,eAAe,GAAGlJ,OAAS,EAAG4E,GAAK,EAAGA,IAAK,CAE3D,IAAIiE,EAAkBC,SAASC,cAAc,UAC7CF,EAAgBG,UAAY,wBAC5BH,EAAgB3B,MAAMC,WAAa9H,KAAK6J,eAAe,GAAGtE,GAAG1D,MAC7D2H,EAAgB5B,aAAa,oBAAqB5H,KAAK6J,eAAe,GAAGtE,GAAG1D,OAC5E2H,EAAgB5B,aACd,SACA5H,KAAK6J,eAAe,GAAGtE,GAAG0K,MAC1BjQ,KAAK6J,eAAe,GAAGtE,GAAG1D,QAK5B7B,KAAK+H,WAAWI,eAAe,qBAAqByB,YAAYJ,GAIlExJ,KAAKkQ,eAAiBlQ,KACtBA,KAAK2H,OAAS3H,KAAK+H,WAAWI,eAAe,gBAG7CnI,KAAK2H,OAAOC,aAAa,aAAc,WACvC5H,KAAK2H,OAAOE,MAAMC,WAAa,UAG/B9H,KAAK2H,OAAOkB,iBAAiB,SAAS,KAEpC7I,KAAK6O,YAAa,EAGlB,MAAMsB,EAASnQ,KAAK+H,WAAWI,eAAe,gBAG9CgI,EAAOtI,MAAMO,QAAU,OAGvB,IAAIyC,EAAM7K,KAAK2H,OAAOmD,wBAAwBD,IAC1CE,EAAO/K,KAAK2H,OAAOmD,wBAAwBC,KAc/C,GATEF,EAFEA,EAAMsF,EAAOC,aAAejD,OAAOkD,YAE/BxF,EAAMsF,EAAOC,aAAe,EAK5BvF,EAAM7K,KAAK2H,OAAOyI,aAAe,EAIrCrF,EAAOoF,EAAOG,YAAcnD,OAAOoD,WAAa,GAAI,CAKtDxF,EAAOA,GAHUA,EAAOoF,EAAOG,YAAcnD,OAAOoD,YAGzB,GAI7BJ,EAAOtI,MAAMgD,IAAMA,EAAM,KACzBsF,EAAOtI,MAAMkD,KAAOA,EAAO,KAG3B/K,KAAKgJ,oBAAoBhJ,KAAK2H,OAAO4C,aAAa,eAGlDvK,KAAK+H,WAAWI,eAAe,qBAAqBqI,QAEpDL,EAAOtH,iBAAiB,UAAW7I,KAAKyQ,aAAaC,KAAK1Q,UAI5DA,KAAK+H,WAAW4I,cAAc,kBAAkB9H,iBAAiB,aAAa,KAE5E,IAAI+H,EAAkB5Q,KAAK+H,WAAWW,iBAAiB,gBAGvD,KAAOkI,EAAgBjQ,OAAS,GAE9BiQ,EAAgB,GAAGC,UAAUC,IAAI,kBAGjCF,EAAgB,GAAGC,UAAUE,OAAO,eAGpCH,EAAkB5Q,KAAK+H,WAAWW,iBAAiB,mBAKvDyE,OAAOtE,iBAAiB,aAAc1B,IAEZ,uBAApBA,EAAMuD,OAAO/K,KACfK,KAAK+H,WAAWI,eAAe,sBAAsBN,MAAMO,QAAU,WAKzE+E,OAAOtE,iBAAiB,aAAc1B,IAEpC,IAAIuD,EAASvD,EAAMuD,OAEf1K,KAAK6O,YAAiC,kBAAnBnE,EAAOsG,SAC5BhR,KAAKiR,iBAKT9D,OAAOtE,iBAAiB,UAAU,KAE5B7I,KAAK6O,YACP7O,KAAKiR,iBAKT9D,OAAOtE,iBAAiB,UAAU,KAE5B7I,KAAK6O,YACP7O,KAAKiR,iBAKX,aAAa9J,GAKX,OAHYA,EAAM+J,SAKhB,KAAK,GAEsC,0BAArCzH,SAAS0H,cAAcxH,WAEzB,yBAAmCF,SAAS0H,eAE9C,MAEF,KAAK,GAECnR,KAAK6O,YACP7O,KAAKiR,eASb,cAEEjR,KAAK6O,YAAa,EAGlB7O,KAAK+H,WAAWI,eAAe,gBAAgBN,MAAMO,QAAU,OAG1DpI,KAAK2H,OAAO4C,aAAa,eAK9BvK,KAAKiJ,eAGP,eAEE,cAA6B,CAC3BlE,EAAG/E,KAAKsI,IACRtD,EAAGhF,KAAKuI,WACRtD,EAAGjF,KAAKwI,UACRnE,EAAGrE,KAAKyI,SAId0E,OAAOiE,eAAeC,OAAO,gBAAiB9C,c","file":"wc-colr-pickr.js","sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*!\\n * Colr Pickr\\n *\\n * R-TEK\\n * \\n * https://github.com/R-TEK/colr_pickr\\n * \\n * MIT License\\n */@-webkit-keyframes fadeIn{0%{opacity:0}100%{opacity:.5}}@-moz-keyframes fadeIn{0%{opacity:0}100%{opacity:.5}}@-ms-keyframes fadeIn{0%{opacity:0}100%{opacity:.5}}@keyframes fadeIn{0%{opacity:0}100%{opacity:.5}}@-webkit-keyframes popUp{0%{transform:scale(1)}50%{transform:scale(1.05)}100%{transform:scale(1)}}@-moz-keyframes popUp{0%{transform:scale(1)}50%{transform:scale(1.05)}100%{transform:scale(1)}}@-ms-keyframes popUp{0%{transform:scale(1)}50%{transform:scale(1.05)}100%{transform:scale(1)}}@keyframes popUp{0%{transform:scale(1)}50%{transform:scale(1.05)}100%{transform:scale(1)}}#color_picker input{height:30px;border:1px solid #ccc;outline:none;font-family:monospace;font-size:12px;color:#333;text-align:center}#color_picker input:focus{border:1px solid #007cff}#color_picker input::-webkit-outer-spin-button,#color_picker input::-webkit-inner-spin-button{-webkit-appearance:none;margin:0}#color_picker input[type=number]{-moz-appearance:textfield}:host{display:inline-block}:host[hidden]{display:none}.wc-colr-pickr .picker-container{display:none;grid-template-columns:min-content min-content min-content min-content;grid-template-rows:min-content min-content min-content;gap:0px 0px;grid-template-areas:\\\"picker-main picker-custom-colors . .\\\" \\\". . . .\\\" \\\". . . .\\\";background-color:#fff;padding:5px;height:245px;border:1px solid #ccc;border-radius:5px;z-index:99999}.wc-colr-pickr .picker-main{display:grid;grid-template-columns:100%;grid-template-rows:min-content min-content min-content;gap:0px 0px;grid-template-areas:\\\".\\\" \\\".\\\" \\\".\\\";grid-area:picker-main}.wc-colr-pickr .picker-custom-colors{display:grid;grid-template-columns:100%;grid-template-rows:min-content;gap:0px 0px;grid-template-areas:\\\".\\\";grid-area:picker-custom-colors}.wc-colr-pickr button{width:50px;height:1rem;vertical-align:text-top;display:inline-block;margin-right:.5rem;border:none;outline:1px solid var(--wc-colr-pickr-border-color, lightgrey)}.wc-colr-pickr #color_picker{display:none;position:fixed;user-select:none;-webkit-user-select:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;-webkit-animation:popUp ease .2s;-moz-animation:popUp ease .2s;-ms-animation:popUp ease .2s;animation:popUp ease .2s}.wc-colr-pickr #color_picker #sliders{width:263px}.wc-colr-pickr #color_picker #color_slider{position:relative;bottom:1px}.wc-colr-pickr #color_picker #color_text_values{padding:12px 0 2px 0;margin-top:9px;border-top:1px solid #ccc;outline:none;text-align:center}.wc-colr-pickr #color_picker #switch_color_type{position:absolute;padding:0;left:25px;width:24px;height:23px;bottom:33px;background:none;border:none;cursor:pointer}.wc-colr-pickr #color_picker .label_text{position:relative;margin:0 !important;height:15px;top:2px;font-family:Arial,Helvetica,sans-serif;font-size:12px;color:#555}.wc-colr-pickr #color_picker #hex_input{width:100px}.wc-colr-pickr #color_picker .rgba_divider,.wc-colr-pickr #color_picker .hsla_divider{display:inline-block}.wc-colr-pickr #color_picker .rgba_input,.wc-colr-pickr #color_picker .hsla_input{margin:0 1px;width:35px}.wc-colr-pickr #color_picker #custom_colors{text-align:left}.wc-colr-pickr #color_picker #custom_colors_header{height:35px;width:85px}.wc-colr-pickr #color_picker #custom_colors_pallet_icon{margin:9px 11px}.wc-colr-pickr #color_picker #custom_colors_add{display:inline-block;position:absolute;margin:5px 0;padding:0;width:24px;height:23px;right:9px;background:none;border:none;outline:none;cursor:pointer}.wc-colr-pickr #color_picker #custom_colors_box{padding:0 0 0 10px;height:calc(100% - 35px);overflow-x:hidden;overflow-y:auto}.wc-colr-pickr #color_picker .custom_colors_preview{position:relative;margin:0 7px 6px 0;width:18px;height:18px;top:1px;border:1px solid #d0d0d0;border-radius:3px;outline:none;cursor:pointer;transition:all .2s}.wc-colr-pickr #color_picker .custom_colors_preview:hover{transform:scale(1.1)}.wc-colr-pickr #color_picker .custom_colors_preview:focus{transform:scale(1.1)}.wc-colr-pickr #color_picker #color_context_menu{display:none;position:fixed;padding:3px 0;width:115px;background:#fff;border:1px solid #ccc;border-radius:5px}.wc-colr-pickr #color_picker #color_clear_single,.wc-colr-pickr #color_picker #color_clear_all{padding:4px;width:100%;background:none;border:none;outline:none;font-family:Arial,Helvetica,sans-serif;font-size:12px;color:#111;text-align:left;cursor:pointer}.wc-colr-pickr #color_picker #color_clear_single:hover,.wc-colr-pickr #color_picker #color_clear_all:hover{background-color:#ececec}.wc-colr-pickr #color_picker .add_outline:focus{outline:1px solid #007cff !important}.wc-colr-pickr #color_picker .remove_outline{outline:none}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/wc-colr-pickr/wc-colr-pickr.scss\",\"webpack://./src/scss/_config.scss\",\"webpack://./src/scss/_animations.scss\",\"webpack://./src/scss/_inputs.scss\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"/*!\\n * Colr Pickr\\n *\\n * R-TEK\\n * \\n * https://github.com/R-TEK/colr_pickr\\n * \\n * MIT License\\n */\\n\\n@import 'config';\\n@import 'animations';\\n@import 'inputs';\\n\\n:host {\\n  display: inline-block;\\n\\n  &[hidden] {\\n    display: none;\\n  }\\n}\\n\\n.wc-colr-pickr {\\n  // colorpicker grid\\n  .picker-container {\\n    display: none;\\n    grid-template-columns: min-content min-content min-content min-content;\\n    grid-template-rows: min-content min-content min-content;\\n    gap: 0px 0px;\\n    grid-template-areas:\\n      \\\"picker-main picker-custom-colors . .\\\"\\n      \\\". . . .\\\"\\n      \\\". . . .\\\";\\n    background-color: #fff;\\n    padding: 5px;\\n    height: 245px;\\n    border: 1px solid #ccc;\\n    border-radius: 5px;\\n    z-index: 99999;\\n  }\\n\\n  .picker-main {\\n    display: grid;\\n    grid-template-columns: 100%;\\n    grid-template-rows: min-content min-content min-content;\\n    gap: 0px 0px;\\n    grid-template-areas:\\n      \\\".\\\"\\n      \\\".\\\"\\n      \\\".\\\";\\n    grid-area: picker-main;\\n  }\\n\\n  .picker-custom-colors {\\n    display: grid;\\n    grid-template-columns: 100%;\\n    grid-template-rows: min-content;\\n    gap: 0px 0px;\\n    grid-template-areas:\\n      \\\".\\\";\\n    grid-area: picker-custom-colors;\\n  }\\n\\n  button {\\n    width: 50px;\\n    height: 1rem;\\n    vertical-align: text-top;\\n    display: inline-block;\\n    margin-right: 0.5rem;\\n    border: none;\\n    outline: 1px solid var(--wc-colr-pickr-border-color, lightgrey);\\n  }\\n\\n  #color_picker {\\n    display: none;\\n    position: fixed;\\n    @include no-select;\\n    @include animation(popUp ease 0.2s);\\n  }\\n\\n  #color_picker {\\n    #sliders {\\n      width: 263px;\\n    }\\n\\n    #color_slider {\\n      position: relative;\\n      bottom: 1px;\\n    }\\n\\n    #color_text_values {\\n      padding: 12px 0 2px 0;\\n      margin-top: 9px;\\n      border-top: 1px solid #ccc;\\n      outline: none;\\n      text-align: center;\\n    }\\n\\n    #switch_color_type {\\n      position: absolute;\\n      padding: 0;\\n      left: 25px;\\n      width: 24px;\\n      height: 23px;\\n      bottom: 33px;\\n      background: none;\\n      border: none;\\n      cursor: pointer;\\n    }\\n\\n    .label_text {\\n      position: relative;\\n      margin: 0 !important;\\n      height: 15px;\\n      top: 2px;\\n      font-family: $font;\\n      font-size: 12px;\\n      color: $light-text;\\n    }\\n\\n    #hex_input {\\n      width: 100px;\\n    }\\n\\n    .rgba_divider,\\n    .hsla_divider {\\n      display: inline-block;\\n    }\\n\\n    .rgba_input,\\n    .hsla_input {\\n      margin: 0 1px;\\n      width: 35px;\\n    }\\n\\n    #custom_colors {\\n      text-align: left;\\n    }\\n\\n    #custom_colors_header {\\n      height: 35px;\\n      width: 85px;\\n    }\\n\\n    #custom_colors_pallet_icon {\\n      margin: 9px 11px;\\n    }\\n\\n    #custom_colors_add {\\n      display: inline-block;\\n      position: absolute;\\n      margin: 5px 0;\\n      padding: 0;\\n      width: 24px;\\n      height: 23px;\\n      right: 9px;\\n      background: none;\\n      border: none;\\n      outline: none;\\n      cursor: pointer;\\n    }\\n\\n    #custom_colors_box {\\n      padding: 0 0 0 10px;\\n      height: calc(100% - 35px);\\n      overflow-x: hidden;\\n      overflow-y: auto;\\n    }\\n\\n    .custom_colors_preview {\\n      position: relative;\\n      margin: 0 7px 6px 0;\\n      width: 18px;\\n      height: 18px;\\n      top: 1px;\\n      border: 1px solid #d0d0d0;\\n      border-radius: 3px;\\n      outline: none;\\n      cursor: pointer;\\n      transition: $quickTransition;\\n    }\\n\\n    .custom_colors_preview:hover {\\n      transform: $hoverEnlarge;\\n    }\\n\\n    .custom_colors_preview:focus {\\n      transform: $hoverEnlarge;\\n    }\\n\\n    #color_context_menu {\\n      display: none;\\n      position: fixed;\\n      padding: 3px 0;\\n      width: 115px;\\n      background: #fff;\\n      border: 1px solid #ccc;\\n      border-radius: 5px;\\n    }\\n\\n    #color_clear_single,\\n    #color_clear_all {\\n      padding: 4px;\\n      width: 100%;\\n      background: none;\\n      border: none;\\n      outline: none;\\n      font-family: $font;\\n      font-size: 12px;\\n      color: $dark-text;\\n      text-align: left;\\n      cursor: pointer;\\n    }\\n\\n    #color_clear_single:hover,\\n    #color_clear_all:hover {\\n      background-color: #ececec;\\n    }\\n\\n    .add_outline:focus {\\n      outline: 1px solid #007cff !important;\\n    }\\n\\n    .remove_outline {\\n      outline: none;\\n    }\\n  }\\n}\\n\",\"/*\\n * Variables\\n */\\n\\n// Backgrounds\\n$hoverEnlarge: scale(1.1);\\n\\n// Texts\\n$font: Arial, Helvetica, sans-serif;\\n$dark-text: #111;\\n$light-text: #555;\\n\\n// Effects\\n$quickTransition: all 0.2s;\\n\\n/*\\n * Mixins\\n */\\n\\n// User-select for different browsers\\n@mixin no-select {\\n  user-select: none;\\n  -webkit-user-select: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n}\\n\\n// Adding prefixes to animation creations\\n@mixin keyframes($animationName) {\\n  @-webkit-keyframes #{$animationName} {\\n    $browser: '-webkit-' !global;\\n    @content;\\n  }\\n  @-moz-keyframes #{$animationName} {\\n    $browser: '-moz-' !global;\\n    @content;\\n  }\\n  @-ms-keyframes #{$animationName} {\\n    $browser: '-moz-' !global;\\n    @content;\\n  }\\n  @keyframes #{$animationName} {\\n    $browser: '' !global;\\n    @content;\\n  }\\n}\\n$browser: null;\\n\\n// Adding prefixes to the animation properties\\n@mixin animation($animation) {\\n  -webkit-animation: $animation;\\n  -moz-animation: $animation;\\n  -ms-animation: $animation;\\n  animation: $animation;\\n}\\n\",\"/*\\n * Animations\\n */\\n\\n// Fade in\\n@include keyframes(fadeIn) {\\n  0% {\\n    opacity: 0;\\n  }\\n  100% {\\n    opacity: 0.5;\\n  }\\n}\\n\\n// Animation to resemble it popping up and back down, like a bounce effect\\n@include keyframes(popUp) {\\n  0% {\\n    transform: scale(1);\\n  }\\n  50% {\\n    transform: scale(1.05);\\n  }\\n  100% {\\n    transform: scale(1);\\n  }\\n}\\n\",\"/*\\n * Styling for inputs\\n */\\n\\n#color_picker {\\n  input {\\n    height: 30px;\\n    border: 1px solid #ccc;\\n    outline: none;\\n    font-family: monospace;\\n    font-size: 12px;\\n    color: #333;\\n    text-align: center;\\n  }\\n\\n  input:focus {\\n    border: 1px solid #007cff;\\n  }\\n\\n  /* Remove spinner buttons */\\n\\n  input::-webkit-outer-spin-button,\\n  input::-webkit-inner-spin-button {\\n    -webkit-appearance: none;\\n    margin: 0;\\n  }\\n\\n  input[type='number'] {\\n    -moz-appearance: textfield;\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","\"use strict\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nmodule.exports = function cssWithMappingToString(item) {\n  var _item = _slicedToArray(item, 4),\n      content = _item[1],\n      cssMapping = _item[3];\n\n  if (typeof btoa === 'function') {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n};","// Module\nvar code = \"<div class=\\\"wc-colr-pickr\\\"> <button id=\\\"toggle_pickr\\\"></button> <aside id=\\\"color_picker\\\" class=\\\"picker-container\\\"> <div class=\\\"picker-main\\\"> <svg id=\\\"color_box\\\" width=\\\"263\\\" height=\\\"130\\\"> <defs> <linearGradient id=\\\"saturation\\\" x1=\\\"0%\\\" y1=\\\"0%\\\" x2=\\\"100%\\\" y2=\\\"0%\\\"> <stop offset=\\\"0%\\\" stop-color=\\\"#fff\\\"></stop> <stop offset=\\\"100%\\\" stop-color=\\\"hsl(0,100%,50%)\\\"></stop> </linearGradient> <linearGradient id=\\\"brightness\\\" x1=\\\"0%\\\" y1=\\\"0%\\\" x2=\\\"0%\\\" y2=\\\"100%\\\"> <stop offset=\\\"0%\\\" stop-color=\\\"rgba(0,0,0,0)\\\"></stop> <stop offset=\\\"100%\\\" stop-color=\\\"#000\\\"></stop> </linearGradient> <pattern id=\\\"pattern_config\\\" width=\\\"100%\\\" height=\\\"100%\\\"> <rect x=\\\"0\\\" y=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"url(#saturation)\\\"></rect> } <rect x=\\\"0\\\" y=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"url(#brightness)\\\"></rect> </pattern> </defs> <rect rx=\\\"5\\\" ry=\\\"5\\\" x=\\\"1\\\" y=\\\"1\\\" width=\\\"263\\\" height=\\\"130\\\" stroke=\\\"#fff\\\" stroke-width=\\\"2\\\" fill=\\\"url(#pattern_config)\\\"></rect> <svg id=\\\"box_dragger\\\" x=\\\"336\\\" y=\\\"14\\\" style=\\\"overflow:visible\\\"> <circle r=\\\"9\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"2\\\"></circle> <circle r=\\\"7\\\" fill=\\\"none\\\" stroke=\\\"#fff\\\" stroke-width=\\\"2\\\"></circle> </svg> </svg> <div id=\\\"sliders\\\"> <svg id=\\\"color_slider\\\" width=\\\"263\\\" height=\\\"20\\\"> <defs> <linearGradient id=\\\"hue\\\" x1=\\\"100%\\\" y1=\\\"0%\\\" x2=\\\"0%\\\" y2=\\\"0%\\\"> <stop offset=\\\"0%\\\" stop-color=\\\"#f00\\\"></stop> <stop offset=\\\"16.666%\\\" stop-color=\\\"#ff0\\\"></stop> <stop offset=\\\"33.333%\\\" stop-color=\\\"#0f0\\\"></stop> <stop offset=\\\"50%\\\" stop-color=\\\"#0ff\\\"></stop> <stop offset=\\\"66.666%\\\" stop-color=\\\"#00f\\\"></stop> <stop offset=\\\"83.333%\\\" stop-color=\\\"#f0f\\\"></stop> <stop offset=\\\"100%\\\" stop-color=\\\"#f00\\\"></stop> </linearGradient> </defs> <rect rx=\\\"5\\\" ry=\\\"5\\\" x=\\\"1\\\" y=\\\"1\\\" width=\\\"263\\\" height=\\\"20\\\" stroke=\\\"#fff\\\" stroke-width=\\\"2\\\" fill=\\\"url(#hue)\\\"></rect> <svg id=\\\"color_slider_dragger\\\" x=\\\"277\\\" y=\\\"11\\\" style=\\\"overflow:visible\\\"> <circle r=\\\"7\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"2\\\"></circle> <circle r=\\\"5\\\" fill=\\\"none\\\" stroke=\\\"#fff\\\" stroke-width=\\\"2\\\"></circle> </svg> </svg> <svg id=\\\"opacity_slider\\\" width=\\\"263\\\" height=\\\"20\\\"> <defs> <linearGradient id=\\\"opacity\\\" x1=\\\"100%\\\" y1=\\\"0%\\\" x2=\\\"0%\\\" y2=\\\"0%\\\"> <stop offset=\\\"0%\\\" stop-color=\\\"#000\\\"></stop> <stop offset=\\\"100%\\\" stop-color=\\\"#fff\\\"></stop> </linearGradient> </defs> <rect rx=\\\"5\\\" ry=\\\"5\\\" x=\\\"1\\\" y=\\\"6\\\" width=\\\"263\\\" height=\\\"10\\\" stroke=\\\"#fff\\\" stroke-width=\\\"2\\\" fill=\\\"url(#opacity)\\\"></rect> <svg id=\\\"opacity_slider_dragger\\\" x=\\\"277\\\" y=\\\"11\\\" style=\\\"overflow:visible\\\"> <circle r=\\\"7\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"2\\\"></circle> <circle r=\\\"5\\\" fill=\\\"none\\\" stroke=\\\"#fff\\\" stroke-width=\\\"2\\\"></circle> </svg> </svg> </div> <div id=\\\"color_text_values\\\" tabindex=\\\"0\\\"> <div id=\\\"hexa\\\"> <input id=\\\"hex_input\\\" name=\\\"hex_input\\\" type=\\\"text\\\" maxlength=\\\"9\\\" spellcheck=\\\"false\\\"/> <br/> <label for=\\\"hex_input\\\" class=\\\"label_text\\\">HEX</label> </div> <div id=\\\"rgba\\\" style=\\\"display:none\\\"> <div class=\\\"rgba_divider\\\"> <input class=\\\"rgba_input\\\" name=\\\"r\\\" type=\\\"number\\\" min=\\\"0\\\" max=\\\"255\\\"/> <br/> <label for=\\\"r\\\" class=\\\"label_text\\\">R</label> </div> <div class=\\\"rgba_divider\\\"> <input class=\\\"rgba_input\\\" name=\\\"g\\\" type=\\\"number\\\" min=\\\"0\\\" max=\\\"255\\\"/> <br/> <label for=\\\"g\\\" class=\\\"label_text\\\">G</label> </div> <div class=\\\"rgba_divider\\\"> <input class=\\\"rgba_input\\\" name=\\\"b\\\" type=\\\"number\\\" min=\\\"0\\\" max=\\\"255\\\"/> <br/> <label for=\\\"b\\\" class=\\\"label_text\\\">B</label> </div> <div class=\\\"rgba_divider\\\"> <input class=\\\"rgba_input\\\" name=\\\"a\\\" type=\\\"number\\\" step=\\\"0.1\\\" min=\\\"0\\\" max=\\\"1\\\"/> <br/> <label for=\\\"a\\\" class=\\\"label_text\\\">A</label> </div> </div> <div id=\\\"hsla\\\" style=\\\"display:none\\\"> <div class=\\\"hsla_divider\\\"> <input class=\\\"hsla_input\\\" name=\\\"h\\\" type=\\\"number\\\" min=\\\"0\\\" max=\\\"359\\\"/> <br/> <label for=\\\"h\\\" class=\\\"label_text\\\">H</label> </div> <div class=\\\"hsla_divider\\\"> <input class=\\\"hsla_input\\\" name=\\\"s\\\" type=\\\"number\\\" min=\\\"0\\\" max=\\\"100\\\"/> <br/> <label for=\\\"s\\\" class=\\\"label_text\\\">S%</label> </div> <div class=\\\"hsla_divider\\\"> <input class=\\\"hsla_input\\\" name=\\\"l\\\" type=\\\"number\\\" min=\\\"0\\\" max=\\\"100\\\"/> <br/> <label for=\\\"l\\\" class=\\\"label_text\\\">L%</label> </div> <div class=\\\"rgba_divider\\\"> <input class=\\\"hsla_input\\\" name=\\\"a\\\" type=\\\"number\\\" step=\\\"0.1\\\" min=\\\"0\\\" max=\\\"1\\\"/> <br/> <label for=\\\"a\\\" class=\\\"label_text\\\">A</label> </div> </div> <button id=\\\"switch_color_type\\\" class=\\\"remove_outline\\\" name=\\\"switch-color-type\\\"> <svg viewBox=\\\"0 -2 24 24\\\" width=\\\"20\\\" height=\\\"20\\\"> <path fill=\\\"#555\\\" d=\\\"M6 11v-4l-6 5 6 5v-4h12v4l6-5-6-5v4z\\\"/> </svg> </button> </div> </div> <div id=\\\"custom_colors\\\" class=\\\"picker-custom-colors\\\"> <div id=\\\"custom_colors_header\\\"> <svg id=\\\"custom_colors_pallet_icon\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"15\\\" height=\\\"18\\\"> <path fill=\\\"#555\\\" d=\\\"M4 21.832c4.587.38 2.944-4.493 7.188-4.538l1.838 1.534c.458 5.538-6.315 6.773-9.026 3.004zm14.065-7.115c1.427-2.239 5.847-9.749 5.847-9.749.352-.623-.43-1.273-.976-.813 0 0-6.572 5.714-8.511 7.525-1.532 1.432-1.539 2.086-2.035 4.447l1.68 1.4c2.227-.915 2.868-1.039 3.995-2.81zm-11.999 3.876c.666-1.134 1.748-2.977 4.447-3.262.434-2.087.607-3.3 2.547-5.112 1.373-1.282 4.938-4.409 7.021-6.229-1-2.208-4.141-4.023-8.178-3.99-6.624.055-11.956 5.465-11.903 12.092.023 2.911 1.081 5.571 2.82 7.635 1.618.429 2.376.348 3.246-1.134zm6.952-15.835c1.102-.006 2.005.881 2.016 1.983.004 1.103-.882 2.009-1.986 2.016-1.105.009-2.008-.88-2.014-1.984-.013-1.106.876-2.006 1.984-2.015zm-5.997 2.001c1.102-.01 2.008.877 2.012 1.983.012 1.106-.88 2.005-1.98 2.016-1.106.007-2.009-.881-2.016-1.988-.009-1.103.877-2.004 1.984-2.011zm-2.003 5.998c1.106-.007 2.01.882 2.016 1.985.01 1.104-.88 2.008-1.986 2.015-1.105.008-2.005-.88-2.011-1.985-.011-1.105.879-2.004 1.981-2.015zm10.031 8.532c.021 2.239-.882 3.718-1.682 4.587l-.046.044c5.255-.591 9.062-4.304 6.266-7.889-1.373 2.047-2.534 2.442-4.538 3.258z\\\"/> </svg> <button id=\\\"custom_colors_add\\\" class=\\\"remove_outline\\\" name=\\\"add-a-custom-color\\\"> <svg viewBox=\\\"0 -2 24 24\\\" width=\\\"14\\\" height=\\\"16\\\"> <path fill=\\\"#555\\\" d=\\\"M24 10h-10v-10h-4v10h-10v4h10v10h4v-10h10z\\\"/> </svg> </button> </div> <div id=\\\"custom_colors_box\\\"></div> </div> <div id=\\\"color_context_menu\\\" class=\\\"color_ctx_menu\\\"> <button id=\\\"color_clear_single\\\" class=\\\"color_ctx_menu\\\" name=\\\"remove-single-color\\\">Remove</button> <button id=\\\"color_clear_all\\\" class=\\\"color_ctx_menu\\\" name=\\\"remove-all-colors\\\">Remove All</button> </div> </aside> </div> \";\n// Exports\nmodule.exports = code;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","export function RGBAToHexA(r, g, b, a) {\n  let _r = r.toString(16);\n  let _g = g.toString(16);\n  let _b = b.toString(16);\n  let _a = Math.round(a * 255).toString(16);\n\n  if (_r.length === 1) _r = '0' + _r;\n  if (_g.length === 1) _g = '0' + _g;\n  if (_b.length === 1) _b = '0' + _b;\n  if (_a.length === 1) _a = '0' + _a;\n\n  if (_a === 'ff') {\n    return '#' + _r + _g + _b;\n  }\n\n  return '#' + _r + _g + _b + _a;\n}\n\nexport function HSLAToRGBA(h, s, l, a, toHex) {\n  let _s = s / 100;\n  let _l = l / 100;\n\n  let c = (1 - Math.abs(2 * _l - 1)) * _s,\n    x = c * (1 - Math.abs(((h / 60) % 2) - 1)),\n    m = _l - c / 2,\n    r = 0,\n    g = 0,\n    b = 0;\n\n  if (h >= 0 && h < 60) {\n    r = c;\n    g = x;\n    b = 0;\n  } else if (h >= 60 && h < 120) {\n    r = x;\n    g = c;\n    b = 0;\n  } else if (h >= 120 && h < 180) {\n    r = 0;\n    g = c;\n    b = x;\n  } else if (h >= 180 && h < 240) {\n    r = 0;\n    g = x;\n    b = c;\n  } else if (h >= 240 && h < 300) {\n    r = x;\n    g = 0;\n    b = c;\n  } else if (h >= 300 && h < 360) {\n    r = c;\n    g = 0;\n    b = x;\n  }\n\n  r = Math.round((r + m) * 255);\n  g = Math.round((g + m) * 255);\n  b = Math.round((b + m) * 255);\n\n  if (toHex === true) {\n    return RGBAToHexA(r, g, b, a);\n  }\n\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a,\n  };\n}\n\nexport function RGBAToHSLA(r, g, b, a) {\n  let _r = r / 255;\n  let _g = g / 255;\n  let _b = b / 255;\n  let _a = a === undefined ? 1 : a;\n\n  let cmin = Math.min(_r, _g, _b),\n    cmax = Math.max(_r, _g, _b),\n    delta = cmax - cmin,\n    h = 0,\n    s = 0,\n    l = 0;\n\n  if (delta === 0) {\n    h = 0;\n  } else if (cmax === _r) {\n    h = ((_g - _b) / delta) % 6;\n  } else if (cmax === _g) {\n    h = (_b - _r) / delta + 2;\n  } else {\n    h = (_r - _g) / delta + 4;\n  }\n\n  h = Math.round(h * 60);\n\n  if (h < 0) h += 360;\n\n  l = (cmax + cmin) / 2;\n\n  s = delta === 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n\n  s = +(s * 100).toFixed(1);\n  l = +(l * 100).toFixed(1);\n\n  return {\n    h: h,\n    s: s,\n    l: l,\n    a: _a,\n  };\n}\n\nexport function hexAToRGBA(h, toHSL) {\n  let _h = h;\n\n  if (_h.length === 7) {\n    _h += 'ff';\n  } else if (_h.length === 4) {\n    _h += _h.substring(1, 4) + 'ff';\n  }\n\n  let r = 0,\n    g = 0,\n    b = 0,\n    a = 1;\n\n  if (_h.length === 5) {\n    r = '0x' + _h[1] + _h[1];\n    g = '0x' + _h[2] + _h[2];\n    b = '0x' + _h[3] + _h[3];\n    a = '0x' + _h[4] + _h[4];\n  } else if (_h.length === 9) {\n    r = '0x' + _h[1] + _h[2];\n    g = '0x' + _h[3] + _h[4];\n    b = '0x' + _h[5] + _h[6];\n    a = '0x' + _h[7] + _h[8];\n  }\n\n  a = +(a / 255).toFixed(3);\n\n  if (toHSL) {\n    return RGBAToHSLA(+r, +g, +b, a);\n  }\n\n  return 'rgba(' + +r + ',' + +g + ',' + +b + ',' + a + ')';\n}\n","import { hexAToRGBA, HSLAToRGBA } from '../utility/color-conversion';\n\nconst ColorChangeEvent = {\n  _this: null,\n\n  /**\n   * @memberof WCColrPickr\n   * @method colorChange\n   * @description Function to change the color of the component\n   * @param {string} color - The color you are changing the instance to\n   * @param {HTMLElement} elem - The button HTMLElement that is a part of the instance\n   *\n   * @example\n   * const button = document.getElementById('my_button');\n   * this._this.colorChange('#ff0000', button);\n   */\n  colorChange: function(color) {\n    let _color = color;\n\n    // If the user send a string manually...\n    if (typeof _color === 'string') {\n      // Change it to the expected value of a HSLA object\n      _color = hexAToRGBA(_color, true);\n    }\n\n    // Defining the RGBA value conversion\n    const rgbaValue = HSLAToRGBA(_color.h, _color.s, _color.l, _color.a);\n    const hex = HSLAToRGBA(_color.h, _color.s, _color.l, _color.a, true);\n\n    /**\n     * @event colorChange\n     * @description Event to fire whenever the color picker is closed for new details on the color instance. Calling event.detail will return an object of the following:\n     * @return {object} color - Object of color values\n     * @return {string} color.hex - Hex value of chosen color\n     * @return {string} color.rgb - RGB value of chosen color\n     * @return {string} color.hsl - HSL value of chosen color\n     * @return {string} color.hexa - HexAlpha value of chosen color\n     * @return {string} color.rgba - RGBA value of chosen color\n     * @return {string} color.hsla - HSLA value of chosen color\n     */\n    const event = new CustomEvent('colorChange', {\n      // Adding the response details\n      detail: {\n        color: {\n          hsl: `hsla(${_color.h}, ${_color.s}%, ${_color.l}%)`,\n          rgb: `rgba(${rgbaValue.r}, ${rgbaValue.g}, ${rgbaValue.b})`,\n          hex: hex,\n          hsla: `hsla(${_color.h}, ${_color.s}%, ${_color.l}%, ${_color.a})`,\n          rgba: `rgba(${rgbaValue.r}, ${rgbaValue.g}, ${rgbaValue.b}, ${rgbaValue.a})`,\n          hexa: hex,\n        },\n      },\n    });\n\n    // Defining color\n    // Changing color attributes\n    this._this.button.setAttribute('data-color', hex);\n    this._this.button.style.background = hex;\n\n    // Dispatching the event for the active object\n    this._this.shadowRoot.dispatchEvent(event);\n  },\n}\n\nexport default ColorChangeEvent;","import { HSLAToRGBA } from '../utility/color-conversion';\n\nconst ColorTextValues = {\n  _this: null,\n\n  // Function to switch the color type inputs\n  switchColorType: function() {\n    // Checking the current selected input color type\n    if (this._this.colorTypeStatus === 'HEXA') {\n      // Updating the data object\n      this._this.colorTypeStatus = 'RGBA';\n\n      // Displaying the correct elements\n      this._this.shadowRoot.getElementById('hexa').style.display = 'none';\n      this._this.shadowRoot.getElementById('rgba').style.display = 'block';\n\n      // Converting the value\n      const RGBAValue = HSLAToRGBA(this._this.hue, this._this.saturation, this._this.lightness, this._this.alpha);\n\n      // Applying the value to the inputs\n      this._this.shadowRoot.querySelectorAll('.rgba_input')[0].value = RGBAValue.r;\n      this._this.shadowRoot.querySelectorAll('.rgba_input')[1].value = RGBAValue.g;\n      this._this.shadowRoot.querySelectorAll('.rgba_input')[2].value = RGBAValue.b;\n      this._this.shadowRoot.querySelectorAll('.rgba_input')[3].value = RGBAValue.a;\n    } else if (this._this.colorTypeStatus === 'RGBA') {\n      // Updating the data object\n      this._this.colorTypeStatus = 'HSLA';\n\n      // Displaying the correct elements\n      this._this.shadowRoot.getElementById('rgba').style.display = 'none';\n      this._this.shadowRoot.getElementById('hsla').style.display = 'block';\n\n      // Applying the value to the inputs\n      this._this.shadowRoot.querySelectorAll('.hsla_input')[0].value = this._this.hue;\n      this._this.shadowRoot.querySelectorAll('.hsla_input')[1].value = this._this.saturation;\n      this._this.shadowRoot.querySelectorAll('.hsla_input')[2].value = this._this.lightness;\n      this._this.shadowRoot.querySelectorAll('.hsla_input')[3].value = this._this.alpha;\n    } else if (this._this.colorTypeStatus === 'HSLA') {\n      // Updating the data object\n      this._this.colorTypeStatus = 'HEXA';\n\n      // Displaying the correct elements\n      this._this.shadowRoot.getElementById('hsla').style.display = 'none';\n      this._this.shadowRoot.getElementById('hexa').style.display = 'block';\n\n      // Converting the value\n      const hexValue = HSLAToRGBA(this._this.hue, this._this.saturation, this._this.lightness, this._this.alpha, true);\n\n      // Applying the value to the input\n      this._this.shadowRoot.getElementById('hex_input').value = hexValue;\n    }\n  },\n\n  connectedCallback: function() {\n    this._this.shadowRoot.getElementById('switch_color_type').addEventListener('click', () => {\n      this.switchColorType();\n    });\n\n    // Event to update the color when the user leaves the hex value box\n    this._this.shadowRoot.getElementById('hex_input').addEventListener('blur', () => {\n      // Value\n      const hexInput = this._this.shadowRoot.getElementById('hex_input').value;\n\n      // Check to see if the hex is formatted correctly\n      if (hexInput.match(/^#[0-9a-f]{3}([0-9a-f]{3})?([0-9a-f]{2})?$/)) {\n        // Updating the picker\n        this._this.updateColorDisplays(hexInput);\n\n        // Update\n        this._this.updatePicker();\n      }\n    });\n\n    // Gathering all the rgba inputs boxes\n    this._this.shadowRoot.querySelectorAll('.rgba_input').forEach((element) => {\n      // Event to update the color when the user changes the value to any of the input boxes\n      element.addEventListener('change', () => {\n        // Input boxes\n        const rgbaInput = this._this.shadowRoot.querySelectorAll('.rgba_input');\n\n        // Checking that the numbers are within the correct boundaries\n        if (rgbaInput[0].value > 255) throw new Error('Value must be below 256');\n        if (rgbaInput[1].value > 255) throw new Error('Value must be below 256');\n        if (rgbaInput[2].value > 255) throw new Error('Value must be below 256');\n        if (rgbaInput[3].value > 1) throw new Error('Value must be equal to or below 1');\n\n        // Updating the picker\n        this._this.updateColorDisplays(`rgba(${rgbaInput[0].value}, ${rgbaInput[1].value}, ${rgbaInput[2].value}, ${rgbaInput[3].value})`);\n\n        // Update\n        this._this.updatePicker();\n      });\n    });\n\n    // Gathering all the hsla inputs boxes\n    this._this.shadowRoot.querySelectorAll('.hsla_input').forEach((element) => {\n      // Event to update the color when the user changes the value to any of the input boxes\n      element.addEventListener('change', () => {\n        // Input boxes\n        const hslaInput = this._this.shadowRoot.querySelectorAll('.hsla_input');\n\n        // Checking that the numbers are within the correct boundaries\n        if (hslaInput[0].value > 359) throw new Error('Value must be below 360');\n        if (hslaInput[1].value > 100) throw new Error('Value must be below 100');\n        if (hslaInput[2].value > 100) throw new Error('Value must be below 100');\n        if (hslaInput[3].value > 1) throw new Error('Value must be equal to or below 1');\n\n        // Updating the picker\n        this._this.updateColorDisplays(`hsla(${hslaInput[0].value}, ${hslaInput[1].value}%, ${hslaInput[2].value}%, ${hslaInput[3].value})`);\n\n        // Update\n        this._this.updatePicker();\n      });\n    });\n  }\n}\n\nexport default ColorTextValues;","const CustomColor = {\n  _this: null,\n\n  // Function to add a new custom color\n  addCustomColor: function() {\n    // Getting the color\n    const color = `hsla(${this._this.hue}, ${this._this.saturation}%, ${this._this.lightness}%, ${this._this.alpha})`;\n\n    // Creating the element\n    let customColorElem = document.createElement('BUTTON');\n    customColorElem.className = 'custom_colors_preview';\n    customColorElem.style.background = color;\n    customColorElem.setAttribute('data-custom-color', color);\n    // Placing the element in the DOM\n    this._this.shadowRoot.getElementById('custom_colors_box').appendChild(customColorElem);\n\n    // Pushing the color to the top of the array\n    this._this.LSCustomColors[0].unshift({value: color});\n\n    // Updating the local storage with the new custom color\n    localStorage.setItem('custom_colors', JSON.stringify(this._this.LSCustomColors));\n  },\n\n  // Clears a selected custom color\n  clearSingleCustomColor: function(element) {\n    const elemToRemove = element === undefined ? this._this.contextMenuElem : element;\n\n    // Removing the element\n    this._this.shadowRoot.getElementById('custom_colors_box').removeChild(elemToRemove);\n\n    // Clearing the variable\n    this._this.LSCustomColors = { 0: [] };\n\n    // Looping through the custom colors to repopulate the variable\n    for (let x in this._this.shadowRoot.querySelectorAll('.custom_colors_preview')) {\n      // Continuing if its a number\n      if (isNaN(x) === true) {\n        continue;\n      }\n\n      // Pushing the colors to the array\n      let element = this._this.shadowRoot.querySelectorAll('.custom_colors_preview')[x];\n      this._this.LSCustomColors[0].push({\n        value: element.getAttribute('data-custom-color'),\n        title: element.getAttribute('title')\n      });\n    }\n\n    // Updating the local storage\n    localStorage.setItem('custom_colors', JSON.stringify(this._this.LSCustomColors));\n\n    // Making sure the add color button is displaying\n    this._this.shadowRoot.getElementById('custom_colors_add').style.display = 'inline-block';\n  },\n\n  // Clears all custom colors\n  clearAllCustomColors: function() {\n    // Clearing variable\n    this._this.LSCustomColors = { 0: [] };\n\n    // Looping through the custom colors to repopulate the variable\n    while (this._this.shadowRoot.querySelectorAll('.custom_colors_preview').length > 0) {\n      this._this.shadowRoot.getElementById('custom_colors_box').removeChild(this._this.shadowRoot.querySelectorAll('.custom_colors_preview')[0]);\n    }\n\n    // Updating the local storage\n    localStorage.setItem('custom_colors', JSON.stringify(this._this.LSCustomColors));\n\n    // Making sure the add color button is displaying\n    this._this.shadowRoot.getElementById('custom_colors_add').style.display = 'inline-block';\n  },\n\n  connectedCallback: function() {\n    // Click on color listener to update the picker\n    this._this.shadowRoot.getElementById('custom_colors_box').addEventListener('click', (event) => {\n      // Making sure the users has selected a color preview\n      if (event.target.className === 'custom_colors_preview') {\n        // Color\n        const color = event.target.getAttribute('data-custom-color');\n\n        // Updating the picker with that color\n        this._this.updateColorDisplays(color);\n\n        // Update\n        this._this.updatePicker();\n      }\n    });\n\n    this._this.shadowRoot.getElementById('custom_colors_add').addEventListener('click', () => {\n      this.addCustomColor();\n    });\n\n    // Event to fire for a context menu\n    this._this.shadowRoot.getElementById('custom_colors_box').addEventListener('contextmenu', (event) => {\n      // Making sure the users has selected a color preview\n      if (event.target.className === 'custom_colors_preview') {\n        // Preventing default\n        event.preventDefault();\n\n        // Defining the context menu\n        const contextMenu = this._this.shadowRoot.getElementById('color_context_menu');\n\n        // Updating the styling of the menu\n        contextMenu.style.display = 'block';\n        contextMenu.style.top = event.target.getBoundingClientRect().top + 25 + 'px';\n        contextMenu.style.left = event.target.getBoundingClientRect().left + 'px';\n\n        // Defining the color selected\n        this._this.contextMenuElem = event.target;\n      }\n    });\n\n    this._this.shadowRoot.getElementById('color_clear_single').addEventListener('mousedown', () => {\n      this.clearSingleCustomColor();\n    });\n\n    this._this.shadowRoot.getElementById('color_clear_all').addEventListener('mousedown', () => {\n      this.clearAllCustomColors();\n    });\n  }\n}\n\nexport default CustomColor;","const HueSlider = {\n  _this: null,\n\n  connectedCallback: function() {\n    this.initHSEventListeners();\n  },\n\n  initHSEventListeners: function() {    \n    /**\n     * Mouse Events\n     */\n    // Start the slider drag\n    this._this.shadowRoot.getElementById('color_slider').addEventListener('mousedown', (event) => {\n      // Updating the status in the data object\n      this._this.sliderStatus = true;\n      // Calling handler function\n      this.colorSliderHandler(event.pageX);\n    });\n\n    // Moving the slider drag\n    this._this.shadowRoot.addEventListener('mousemove', (event) => {\n      // Checking that the drag has started\n      if (this._this.sliderStatus === true) {\n        // Calling handler function\n        this.colorSliderHandler(event.pageX);\n      }\n    });\n\n    // End the slider drag\n    this._this.shadowRoot.addEventListener('mouseup', () => {\n      // Checking that the drag has started\n      if (this._this.sliderStatus === true) {\n        // Updating the status in the data object\n        this._this.sliderStatus = false;\n      }\n    });\n\n    /**\n     * Touch Events\n     */\n    // Start the slider drag on touch\n    this._this.shadowRoot.getElementById('color_slider').addEventListener(\n      'touchstart',\n      (event) => {\n        // Updating the status\n        this._this.sliderStatusTouch = true;\n        // Calling the handler function\n        this.colorSliderHandler(event.changedTouches[0].clientX);\n      },\n      { passive: true }\n    );\n\n    // Moving the slider drag on touch\n    this._this.shadowRoot.addEventListener(\n      'touchmove',\n      () => {\n        // Checking that the touch drag has started\n        if (this._this.sliderStatusTouch === true) {\n          // Prevent page scrolling\n          event.preventDefault();\n          // Calling the handler function\n          this.colorSliderHandler(event.changedTouches[0].clientX);\n        }\n      },\n      { passive: false }\n    );\n\n    // End the slider drag on touch\n    this._this.shadowRoot.addEventListener('touchend', () => {\n      // Checking that the touch drag has started\n      if (this._this.sliderStatusTouch === true) {\n        // Updating the status\n        this._this.sliderStatusTouch = false;\n      }\n    });\n  },\n\n  // Function to handle changes to the HUE slider\n  colorSliderHandler: function(position) {\n    // Defining the slider and dragger\n    const sliderContainer = this._this.shadowRoot.getElementById('color_slider');\n    const sliderDragger = this._this.shadowRoot.getElementById('color_slider_dragger');\n\n    // Defining the X position\n    let eventX = position - sliderContainer.getBoundingClientRect().left;\n\n    // Making conditions so that the user don't drag outside the box\n    if (eventX < 11) eventX = 11;\n\n    if (eventX > 255) eventX = 255;\n\n    // Updating the X property of the dragger\n    sliderDragger.attributes.x.nodeValue = eventX;\n\n    // Percentage of the dragger on the X axis\n    const percent = ((eventX - 11) / 244) * 100;\n\n    // Calculating the color\n    // Max number for hue colors is 359, I find the percentage of this, from the percent variable\n    // I take it away from the max number because the slider should work backwards\n    const HColor = Math.round(359 - (359 / 100) * percent);\n\n    // Updating the Hue value in the data object\n    this._this.hue = HColor;\n\n    // Updating the Hue color in the Saturation and lightness box\n    this._this.shadowRoot.getElementById('saturation').children[1].setAttribute('stop-color', `hsla(${HColor}, 100%, 50%, ${this._this.alpha})`);\n\n    // Update the color text values\n    this._this.updateColorValueInput();\n\n    // Setting the data-color attribute to a color string\n    // This is so that the color updates properly on instances where the color has not been set\n    this._this.setAttribute('data-color', 'color');\n\n    // Update\n    this._this.updatePicker();\n  }\n}\n\nexport default HueSlider;","const OpacitySlider = {\n  _this: null,\n\n  connectedCallback: function() {\n    this.initOSEventListeners();\n  },\n\n  initOSEventListeners: function() {\n    /**\n     * Mouse Events\n     */\n    // Start the slider drag for opacity\n    this._this.shadowRoot.getElementById('opacity_slider').addEventListener('mousedown', (event) => {\n      // Updating the status in the data object\n      this._this.opacityStatus = true;\n      // Calling the handler function\n      this.opacitySliderHandler(event.pageX);\n    });\n\n    // Moving the slider drag for opacity\n    this._this.shadowRoot.addEventListener('mousemove', (event) => {\n      // Checking that the drag has started\n      if (this._this.opacityStatus === true) {\n        // Calling the handler function\n        this.opacitySliderHandler(event.pageX);\n      }\n    });\n\n    // End the slider drag\n    this._this.shadowRoot.addEventListener('mouseup', () => {\n      // Checking that the drag has started\n      if (this._this.opacityStatus === true) {\n        // Updating the status in the data object\n        this._this.opacityStatus = false;\n      }\n    });\n\n    /**\n     * Touch Events\n     */\n\n    // Start the slider drag on touch\n    this._this.shadowRoot.getElementById('opacity_slider').addEventListener(\n      'touchstart',\n      (event) => {\n        // Updating the status\n        this._this.opacityStatusTouch = true;\n        // Calling the handler function\n        this.opacitySliderHandler(event.changedTouches[0].clientX);\n      },\n      { passive: true }\n    );\n\n    // Moving the slider drag on touch\n    this._this.shadowRoot.addEventListener(\n      'touchmove',\n      (event) => {\n        // Checking that the touch drag has started\n        if (this._this.opacityStatusTouch === true) {\n          // Prevent page scrolling\n          event.preventDefault();\n          // Calling the handler function\n          this.opacitySliderHandler(event.changedTouches[0].clientX);\n        }\n      },\n      { passive: false }\n    );\n\n    // End the slider drag on touch\n    this._this.shadowRoot.addEventListener('touchend', () => {\n      // Checking that the touch drag has started\n      if (this._this.opacityStatusTouch === true) {\n        // Updating the status\n        this._this.opacityStatusTouch = false;\n      }\n    });\n  },\n\n  /**\n   * Opacity Slider\n   */\n\n  // Function to handle changes to the opacity slider\n  opacitySliderHandler: function(position) {\n    // Defining the slider and dragger\n    const sliderContainer = this._this.shadowRoot.getElementById('opacity_slider');\n    const sliderDragger = this._this.shadowRoot.getElementById('opacity_slider_dragger');\n\n    // Defining the X position\n    let eventX = position - sliderContainer.getBoundingClientRect().left;\n\n    // Making conditions so that the user don't drag outside the box\n    if (eventX < 11) eventX = 11;\n\n    if (eventX > 255) eventX = 255;\n\n    // Update the X property of the dragger\n    sliderDragger.attributes.x.nodeValue = eventX;\n\n    // Percentage of the dragger on the X axis\n    const percent = ((eventX - 11) / 244) * 100;\n\n    // Finding the value for the percentage of 1\n    let alpha = (1 / 100) * percent;\n    // Rounding the value to the nearest 2 decimals\n    alpha = Number(Math.round(alpha + 'e' + 2) + 'e-' + 2);\n\n    // Updating the data objects\n    this._this.alpha = alpha;\n\n    // Update the color text values\n    this._this.updateColorValueInput();\n\n    // Setting the data-color attribute to a color string\n    // This is so that the color updates properly on instances where the color has not been set\n    this._this.setAttribute('data-color', 'color');\n\n    // Update\n    this._this.updatePicker();\n  }\n}\n\nexport default OpacitySlider;","const SaturationLightnessBox = {\n  _this: null,\n\n  connectedCallback: function() {\n    this.initSLBEventListeners();\n  },\n\n  initSLBEventListeners: function() {\n    /**\n     * Mouse Events\n     */\n\n    // Start box drag listener\n    this._this.shadowRoot.getElementById('color_box').addEventListener('mousedown', (event) => {\n      // Updating the status in the data object\n      this._this.boxStatus = true;\n      // Calling handler function\n      this.colorBoxHandler(event.pageX, event.pageY);\n    });\n\n    // Moving box drag listener\n    this._this.shadowRoot.addEventListener('mousemove', (event) => {\n      // Checking that the drag has started\n      if (this._this.boxStatus === true) {\n        // Calling handler function\n        this.colorBoxHandler(event.pageX, event.pageY);\n      }\n    });\n\n    // End box drag listener\n    this._this.shadowRoot.addEventListener('mouseup', () => {\n      // Checking that the drag has started\n      if (this._this.boxStatus === true) {\n        // Updating the status in the data object\n        this._this.boxStatus = false;\n      }\n    });\n\n    /**\n     * Touch Events\n     */\n    // Start the box drag on touch\n    this._this.shadowRoot.getElementById('color_box').addEventListener(\n      'touchstart',\n      (event) => {\n        // Updating the status\n        this._this.boxStatusTouch = true;\n        // Calling the handler function\n        this.colorBoxHandler(event.changedTouches[0].clientX, event.changedTouches[0].clientY, true);\n      },\n      { passive: true }\n    );\n\n    // Moving the box drag on touch\n    this._this.shadowRoot.addEventListener(\n      'touchmove',\n      (event) => {\n        // Checking that the touch drag has started\n        if (this._this.boxStatusTouch === true) {\n          // Prevent page scrolling\n          event.preventDefault();\n          // Calling the handler function\n          this.colorBoxHandler(event.changedTouches[0].clientX, event.changedTouches[0].clientY, true);\n        }\n      },\n      { passive: false }\n    );\n\n    // End box drag on touch\n    this._this.shadowRoot.addEventListener('touchend', () => {\n      // Checking that the touch drag has started\n      if (this._this.boxStatusTouch === true) {\n        // Calling the handler function\n        this._this.boxStatusTouch = false;\n      }\n    });\n  },\n\n  /**\n   * Saturation and Lightness Box\n   */\n  // Function to handle changes to the saturation and lightness box\n  colorBoxHandler: function(positionX, positionY, touch) {\n    // Defining the box and dragger\n    const boxContainer = this._this.shadowRoot.getElementById('color_box');\n    const boxDragger = this._this.shadowRoot.getElementById('box_dragger');\n\n    // Defining X and Y position, Y differently works with scroll so I make conditions for that\n    let eventX = positionX - boxContainer.getBoundingClientRect().left;\n    let eventY =\n      touch === true\n        ? positionY - boxContainer.getBoundingClientRect().top\n        : positionY - boxContainer.getBoundingClientRect().top - window.scrollY;\n\n    // Making conditions so that the user don't drag outside the box\n    if (eventX < 14) eventX = 14;\n\n    if (eventX > 252) eventX = 252;\n\n    if (eventY < 14) eventY = 14;\n\n    if (eventY > 119) eventY = 119;\n\n    // Changes X and Y properties of the dragger\n    boxDragger.attributes.y.nodeValue = eventY;\n    boxDragger.attributes.x.nodeValue = eventX;\n\n    // Calculating the Saturation Percent value\n    // SPercent is just the percent of where the dragger is on the X axis\n    // 322 is the max number of pixels the dragger can move\n    const SPercent = Math.round(((eventX - 15) / 238) * 100);\n\n    // Calculating the X and Y Percent Values\n    const percentX = 100 - SPercent / 2;\n    const percentY = 100 - ((eventY - 15) / 105) * 100;\n\n    // Calculating the LPercent\n    // LPercent is the the X percentage of the of the Y percentage of the dragger\n    const LPercent = Math.floor((percentY / 100) * percentX);\n\n    // Applying the Saturation and Lightness to the data object\n    this._this.saturation = SPercent;\n    this._this.lightness = LPercent;\n\n    // Update the color text values\n    this._this.updateColorValueInput();\n\n    // Setting the data-color attribute to a color string\n    // This is so that the color updates properly on instances where the color has not been set\n    this._this.setAttribute('data-color', 'color');\n\n    // Update\n    this._this.updatePicker();\n  }\n}\n\nexport default SaturationLightnessBox;","import { hexAToRGBA, RGBAToHSLA, HSLAToRGBA } from '../utility/color-conversion';\n\nconst UpdatePicker = {\n  _this: null,\n\n  // Function to update color displays\n  updateColorDisplays: function(color) {\n    let uColor = color;\n\n    // Checking if color picker has not been set\n    if (!uColor) {\n      // Setting the default color positioning of the player to red\n      uColor = {\n        h: 0,\n        s: 100,\n        l: 50,\n        a: 1,\n      };\n    } else {\n      // Checking the color type that has been given\n      if (uColor.substring(0, 1) === '#') {\n        // Converting the color to HSLA\n        uColor = hexAToRGBA(uColor, true);\n      } else if (uColor.substring(0, 1) === 'r') {\n        // Extracting the values\n        const rgb = uColor.match(/[.?\\d]+/g);\n\n        // Making sure there is a alpha value\n        rgb[3] = rgb[3] === undefined ? 1 : rgb[3];\n\n        // Converting the color to HSLA\n        uColor = RGBAToHSLA(rgb[0], rgb[1], rgb[2], rgb[3]);\n      } else {\n        // Extracting the values\n        const hsl = uColor.match(/[.?\\d]+/g);\n\n        // Making sure there is a alpha value\n        hsl[3] = hsl[3] === undefined ? 1 : hsl[3];\n\n        // Formatting the value properly\n        uColor = {\n          h: hsl[0],\n          s: hsl[1],\n          l: hsl[2],\n          a: hsl[3],\n        };\n      }\n    }\n\n    // Updating the data object\n    this._this.hue = uColor.h;\n    this._this.saturation = uColor.s;\n    this._this.lightness = uColor.l;\n    this._this.alpha = uColor.a;\n\n    // Updating the input values\n    this.updateColorValueInput();\n\n    // Updating the Hue color in the Saturation and lightness box\n    this._this.shadowRoot.getElementById('saturation').children[1].setAttribute('stop-color', `hsl(${uColor.h}, 100%, 50%)`);\n\n    // Color box (saturation and lightness) config\n    // Defining the box and dragger\n    const boxDragger = this._this.shadowRoot.getElementById('box_dragger');\n\n    // Calculating x value\n    let x = (238 / 100) * uColor.s + 14;\n\n    // Calculating y value\n    const percentY = 100 - (uColor.l / (100 - uColor.s / 2)) * 100;\n    let y = (105 / 100) * percentY + 14;\n\n    // Making conditions so that the user don't drag outside the box\n    if (x < 14) x = 14;\n\n    if (x > 252) x = 252;\n\n    if (y < 14) y = 14;\n\n    if (y > 119) y = 119;\n\n    // Making changes the the UI\n    boxDragger.attributes.x.nodeValue = x;\n    boxDragger.attributes.y.nodeValue = y;\n\n    // Hue slider config\n    // Defining the hue slider and dragger\n    const hueSliderDragger = this._this.shadowRoot.getElementById('color_slider_dragger');\n\n    // Calculating x value\n    let percentHue = 100 - (uColor.h / 359) * 100;\n    let hueX = (244 / 100) * percentHue + 11;\n\n    // Making changes the the UI\n    hueSliderDragger.attributes.x.nodeValue = hueX;\n\n    // Alpha slider config\n    // Defining the opacity slider and dragger\n    const alphaSliderDragger = this._this.shadowRoot.getElementById('opacity_slider_dragger');\n\n    // Calculating x value\n    let alphaX = (244 / 100) * (uColor.a * 100) + 11;\n\n    // Making changes the the UI\n    alphaSliderDragger.attributes.x.nodeValue = alphaX;\n  },\n\n  // Update the color value inputs\n  updateColorValueInput: function() {\n    // Checking the value color type the user has selected\n    if (this._this.colorTypeStatus === 'HEXA') {\n      // Converting the value\n      const hexValue = HSLAToRGBA(this._this.hue, this._this.saturation, this._this.lightness, this._this.alpha, true);\n\n      // Applying the value to the input\n      this._this.shadowRoot.getElementById('hex_input').value = hexValue;\n    } else if (this._this.colorTypeStatus === 'RGBA') {\n      // Converting the value\n      const RGBAValue = HSLAToRGBA(this._this.hue, this._this.saturation, this._this.lightness, this._this.alpha);\n\n      // Applying the value to the inputs\n      this._this.shadowRoot.querySelectorAll('.rgba_input')[0].value = RGBAValue.r;\n      this._this.shadowRoot.querySelectorAll('.rgba_input')[1].value = RGBAValue.g;\n      this._this.shadowRoot.querySelectorAll('.rgba_input')[2].value = RGBAValue.b;\n      this._this.shadowRoot.querySelectorAll('.rgba_input')[3].value = RGBAValue.a;\n    } else {\n      // Applying the value to the inputs\n      this._this.shadowRoot.querySelectorAll('.hsla_input')[0].value = this._this.hue;\n      this._this.shadowRoot.querySelectorAll('.hsla_input')[1].value = this._this.saturation;\n      this._this.shadowRoot.querySelectorAll('.hsla_input')[2].value = this._this.lightness;\n      this._this.shadowRoot.querySelectorAll('.hsla_input')[3].value = this._this.alpha;\n    }\n  }\n}\n\nexport default UpdatePicker;","import html from './wc-colr-pickr.html';\nimport scss from './wc-colr-pickr.scss';\nimport ColorChangeEvent from './mixins/color-change-event';\nimport ColorTextValues from './mixins/color-text-values';\nimport CustomColor from './mixins/custom-color';\nimport HueSlider from './mixins/hue-slider';\nimport OpacitySlider from './mixins/opacity-slider';\nimport SaturationLightnessBox from './mixins/saturation-lightness-box';\nimport UpdatePicker from './mixins/update-picker';\n\n/**\n * Private properties used inside the module.\n * @type {Object}\n */\nconst Static = {\n  elementInstance: 0,\n  component: 'wc-colr-pickr',\n  htmlText: html,\n  cssText: `<style>${scss}</style>`,\n  debug: !production,\n};\nObject.seal(Static);\n\n/**\n * WCColrPickr web component.\n *\n * @element wc-colr-pickr\n */\nexport class WCColrPickr extends HTMLElement {\n  /**\n   * Creates an instance of WCColrPickr.\n   * @memberof WCColrPickr\n   */\n  constructor() {\n    super();\n    Static.elementInstance++;\n    this.attachShadow({ mode: 'open' });\n    this.listeners = [];\n\n    this.pickerOpen = false;\n    this.instance = null;\n    this.boxStatus = false;\n    this.boxStatusTouch = false;\n    this.sliderStatus = false;\n    this.sliderStatusTouch = false;\n    this.opacityStatus = false;\n    this.opacityStatusTouch = false;\n    this.colorTypeStatus = 'HEXA';\n    this.hue = 0;\n    this.saturation = 100;\n    this.lightness = 50;\n    this.alpha = 1;\n    this.contextMenuElem = null;\n    this.doubleTapTime = 0;\n    this.LSCustomColors = { 0: [\n      {\n        'value': 'red',\n      }, {\n        'value': 'blue',\n      }, {\n        'value': 'green',\n      }, {\n        'value': 'yellow',\n      }, {\n        'value': 'purple',\n      }, {\n        'value': 'orange',\n      }, {\n        'value': 'lime',\n      }\n    ] };\n    UpdatePicker._this = this;\n    SaturationLightnessBox._this = this;\n    OpacitySlider._this = this;\n    ColorChangeEvent._this = this;\n    CustomColor._this = this;\n    ColorTextValues._this = this;\n    HueSlider._this = this;\n  }\n\n  updateColorDisplays(color) {\n    UpdatePicker.updateColorDisplays(color);\n  }\n\n  updateColorValueInput() {\n    UpdatePicker.updateColorValueInput();\n  }\n\n  /**\n   * Invoked when the custom element is first connected to the document's DOM\n   * @memberof WCColrPickr\n   */\n  connectedCallback() {\n    // add css and html to the shadowRoot\n    this.shadowRoot.innerHTML = Static.cssText + Static.htmlText;\n\n    // init properties by attributes or set default\n    if (Static.debug) {\n      console.debug(`${Static.component}.connectedCallback, initialized properties:`);\n    }\n\n    // add eventlisteners from attributes\n    this.addEventListenersFromAttributes();\n    this.initPickR();\n    ColorTextValues.connectedCallback();\n    CustomColor.connectedCallback();\n    HueSlider.connectedCallback();\n    OpacitySlider.connectedCallback();\n    SaturationLightnessBox.connectedCallback();\n  }\n\n  /**\n   * Invoked when the custom element is disconnected from the document's DOM\n   * @memberof WCColrPickr\n   */\n  disconnectedCallback() {\n    if (Static.debug) {\n      console.debug(`${Static.component}.disconnectCallback`);\n    }\n    this.listeners.forEach((listener) => listener.element.removeEventListener(listener.event, listener.function));\n  }\n\n  /**\n   * Invoked when the custom element is moved to a new document\n   * @memberof WCColrPickr\n   */\n  adoptedCallback() {\n    if (Static.debug) {\n      console.debug(`${Static.component}.adoptedCallback`, this);\n    }\n  }\n\n  /**\n   * Invoked each time one of the custom element's attributes is added, removed, or changed.\n   * Which attributes to notice change for is specified in a static get observedAttributes method\n   * @param {String} attrName\n   * @param {String} oldValue\n   * @param {String} newValue\n   * @memberof WCColrPickr\n   */\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (oldValue !== newValue && this[attrName]) {\n      this[attrName] = newValue;\n    }\n  }\n\n  /**\n   * Specifies which attributes are observed (attributeChangedCallback will only invoked for the specified attributes).\n   * @readonly\n   * @static\n   * @type {[String]}\n   * @memberof WCColrPickr\n   */\n  static get observedAttributes() {\n    return [];\n  }\n\n  /**\n   * Adds any event listeners defined with the data-action attribute defined on elements inside your template.\n   * Example: <div data-action=\"click:handleClick\"> will listen for the click event with this.handleClick as target.\n   * @memberof WCColrPickr\n   */\n  addEventListenersFromAttributes() {\n    Array.from(this.shadowRoot.querySelectorAll('[data-action]')).forEach((element) => {\n      const actions = element.getAttribute('data-action').split(' ');\n\n      actions.forEach((action) => {\n        try {\n          let targetEvent = action.split(':')[0];\n          let targetFunc = action.split(':')[1];\n\n          if (this[targetFunc]) {\n            element.addEventListener(targetEvent, this[targetFunc]);\n            // add to listeners for removal on disconnect\n            this.listeners.push({\n              element: element,\n              function: this[targetFunc],\n              event: targetEvent,\n            });\n          } else {\n            console.error(`${Static.component}.addEventListenersFromAttributes: target function ${targetFunc} is undefined!`);\n          }\n        } catch (error) {\n          console.error(`{Static.component}.addEventListenersFromAttributes failed for element: `, element, action);\n        }\n      });\n    });\n  }\n\n  initPickR() {\n    // Checking if a local storage variable has been set\n    if (localStorage.getItem('custom_colors') === null) {\n      // If not then I set one\n      localStorage.setItem('custom_colors', JSON.stringify(this.LSCustomColors));\n    } else {\n      // If it has then I define the LSCustomColors with the value for this\n      this.LSCustomColors = JSON.parse(localStorage.getItem('custom_colors'));\n    }\n     \n    // Looping through the data to update the DOM with the custom colors\n    for (let x = this.LSCustomColors[0].length - 1; x >= 0; x--) {\n      // Creating the element\n      let customColorElem = document.createElement('BUTTON');\n      customColorElem.className = 'custom_colors_preview';\n      customColorElem.style.background = this.LSCustomColors[0][x].value;\n      customColorElem.setAttribute('data-custom-color', this.LSCustomColors[0][x].value);\n      customColorElem.setAttribute(\n        'title', \n        this.LSCustomColors[0][x].label ?\n        this.LSCustomColors[0][x].value : \n        this.LSCustomColors[0][x].value\n      );\n\n      // Placing the element in the DOM\n      this.shadowRoot.getElementById('custom_colors_box').appendChild(customColorElem);\n    }\n\n    // Adding the object to the elements object\n    this.colorPickerObj = this;\n    this.button = this.shadowRoot.getElementById('toggle_pickr');\n\n    // Setting color value as a data attribute and changing elements color if color param is given\n    this.button.setAttribute('data-color', '#ff0000');\n    this.button.style.background = '#ff0000';\n\n    // Click listener to have the button open the color picker interface\n    this.button.addEventListener('click', () => {\n      // Update state\n      this.pickerOpen = true;\n\n      // Define picker\n      const picker = this.shadowRoot.getElementById('color_picker');\n\n      // Displaying the color picker\n      picker.style.display = 'grid';\n\n      // Find position of button\n      let top = this.button.getBoundingClientRect().top;\n      let left = this.button.getBoundingClientRect().left;\n\n      // If the picker will go off bottom of screen...\n      if (top + picker.offsetHeight > window.innerHeight) {\n        // Place it above the button\n        top = top - picker.offsetHeight - 2;\n      }\n      // If the picker will go off top of screen...\n      else {\n        // Place it beneath the button\n        top = top + this.button.offsetHeight + 2;\n      }\n\n      // If the picker will go off the right of screen...\n      if (left + picker.offsetWidth > window.innerWidth - 20) {\n        // Calculate the difference\n        let difference = left + picker.offsetWidth - window.innerWidth;\n\n        // Move the picker back by the difference\n        left = left - difference - 20;\n      }\n\n      // Applying the position\n      picker.style.top = top + 'px';\n      picker.style.left = left + 'px';\n\n      // Updating the color picker\n      this.updateColorDisplays(this.button.getAttribute('data-color'));\n\n      // Focus on a picker item\n      this.shadowRoot.getElementById('color_text_values').focus();\n\n      picker.addEventListener('keydown', this.keyShortcuts.bind(this));\n    });\n\n    // Remove outline from tabbing\n    this.shadowRoot.querySelector('.wc-colr-pickr').addEventListener('mousedown', () => {\n      // Define outline element\n      let outlineElements = this.shadowRoot.querySelectorAll('.add_outline');\n\n      // Loop through the array of outline element until they are all gone\n      while (outlineElements.length > 0) {\n        // Remove outline\n        outlineElements[0].classList.add('remove_outline');\n\n        // Remove outline class\n        outlineElements[0].classList.remove('add_outline');\n\n        // Update list\n        outlineElements = this.shadowRoot.querySelectorAll('.add_outline');\n      }\n    });\n\n    // Click anywhere to close a pop-up\n    window.addEventListener('mousedown', (event) => {\n      // Close context menu\n      if (event.target.id !== 'color_context_menu') {\n        this.shadowRoot.getElementById('color_context_menu').style.display = 'none';\n      }\n    });\n\n    // Click the darken background to close the color picker\n    window.addEventListener('mousedown', (event) => {\n      // Define the target\n      let target = event.target;\n      // close if picker is open and target is picker tag...\n      if (this.pickerOpen && target.tagName !== 'WC-COLR-PICKR') {\n        this.closePicker();\n      }\n    });\n\n    // When scrolling\n    window.addEventListener('scroll', () => {\n      // If picker is open...\n      if (this.pickerOpen) {\n        this.closePicker(); // Close picker\n      }\n    });\n\n    // When using mouse wheel\n    window.addEventListener('resize', () => {\n      // If picker is open...\n      if (this.pickerOpen) {\n        this.closePicker(); // Close picker\n      }\n    });\n  }\n\n  keyShortcuts(event) {\n    // Define key code\n    const key = event.keyCode;\n\n    // Check for key code\n    switch (key) {\n      // Del\n      case 46:\n        // If focused element is a custom color...\n        if (document.activeElement.className === 'custom_colors_preview') {\n          // Delete it\n          CustomColor.clearSingleCustomColor(document.activeElement);\n        }\n        break;\n      // Esc\n      case 27:\n        // If picker is open...\n        if (this.pickerOpen) {\n          this.closePicker(); // Close picker\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  // Close the picker\n  closePicker() {\n    // Update state\n    this.pickerOpen = false;\n\n    // Hiding elements\n    this.shadowRoot.getElementById('color_picker').style.display = 'none';\n\n    // Checking if the color for this instance has not been set yet\n    if (!this.button.getAttribute('data-color')) {\n      return;\n    }\n\n    // Update\n    this.updatePicker();\n  }\n\n  updatePicker() {\n    // Calling Event to make all the necessary changes\n    ColorChangeEvent.colorChange({\n      h: this.hue,\n      s: this.saturation,\n      l: this.lightness,\n      a: this.alpha,\n    });\n  }\n}\nwindow.customElements.define('wc-colr-pickr', WCColrPickr);\n"],"sourceRoot":""}