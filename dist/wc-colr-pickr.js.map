{"version":3,"sources":["webpack://@tekrisk/wc_colr_pickr/./src/components/wc-colr-pickr/wc-colr-pickr.scss","webpack://@tekrisk/wc_colr_pickr/./node_modules/css-loader/dist/runtime/api.js","webpack://@tekrisk/wc_colr_pickr/./node_modules/css-loader/dist/runtime/cssWithMappingToString.js","webpack://@tekrisk/wc_colr_pickr/webpack/bootstrap","webpack://@tekrisk/wc_colr_pickr/webpack/runtime/compat get default export","webpack://@tekrisk/wc_colr_pickr/webpack/runtime/define property getters","webpack://@tekrisk/wc_colr_pickr/webpack/runtime/hasOwnProperty shorthand","webpack://@tekrisk/wc_colr_pickr/./node_modules/lit-html/lib/dom.js","webpack://@tekrisk/wc_colr_pickr/./node_modules/lit-html/lib/template.js","webpack://@tekrisk/wc_colr_pickr/./node_modules/lit-html/lib/modify-template.js","webpack://@tekrisk/wc_colr_pickr/./node_modules/lit-html/lib/directive.js","webpack://@tekrisk/wc_colr_pickr/./node_modules/lit-html/lib/part.js","webpack://@tekrisk/wc_colr_pickr/./node_modules/lit-html/lib/template-instance.js","webpack://@tekrisk/wc_colr_pickr/./node_modules/lit-html/lib/template-result.js","webpack://@tekrisk/wc_colr_pickr/./node_modules/lit-html/lib/parts.js","webpack://@tekrisk/wc_colr_pickr/./node_modules/lit-html/lib/template-factory.js","webpack://@tekrisk/wc_colr_pickr/./node_modules/lit-html/lib/render.js","webpack://@tekrisk/wc_colr_pickr/./node_modules/lit-html/lib/default-template-processor.js","webpack://@tekrisk/wc_colr_pickr/./node_modules/lit-html/lit-html.js","webpack://@tekrisk/wc_colr_pickr/./node_modules/lit-html/lib/shady-render.js","webpack://@tekrisk/wc_colr_pickr/./node_modules/lit-element/lib/updating-element.js","webpack://@tekrisk/wc_colr_pickr/./node_modules/lit-element/lib/decorators.js","webpack://@tekrisk/wc_colr_pickr/./node_modules/lit-element/lib/css-tag.js","webpack://@tekrisk/wc_colr_pickr/./node_modules/lit-element/lit-element.js","webpack://@tekrisk/wc_colr_pickr/./src/components/wc-colr-pickr/utility/color-conversion.js","webpack://@tekrisk/wc_colr_pickr/./src/components/wc-colr-pickr/mixins/color-change-event.js","webpack://@tekrisk/wc_colr_pickr/./src/components/wc-colr-pickr/mixins/color-text-values.js","webpack://@tekrisk/wc_colr_pickr/./src/components/wc-colr-pickr/mixins/custom-color.js","webpack://@tekrisk/wc_colr_pickr/./src/components/wc-colr-pickr/mixins/hue-slider.js","webpack://@tekrisk/wc_colr_pickr/./src/components/wc-colr-pickr/mixins/opacity-slider.js","webpack://@tekrisk/wc_colr_pickr/./src/components/wc-colr-pickr/mixins/saturation-lightness-box.js","webpack://@tekrisk/wc_colr_pickr/./src/components/wc-colr-pickr/mixins/update-picker.js","webpack://@tekrisk/wc_colr_pickr/./src/components/wc-colr-pickr/wc-colr-pickr.js"],"names":["___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","concat","join","i","modules","mediaQuery","dedupe","alreadyImportedModules","length","_i","_slicedToArray","arr","Array","isArray","_arrayWithHoles","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","next","done","value","err","_iterableToArrayLimit","o","minLen","_arrayLikeToArray","n","prototype","call","slice","constructor","name","from","test","_unsupportedIterableToArray","TypeError","_nonIterableRest","len","arr2","_item","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","sourceURLs","sources","source","sourceRoot","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","getter","__esModule","d","a","definition","key","defineProperty","enumerable","get","obj","prop","hasOwnProperty","isCEPolyfill","window","customElements","polyfillWrapFlushCallback","removeNodes","container","start","end","nextSibling","removeChild","marker","String","Math","random","nodeMarker","markerRegex","RegExp","boundAttributeSuffix","Template","result","element","parts","nodesToRemove","stack","walker","document","createTreeWalker","lastPartIndex","index","partIndex","strings","values","node","nextNode","nodeType","hasAttributes","attributes","count","endsWith","stringForPart","lastAttributeNameRegex","exec","attributeLookupName","toLowerCase","attributeValue","getAttribute","removeAttribute","statics","split","type","tagName","currentNode","indexOf","parent","parentNode","lastIndex","insert","s","createMarker","match","createTextNode","insertBefore","previousSibling","pop","str","suffix","isTemplatePartActive","part","createComment","removeNodesFromTemplate","template","nextActiveIndexInTemplateParts","nodeIndex","removeCount","nodesToRemoveInTemplate","currentRemovingNode","has","forEach","countNodes","startIndex","directives","WeakMap","isDirective","noChange","nothing","TemplateInstance","processor","options","__parts","setValue","commit","fragment","cloneNode","importNode","nodeName","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","policy","trustedTypes","createPolicy","createHTML","commentMarker","TemplateResult","l","html","isCommentBinding","commentOpen","lastIndexOf","attributeMatch","substr","createElement","getHTML","innerHTML","isPrimitive","isIterable","AttributeCommitter","dirty","_createPart","AttributePart","v","text","t","setAttribute","_getValue","committer","directive","NodePart","__pendingValue","startNode","appendChild","endNode","ref","__insert","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","clear","valueAsString","templateFactory","update","instance","_clone","itemParts","itemPart","appendIntoPart","insertAfterPart","BooleanAttributePart","Error","PropertyCommitter","super","single","PropertyPart","eventOptionsSupported","addEventListener","removeEventListener","EventPart","eventName","eventContext","__boundHandleEvent","e","handleEvent","newListener","oldListener","shouldRemoveListener","capture","once","passive","shouldAddListener","__options","getOptions","event","templateCache","templateCaches","stringsArray","keyString","Map","set","getTemplateElement","DefaultTemplateProcessor","prefix","getTemplateCacheKey","scopeName","compatibleShadyCSSVersion","ShadyCSS","prepareTemplateDom","console","warn","shadyTemplateFactory","cacheKey","TEMPLATE_TYPES","shadyRenderSet","Set","prepareTemplateStyles","renderedDOM","add","templateElement","styles","querySelectorAll","condensedStyle","style","textContent","templates","removeStylesFromLitTemplates","refNode","insertCount","walkerIndex","insertNodeIntoTemplate","firstChild","querySelector","nativeShadow","removes","JSCompiler_renameProperty","_obj","defaultConverter","Boolean","Number","parse","notEqual","old","defaultPropertyDeclaration","attribute","converter","reflect","hasChanged","finalized","UpdatingElement","HTMLElement","initialize","finalize","_classProperties","p","attr","_attributeNameForProperty","_attributeToPropertyMap","superProperties","getPrototypeOf","k","_ensureClassProperties","noAccessor","descriptor","getPropertyDescriptor","oldValue","requestUpdateInternal","configurable","superCtor","props","properties","propKeys","getOwnPropertyNames","getOwnPropertySymbols","createProperty","fromAttribute","toAttribute","_updateState","_updatePromise","Promise","res","_enableUpdatingResolver","_changedProperties","_saveInstanceProperties","_v","_instanceProperties","enableUpdating","_attributeToProperty","ctor","attrValue","_propertyValueToAttribute","propName","getPropertyOptions","_propertyValueFromAttribute","shouldRequestUpdate","_valueHasChanged","_reflectingProperties","_hasRequestedUpdate","_enqueueUpdate","updateComplete","performUpdate","_applyInstanceProperties","shouldUpdate","changedProperties","_markUpdated","firstUpdated","updated","_getUpdateComplete","size","_propertyToAttribute","ElementProto","Element","msMatchesSelector","webkitMatchesSelector","supportsAdoptingStyleSheets","Document","CSSStyleSheet","constructionToken","CSSResult","cssText","safeToken","_styleSheet","replaceSync","css","reduce","acc","idx","textFromCSSResult","renderNotImplemented","LitElement","userStyles","getStyles","addStyles","reduceRight","unshift","_styles","cssRules","rule","_getUniqueStyles","renderRoot","createRenderRoot","ShadowRoot","adoptStyles","attachShadow","mode","adoptedStyleSheets","styleSheet","_needsShimAdoptedStyleSheets","ScopingShim","prepareAdoptedCssText","localName","connectedCallback","hasUpdated","styleElement","templateResult","render","hasRendered","needsScoping","host","firstScopeRender","renderContainer","createDocumentFragment","assign","appendInto","delete","HSLAToRGBA","h","toHex","_l","c","abs","x","m","r","g","b","round","_r","_g","_b","_a","RGBAToHexA","RGBAToHSLA","cmin","min","cmax","max","delta","toFixed","hexAToRGBA","toHSL","_h","substring","ColorChangeEvent","_component","colorChange","bind","color","_color","rgbaValue","hex","CustomEvent","detail","hsl","rgb","hsla","rgba","hexa","button","background","shadowRoot","dispatchEvent","ColorTextValues","switchColorType","handleHexBlur","handleRgbaChange","handleHslaChange","colorTypeStatus","getElementById","display","RGBAValue","hue","saturation","lightness","alpha","hexValue","hexInput","UpdatePicker","updateColorDisplays","updatePicker","rgbaInput","hslaInput","CustomColor","addCustomColor","contextCustomColor","clearSingleCustomColor","clearAllCustomColors","selectCustomColor","customColorElem","className","LSCustomColors","localStorage","setItem","_element","elemToRemove","contextMenuElem","0","isNaN","el","title","error","target","preventDefault","contextMenu","top","getBoundingClientRect","left","HueSlider","handleMouseDown","handleMouseMove","handleMouseUp","handleTouchStart","handleTouchMove","handleTouchEnd","colorSliderHandler","sliderStatus","pageX","sliderStatusTouch","changedTouches","clientX","position","sliderContainer","sliderDragger","eventX","nodeValue","percent","HColor","children","updateColorValueInput","OpacitySlider","opacityStatus","opacitySliderHandler","opacityStatusTouch","SaturationLightnessBox","colorBoxHandler","boxStatus","pageY","boxStatusTouch","clientY","positionX","positionY","touch","boxContainer","boxDragger","eventY","scrollY","y","SPercent","percentX","percentY","LPercent","floor","uColor","colors","getComputedStyle","parseInt","hueSliderDragger","hueX","alphaSliderDragger","alphaX","Static","elementInstance","component","debug","seal","define","WCColrPickr","selectedColor","pickerOpen","doubleTapTime","_togglePicker","_rootMouseMove","_rootMouseUp","_rootTouchMove","_rootTouchEnd","_getTemplate","initPickR","disconnectedCallback","adoptedCallback","getItem","closePicker","keyCode","activeElement","picker","offsetHeight","innerHeight","offsetWidth","innerWidth","focus","keyShortcuts","outlineElements","classList","remove","label"],"mappings":"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","file":"wc-colr-pickr.js","sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*!\\n * Colr Pickr\\n *\\n * R-TEK\\n * \\n * https://github.com/R-TEK/colr_pickr\\n * \\n * MIT License\\n */@-webkit-keyframes fadeIn{0%{opacity:0}100%{opacity:.5}}@-moz-keyframes fadeIn{0%{opacity:0}100%{opacity:.5}}@-ms-keyframes fadeIn{0%{opacity:0}100%{opacity:.5}}@keyframes fadeIn{0%{opacity:0}100%{opacity:.5}}@-webkit-keyframes popUp{0%{transform:scale(1)}50%{transform:scale(1.05)}100%{transform:scale(1)}}@-moz-keyframes popUp{0%{transform:scale(1)}50%{transform:scale(1.05)}100%{transform:scale(1)}}@-ms-keyframes popUp{0%{transform:scale(1)}50%{transform:scale(1.05)}100%{transform:scale(1)}}@keyframes popUp{0%{transform:scale(1)}50%{transform:scale(1.05)}100%{transform:scale(1)}}#color_picker input{height:30px;border:1px solid #ccc;outline:none;font-family:monospace;font-size:12px;color:#333;text-align:center}#color_picker input:focus{border:1px solid #007cff}#color_picker input::-webkit-outer-spin-button,#color_picker input::-webkit-inner-spin-button{-webkit-appearance:none;margin:0}#color_picker input[type=number]{-moz-appearance:textfield}:host{display:inline-block}:host[hidden]{display:none}.wc-colr-pickr .picker-container{display:none;grid-template-columns:min-content min-content min-content min-content;grid-template-rows:min-content min-content min-content;gap:0px 0px;grid-template-areas:\\\"picker-main picker-custom-colors . .\\\" \\\". . . .\\\" \\\". . . .\\\";background-color:#fff;padding:5px;height:245px;border:1px solid #ccc;border-radius:5px;z-index:99999}.wc-colr-pickr .picker-main{display:grid;grid-template-columns:100%;grid-template-rows:min-content min-content min-content;gap:0px 0px;grid-template-areas:\\\".\\\" \\\".\\\" \\\".\\\";grid-area:picker-main}.wc-colr-pickr .picker-custom-colors{display:grid;grid-template-columns:100%;grid-template-rows:min-content;gap:0px 0px;grid-template-areas:\\\".\\\";grid-area:picker-custom-colors}.wc-colr-pickr button{width:50px;height:1rem;vertical-align:text-top;display:inline-block;margin-right:.5rem;border:none;outline:1px solid var(--wc-colr-pickr-border-color, lightgrey)}.wc-colr-pickr #color_picker{display:none;position:fixed;user-select:none;-webkit-user-select:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;-webkit-animation:popUp ease .2s;-moz-animation:popUp ease .2s;-ms-animation:popUp ease .2s;animation:popUp ease .2s}.wc-colr-pickr #color_picker #sliders{width:263px}.wc-colr-pickr #color_picker #color_slider{position:relative;bottom:1px}.wc-colr-pickr #color_picker #color_text_values{padding:12px 0 2px 0;margin-top:9px;border-top:1px solid #ccc;outline:none;text-align:center}.wc-colr-pickr #color_picker #switch_color_type{position:absolute;padding:0;left:25px;width:24px;height:23px;bottom:33px;background:none;border:none;cursor:pointer}.wc-colr-pickr #color_picker .label_text{position:relative;margin:0 !important;height:15px;top:2px;font-family:Arial,Helvetica,sans-serif;font-size:12px;color:#555}.wc-colr-pickr #color_picker #hex_input{width:100px}.wc-colr-pickr #color_picker .rgba_divider,.wc-colr-pickr #color_picker .hsla_divider{display:inline-block}.wc-colr-pickr #color_picker .rgba_input,.wc-colr-pickr #color_picker .hsla_input{margin:0 1px;width:35px}.wc-colr-pickr #color_picker #custom_colors{text-align:left}.wc-colr-pickr #color_picker #custom_colors_header{height:35px;width:85px}.wc-colr-pickr #color_picker #custom_colors_pallet_icon{margin:9px 11px}.wc-colr-pickr #color_picker #custom_colors_add{display:inline-block;position:absolute;margin:5px 0;padding:0;width:24px;height:23px;right:9px;background:none;border:none;outline:none;cursor:pointer}.wc-colr-pickr #color_picker #custom_colors_box{padding:0 0 0 10px;height:calc(100% - 35px);overflow-x:hidden;overflow-y:auto}.wc-colr-pickr #color_picker .custom_colors_preview{position:relative;margin:0 7px 6px 0;width:18px;height:18px;top:1px;border:1px solid #d0d0d0;border-radius:3px;outline:none;cursor:pointer;transition:all .2s}.wc-colr-pickr #color_picker .custom_colors_preview:hover{transform:scale(1.1)}.wc-colr-pickr #color_picker .custom_colors_preview:focus{transform:scale(1.1)}.wc-colr-pickr #color_picker #color_context_menu{display:none;position:fixed;padding:3px 0;width:115px;background:#fff;border:1px solid #ccc;border-radius:5px}.wc-colr-pickr #color_picker #color_clear_single,.wc-colr-pickr #color_picker #color_clear_all{padding:4px;width:100%;background:none;border:none;outline:none;font-family:Arial,Helvetica,sans-serif;font-size:12px;color:#111;text-align:left;cursor:pointer}.wc-colr-pickr #color_picker #color_clear_single:hover,.wc-colr-pickr #color_picker #color_clear_all:hover{background-color:#ececec}.wc-colr-pickr #color_picker .add_outline:focus{outline:1px solid #007cff !important}.wc-colr-pickr #color_picker .remove_outline{outline:none}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/wc-colr-pickr/wc-colr-pickr.scss\",\"webpack://./src/scss/_config.scss\",\"webpack://./src/scss/_animations.scss\",\"webpack://./src/scss/_inputs.scss\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"/*!\\n * Colr Pickr\\n *\\n * R-TEK\\n * \\n * https://github.com/R-TEK/colr_pickr\\n * \\n * MIT License\\n */\\n\\n@import 'config';\\n@import 'animations';\\n@import 'inputs';\\n\\n:host {\\n  display: inline-block;\\n\\n  &[hidden] {\\n    display: none;\\n  }\\n}\\n\\n.wc-colr-pickr {\\n  // colorpicker grid\\n  .picker-container {\\n    display: none;\\n    grid-template-columns: min-content min-content min-content min-content;\\n    grid-template-rows: min-content min-content min-content;\\n    gap: 0px 0px;\\n    grid-template-areas:\\n      'picker-main picker-custom-colors . .'\\n      '. . . .'\\n      '. . . .';\\n    background-color: #fff;\\n    padding: 5px;\\n    height: 245px;\\n    border: 1px solid #ccc;\\n    border-radius: 5px;\\n    z-index: 99999;\\n  }\\n\\n  .picker-main {\\n    display: grid;\\n    grid-template-columns: 100%;\\n    grid-template-rows: min-content min-content min-content;\\n    gap: 0px 0px;\\n    grid-template-areas:\\n      '.'\\n      '.'\\n      '.';\\n    grid-area: picker-main;\\n  }\\n\\n  .picker-custom-colors {\\n    display: grid;\\n    grid-template-columns: 100%;\\n    grid-template-rows: min-content;\\n    gap: 0px 0px;\\n    grid-template-areas: '.';\\n    grid-area: picker-custom-colors;\\n  }\\n\\n  button {\\n    width: 50px;\\n    height: 1rem;\\n    vertical-align: text-top;\\n    display: inline-block;\\n    margin-right: 0.5rem;\\n    border: none;\\n    outline: 1px solid var(--wc-colr-pickr-border-color, lightgrey);\\n  }\\n\\n  #color_picker {\\n    display: none;\\n    position: fixed;\\n    @include no-select;\\n    @include animation(popUp ease 0.2s);\\n  }\\n\\n  #color_picker {\\n    #sliders {\\n      width: 263px;\\n    }\\n\\n    #color_slider {\\n      position: relative;\\n      bottom: 1px;\\n    }\\n\\n    #color_text_values {\\n      padding: 12px 0 2px 0;\\n      margin-top: 9px;\\n      border-top: 1px solid #ccc;\\n      outline: none;\\n      text-align: center;\\n    }\\n\\n    #switch_color_type {\\n      position: absolute;\\n      padding: 0;\\n      left: 25px;\\n      width: 24px;\\n      height: 23px;\\n      bottom: 33px;\\n      background: none;\\n      border: none;\\n      cursor: pointer;\\n    }\\n\\n    .label_text {\\n      position: relative;\\n      margin: 0 !important;\\n      height: 15px;\\n      top: 2px;\\n      font-family: $font;\\n      font-size: 12px;\\n      color: $light-text;\\n    }\\n\\n    #hex_input {\\n      width: 100px;\\n    }\\n\\n    .rgba_divider,\\n    .hsla_divider {\\n      display: inline-block;\\n    }\\n\\n    .rgba_input,\\n    .hsla_input {\\n      margin: 0 1px;\\n      width: 35px;\\n    }\\n\\n    #custom_colors {\\n      text-align: left;\\n    }\\n\\n    #custom_colors_header {\\n      height: 35px;\\n      width: 85px;\\n    }\\n\\n    #custom_colors_pallet_icon {\\n      margin: 9px 11px;\\n    }\\n\\n    #custom_colors_add {\\n      display: inline-block;\\n      position: absolute;\\n      margin: 5px 0;\\n      padding: 0;\\n      width: 24px;\\n      height: 23px;\\n      right: 9px;\\n      background: none;\\n      border: none;\\n      outline: none;\\n      cursor: pointer;\\n    }\\n\\n    #custom_colors_box {\\n      padding: 0 0 0 10px;\\n      height: calc(100% - 35px);\\n      overflow-x: hidden;\\n      overflow-y: auto;\\n    }\\n\\n    .custom_colors_preview {\\n      position: relative;\\n      margin: 0 7px 6px 0;\\n      width: 18px;\\n      height: 18px;\\n      top: 1px;\\n      border: 1px solid #d0d0d0;\\n      border-radius: 3px;\\n      outline: none;\\n      cursor: pointer;\\n      transition: $quickTransition;\\n    }\\n\\n    .custom_colors_preview:hover {\\n      transform: $hoverEnlarge;\\n    }\\n\\n    .custom_colors_preview:focus {\\n      transform: $hoverEnlarge;\\n    }\\n\\n    #color_context_menu {\\n      display: none;\\n      position: fixed;\\n      padding: 3px 0;\\n      width: 115px;\\n      background: #fff;\\n      border: 1px solid #ccc;\\n      border-radius: 5px;\\n    }\\n\\n    #color_clear_single,\\n    #color_clear_all {\\n      padding: 4px;\\n      width: 100%;\\n      background: none;\\n      border: none;\\n      outline: none;\\n      font-family: $font;\\n      font-size: 12px;\\n      color: $dark-text;\\n      text-align: left;\\n      cursor: pointer;\\n    }\\n\\n    #color_clear_single:hover,\\n    #color_clear_all:hover {\\n      background-color: #ececec;\\n    }\\n\\n    .add_outline:focus {\\n      outline: 1px solid #007cff !important;\\n    }\\n\\n    .remove_outline {\\n      outline: none;\\n    }\\n  }\\n}\\n\",\"/*\\n * Variables\\n */\\n\\n// Backgrounds\\n$hoverEnlarge: scale(1.1);\\n\\n// Texts\\n$font: Arial, Helvetica, sans-serif;\\n$dark-text: #111;\\n$light-text: #555;\\n\\n// Effects\\n$quickTransition: all 0.2s;\\n\\n/*\\n * Mixins\\n */\\n\\n// User-select for different browsers\\n@mixin no-select {\\n  user-select: none;\\n  -webkit-user-select: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n}\\n\\n// Adding prefixes to animation creations\\n@mixin keyframes($animationName) {\\n  @-webkit-keyframes #{$animationName} {\\n    $browser: '-webkit-' !global;\\n    @content;\\n  }\\n  @-moz-keyframes #{$animationName} {\\n    $browser: '-moz-' !global;\\n    @content;\\n  }\\n  @-ms-keyframes #{$animationName} {\\n    $browser: '-moz-' !global;\\n    @content;\\n  }\\n  @keyframes #{$animationName} {\\n    $browser: '' !global;\\n    @content;\\n  }\\n}\\n$browser: null;\\n\\n// Adding prefixes to the animation properties\\n@mixin animation($animation) {\\n  -webkit-animation: $animation;\\n  -moz-animation: $animation;\\n  -ms-animation: $animation;\\n  animation: $animation;\\n}\\n\",\"/*\\n * Animations\\n */\\n\\n// Fade in\\n@include keyframes(fadeIn) {\\n  0% {\\n    opacity: 0;\\n  }\\n  100% {\\n    opacity: 0.5;\\n  }\\n}\\n\\n// Animation to resemble it popping up and back down, like a bounce effect\\n@include keyframes(popUp) {\\n  0% {\\n    transform: scale(1);\\n  }\\n  50% {\\n    transform: scale(1.05);\\n  }\\n  100% {\\n    transform: scale(1);\\n  }\\n}\\n\",\"/*\\n * Styling for inputs\\n */\\n\\n#color_picker {\\n  input {\\n    height: 30px;\\n    border: 1px solid #ccc;\\n    outline: none;\\n    font-family: monospace;\\n    font-size: 12px;\\n    color: #333;\\n    text-align: center;\\n  }\\n\\n  input:focus {\\n    border: 1px solid #007cff;\\n  }\\n\\n  /* Remove spinner buttons */\\n\\n  input::-webkit-outer-spin-button,\\n  input::-webkit-inner-spin-button {\\n    -webkit-appearance: none;\\n    margin: 0;\\n  }\\n\\n  input[type='number'] {\\n    -moz-appearance: textfield;\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","\"use strict\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nmodule.exports = function cssWithMappingToString(item) {\n  var _item = _slicedToArray(item, 4),\n      content = _item[1],\n      cssMapping = _item[3];\n\n  if (typeof btoa === 'function') {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = typeof window !== 'undefined' &&\n    window.customElements != null &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updatable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = \n// eslint-disable-next-line no-control-regex\n/([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isTemplatePartActive } from './template.js';\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(template, nodesToRemove) {\n    const { element: { content }, parts } = template;\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let part = parts[partIndex];\n    let nodeIndex = -1;\n    let removeCount = 0;\n    const nodesToRemoveInTemplate = [];\n    let currentRemovingNode = null;\n    while (walker.nextNode()) {\n        nodeIndex++;\n        const node = walker.currentNode;\n        // End removal if stepped past the removing node\n        if (node.previousSibling === currentRemovingNode) {\n            currentRemovingNode = null;\n        }\n        // A node to remove was found in the template\n        if (nodesToRemove.has(node)) {\n            nodesToRemoveInTemplate.push(node);\n            // Track node we're removing\n            if (currentRemovingNode === null) {\n                currentRemovingNode = node;\n            }\n        }\n        // When removing, increment count by which to adjust subsequent part indices\n        if (currentRemovingNode !== null) {\n            removeCount++;\n        }\n        while (part !== undefined && part.index === nodeIndex) {\n            // If part is in a removed node deactivate it by setting index to -1 or\n            // adjust the index as needed.\n            part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n            // go to the next active part.\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n            part = parts[partIndex];\n        }\n    }\n    nodesToRemoveInTemplate.forEach((n) => n.parentNode.removeChild(n));\n}\nconst countNodes = (node) => {\n    let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n    const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n    while (walker.nextNode()) {\n        count++;\n    }\n    return count;\n};\nconst nextActiveIndexInTemplateParts = (parts, startIndex = -1) => {\n    for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n            return i;\n        }\n    }\n    return -1;\n};\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(template, node, refNode = null) {\n    const { element: { content }, parts } = template;\n    // If there's no refNode, then put node at end of template.\n    // No part indices need to be shifted in this case.\n    if (refNode === null || refNode === undefined) {\n        content.appendChild(node);\n        return;\n    }\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let insertCount = 0;\n    let walkerIndex = -1;\n    while (walker.nextNode()) {\n        walkerIndex++;\n        const walkerNode = walker.currentNode;\n        if (walkerNode === refNode) {\n            insertCount = countNodes(node);\n            refNode.parentNode.insertBefore(node, refNode);\n        }\n        while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n            // If we've inserted the node, simply adjust all subsequent parts\n            if (insertCount > 0) {\n                while (partIndex !== -1) {\n                    parts[partIndex].index += insertCount;\n                    partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n                }\n                return;\n            }\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n    }\n}\n//# sourceMappingURL=modify-template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari does not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = window.trustedTypes &&\n    trustedTypes.createPolicy('lit-html', { createHTML: (s) => s });\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment position.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        let value = this.getHTML();\n        if (policy !== undefined) {\n            // this is secure because `this.strings` is a TemplateStringsArray.\n            // TODO: validate this when\n            // https://github.com/tc39/proposal-array-is-template-object is\n            // implemented.\n            value = policy.createHTML(value);\n        }\n        template.innerHTML = value;\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attribute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        const parts = this.parts;\n        // If we're assigning an attribute via syntax like:\n        //    attr=\"${foo}\"  or  attr=${foo}\n        // but not\n        //    attr=\"${foo} ${bar}\" or attr=\"${foo} baz\"\n        // then we don't want to coerce the attribute value into one long\n        // string. Instead we want to just return the value itself directly,\n        // so that sanitizeDOMValue can get the actual value rather than\n        // String(value)\n        // The exception is if v is an array, in which case we do want to smash\n        // it together into a string without calling String() on the array.\n        //\n        // This also allows trusted values (when using TrustedTypes) being\n        // assigned to DOM sinks without being stringified in the process.\n        if (l === 1 && strings[0] === '' && strings[1] === '') {\n            const v = parts[0].value;\n            if (typeof v === 'symbol') {\n                return String(v);\n            }\n            if (typeof v === 'string' || !isIterable(v)) {\n                return v;\n            }\n        }\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        if (this.startNode.parentNode === null) {\n            return;\n        }\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the third\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n// blocks right into the body of a module\n(() => {\n    try {\n        const options = {\n            get capture() {\n                eventOptionsSupported = true;\n                return false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.addEventListener('test', options, options);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.removeEventListener('test', options, options);\n    }\n    catch (_e) {\n        // event options not supported\n    }\n})();\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @packageDocumentation\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n    (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.3.0');\n}\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @packageDocumentation\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { removeNodes } from './dom.js';\nimport { insertNodeIntoTemplate, removeNodesFromTemplate } from './modify-template.js';\nimport { parts, render as litRender } from './render.js';\nimport { templateCaches } from './template-factory.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { marker, Template } from './template.js';\nexport { html, svg, TemplateResult } from '../lit-html.js';\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;\nlet compatibleShadyCSSVersion = true;\nif (typeof window.ShadyCSS === 'undefined') {\n    compatibleShadyCSSVersion = false;\n}\nelse if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n    console.warn(`Incompatible ShadyCSS version detected. ` +\n        `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n        `@webcomponents/shadycss@1.3.1.`);\n    compatibleShadyCSSVersion = false;\n}\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nexport const shadyTemplateFactory = (scopeName) => (result) => {\n    const cacheKey = getTemplateCacheKey(result.type, scopeName);\n    let templateCache = templateCaches.get(cacheKey);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(cacheKey, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    const key = result.strings.join(marker);\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n            window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n    }\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n};\nconst TEMPLATE_TYPES = ['html', 'svg'];\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName) => {\n    TEMPLATE_TYPES.forEach((type) => {\n        const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n        if (templates !== undefined) {\n            templates.keyString.forEach((template) => {\n                const { element: { content } } = template;\n                // IE 11 doesn't support the iterable param Set constructor\n                const styles = new Set();\n                Array.from(content.querySelectorAll('style')).forEach((s) => {\n                    styles.add(s);\n                });\n                removeNodesFromTemplate(template, styles);\n            });\n        }\n    });\n};\nconst shadyRenderSet = new Set();\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles = (scopeName, renderedDOM, template) => {\n    shadyRenderSet.add(scopeName);\n    // If `renderedDOM` is stamped from a Template, then we need to edit that\n    // Template's underlying template element. Otherwise, we create one here\n    // to give to ShadyCSS, which still requires one while scoping.\n    const templateElement = !!template ? template.element : document.createElement('template');\n    // Move styles out of rendered DOM and store.\n    const styles = renderedDOM.querySelectorAll('style');\n    const { length } = styles;\n    // If there are no styles, skip unnecessary work\n    if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n        return;\n    }\n    const condensedStyle = document.createElement('style');\n    // Collect styles into a single style. This helps us make sure ShadyCSS\n    // manipulations will not prevent us from being able to fix up template\n    // part indices.\n    // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n    // currently does this anyway. When it does not, this should be changed.\n    for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode.removeChild(style);\n        condensedStyle.textContent += style.textContent;\n    }\n    // Remove styles from nested templates in this scope.\n    removeStylesFromLitTemplates(scopeName);\n    // And then put the condensed style into the \"root\" template passed in as\n    // `template`.\n    const content = templateElement.content;\n    if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n    }\n    else {\n        content.insertBefore(condensedStyle, content.firstChild);\n    }\n    // Note, it's important that ShadyCSS gets the template that `lit-html`\n    // will actually render so that it can update the style inside when\n    // needed (e.g. @apply native Shadow DOM case).\n    window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n    const style = content.querySelector('style');\n    if (window.ShadyCSS.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n    }\n    else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n    }\n};\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render = (result, container, options) => {\n    if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n    }\n    const scopeName = options.scopeName;\n    const hasRendered = parts.has(container);\n    const needsScoping = compatibleShadyCSSVersion &&\n        container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n        !!container.host;\n    // Handle first render to a scope specially...\n    const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n    // On first scope render, render into a fragment; this cannot be a single\n    // fragment that is reused since nested renders can occur synchronously.\n    const renderContainer = firstScopeRender ? document.createDocumentFragment() : container;\n    litRender(result, renderContainer, Object.assign({ templateFactory: shadyTemplateFactory(scopeName) }, options));\n    // When performing first scope render,\n    // (1) We've rendered into a fragment so that there's a chance to\n    // `prepareTemplateStyles` before sub-elements hit the DOM\n    // (which might cause them to render based on a common pattern of\n    // rendering in a custom element's `connectedCallback`);\n    // (2) Scope the template with ShadyCSS one time only for this scope.\n    // (3) Render the fragment into the container and make sure the\n    // container knows its `part` is the one we just rendered. This ensures\n    // DOM will be re-used on subsequent renders.\n    if (firstScopeRender) {\n        const part = parts.get(renderContainer);\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(scopeName, renderContainer, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n    }\n    // After elements have hit the DOM, update styling if this is the\n    // initial render to this container.\n    // This is needed whenever dynamic changes are made so it would be\n    // safest to do every render; however, this would regress performance\n    // so we leave it up to the user to call `ShadyCSS.styleElement`\n    // for dynamic changes.\n    if (!hasRendered && needsScoping) {\n        window.ShadyCSS.styleElement(container.host);\n    }\n};\n//# sourceMappingURL=shady-render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nvar _a;\n/**\n * Use this module if you want to create your own base class extending\n * [[UpdatingElement]].\n * @packageDocumentation\n */\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    (prop, _obj) => prop;\nexport const defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value ? '' : null;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                return value == null ? value : JSON.stringify(value);\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value !== null;\n            case Number:\n                return value === null ? null : Number(value);\n            case Object:\n            case Array:\n                return JSON.parse(value);\n        }\n        return value;\n    }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual = (value, old) => {\n    // This ensures (old==NaN, value==NaN) always returns false\n    return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual\n};\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n * @noInheritDoc\n */\nexport class UpdatingElement extends HTMLElement {\n    constructor() {\n        super();\n        this.initialize();\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     */\n    static get observedAttributes() {\n        // note: piggy backing on this to ensure we're finalized.\n        this.finalize();\n        const attributes = [];\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this._classProperties.forEach((v, p) => {\n            const attr = this._attributeNameForProperty(p, v);\n            if (attr !== undefined) {\n                this._attributeToPropertyMap.set(attr, p);\n                attributes.push(attr);\n            }\n        });\n        return attributes;\n    }\n    /**\n     * Ensures the private `_classProperties` property metadata is created.\n     * In addition to `finalize` this is also called in `createProperty` to\n     * ensure the `@property` decorator can add property metadata.\n     */\n    /** @nocollapse */\n    static _ensureClassProperties() {\n        // ensure private storage for property declarations.\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n            this._classProperties = new Map();\n            // NOTE: Workaround IE11 not supporting Map constructor argument.\n            const superProperties = Object.getPrototypeOf(this)._classProperties;\n            if (superProperties !== undefined) {\n                superProperties.forEach((v, k) => this._classProperties.set(k, v));\n            }\n        }\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist\n     * and stores a PropertyDeclaration for the property with the given options.\n     * The property setter calls the property's `hasChanged` property option\n     * or uses a strict identity check to determine whether or not to request\n     * an update.\n     *\n     * This method may be overridden to customize properties; however,\n     * when doing so, it's important to call `super.createProperty` to ensure\n     * the property is setup correctly. This method calls\n     * `getPropertyDescriptor` internally to get a descriptor to install.\n     * To customize what properties do when they are get or set, override\n     * `getPropertyDescriptor`. To customize the options for a property,\n     * implement `createProperty` like this:\n     *\n     * static createProperty(name, options) {\n     *   options = Object.assign(options, {myOption: true});\n     *   super.createProperty(name, options);\n     * }\n     *\n     * @nocollapse\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // Note, since this can be called by the `@property` decorator which\n        // is called before `finalize`, we ensure storage exists for property\n        // metadata.\n        this._ensureClassProperties();\n        this._classProperties.set(name, options);\n        // Do not generate an accessor if the prototype already has one, since\n        // it would be lost otherwise and that would never be the user's intention;\n        // Instead, we expect users to call `requestUpdate` themselves from\n        // user-defined accessors. Note that if the super has an accessor we will\n        // still overwrite it\n        if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n            return;\n        }\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        const descriptor = this.getPropertyDescriptor(name, key, options);\n        if (descriptor !== undefined) {\n            Object.defineProperty(this.prototype, name, descriptor);\n        }\n    }\n    /**\n     * Returns a property descriptor to be defined on the given named property.\n     * If no descriptor is returned, the property will not become an accessor.\n     * For example,\n     *\n     *   class MyElement extends LitElement {\n     *     static getPropertyDescriptor(name, key, options) {\n     *       const defaultDescriptor =\n     *           super.getPropertyDescriptor(name, key, options);\n     *       const setter = defaultDescriptor.set;\n     *       return {\n     *         get: defaultDescriptor.get,\n     *         set(value) {\n     *           setter.call(this, value);\n     *           // custom action.\n     *         },\n     *         configurable: true,\n     *         enumerable: true\n     *       }\n     *     }\n     *   }\n     *\n     * @nocollapse\n     */\n    static getPropertyDescriptor(name, key, options) {\n        return {\n            // tslint:disable-next-line:no-any no symbol in index\n            get() {\n                return this[key];\n            },\n            set(value) {\n                const oldValue = this[name];\n                this[key] = value;\n                this\n                    .requestUpdateInternal(name, oldValue, options);\n            },\n            configurable: true,\n            enumerable: true\n        };\n    }\n    /**\n     * Returns the property options associated with the given property.\n     * These options are defined with a PropertyDeclaration via the `properties`\n     * object or the `@property` decorator and are registered in\n     * `createProperty(...)`.\n     *\n     * Note, this method should be considered \"final\" and not overridden. To\n     * customize the options for a given property, override `createProperty`.\n     *\n     * @nocollapse\n     * @final\n     */\n    static getPropertyOptions(name) {\n        return this._classProperties && this._classProperties.get(name) ||\n            defaultPropertyDeclaration;\n    }\n    /**\n     * Creates property accessors for registered properties and ensures\n     * any superclasses are also finalized.\n     * @nocollapse\n     */\n    static finalize() {\n        // finalize any superclasses\n        const superCtor = Object.getPrototypeOf(this);\n        if (!superCtor.hasOwnProperty(finalized)) {\n            superCtor.finalize();\n        }\n        this[finalized] = true;\n        this._ensureClassProperties();\n        // initialize Map populated in observedAttributes\n        this._attributeToPropertyMap = new Map();\n        // make any properties\n        // Note, only process \"own\" properties since this element will inherit\n        // any properties defined on the superClass, and finalization ensures\n        // the entire prototype chain is finalized.\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            // support symbols in properties (IE11 does not support this)\n            const propKeys = [\n                ...Object.getOwnPropertyNames(props),\n                ...(typeof Object.getOwnPropertySymbols === 'function') ?\n                    Object.getOwnPropertySymbols(props) :\n                    []\n            ];\n            // This for/of is ok because propKeys is an array\n            for (const p of propKeys) {\n                // note, use of `any` is due to TypeSript lack of support for symbol in\n                // index types\n                // tslint:disable-next-line:no-any no symbol in index\n                this.createProperty(p, props[p]);\n            }\n        }\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static _attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false ?\n            undefined :\n            (typeof attribute === 'string' ?\n                attribute :\n                (typeof name === 'string' ? name.toLowerCase() : undefined));\n    }\n    /**\n     * Returns true if a property should request an update.\n     * Called when a property value is set and uses the `hasChanged`\n     * option for the property if present or a strict identity check.\n     * @nocollapse\n     */\n    static _valueHasChanged(value, old, hasChanged = notEqual) {\n        return hasChanged(value, old);\n    }\n    /**\n     * Returns the property value for the given attribute value.\n     * Called via the `attributeChangedCallback` and uses the property's\n     * `converter` or `converter.fromAttribute` property option.\n     * @nocollapse\n     */\n    static _propertyValueFromAttribute(value, options) {\n        const type = options.type;\n        const converter = options.converter || defaultConverter;\n        const fromAttribute = (typeof converter === 'function' ? converter : converter.fromAttribute);\n        return fromAttribute ? fromAttribute(value, type) : value;\n    }\n    /**\n     * Returns the attribute value for the given property value. If this\n     * returns undefined, the property will *not* be reflected to an attribute.\n     * If this returns null, the attribute will be removed, otherwise the\n     * attribute will be set to the value.\n     * This uses the property's `reflect` and `type.toAttribute` property options.\n     * @nocollapse\n     */\n    static _propertyValueToAttribute(value, options) {\n        if (options.reflect === undefined) {\n            return;\n        }\n        const type = options.type;\n        const converter = options.converter;\n        const toAttribute = converter && converter.toAttribute ||\n            defaultConverter.toAttribute;\n        return toAttribute(value, type);\n    }\n    /**\n     * Performs element initialization. By default captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        this._updateState = 0;\n        this._updatePromise =\n            new Promise((res) => this._enableUpdatingResolver = res);\n        this._changedProperties = new Map();\n        this._saveInstanceProperties();\n        // ensures first update will be caught by an early access of\n        // `updateComplete`\n        this.requestUpdateInternal();\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    _saveInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.constructor\n            ._classProperties.forEach((_v, p) => {\n            if (this.hasOwnProperty(p)) {\n                const value = this[p];\n                delete this[p];\n                if (!this._instanceProperties) {\n                    this._instanceProperties = new Map();\n                }\n                this._instanceProperties.set(p, value);\n            }\n        });\n    }\n    /**\n     * Applies previously saved instance properties.\n     */\n    _applyInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        // tslint:disable-next-line:no-any\n        this._instanceProperties.forEach((v, p) => this[p] = v);\n        this._instanceProperties = undefined;\n    }\n    connectedCallback() {\n        // Ensure first connection completes an update. Updates cannot complete\n        // before connection.\n        this.enableUpdating();\n    }\n    enableUpdating() {\n        if (this._enableUpdatingResolver !== undefined) {\n            this._enableUpdatingResolver();\n            this._enableUpdatingResolver = undefined;\n        }\n    }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     */\n    disconnectedCallback() {\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this._attributeToProperty(name, value);\n        }\n    }\n    _propertyToAttribute(name, value, options = defaultPropertyDeclaration) {\n        const ctor = this.constructor;\n        const attr = ctor._attributeNameForProperty(name, options);\n        if (attr !== undefined) {\n            const attrValue = ctor._propertyValueToAttribute(value, options);\n            // an undefined value does not change the attribute.\n            if (attrValue === undefined) {\n                return;\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n        }\n    }\n    _attributeToProperty(name, value) {\n        // Use tracking info to avoid deserializing attribute value if it was\n        // just set from a property setter.\n        if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n            return;\n        }\n        const ctor = this.constructor;\n        // Note, hint this as an `AttributeMap` so closure clearly understands\n        // the type; it has issues with tracking types through statics\n        // tslint:disable-next-line:no-unnecessary-type-assertion\n        const propName = ctor._attributeToPropertyMap.get(name);\n        if (propName !== undefined) {\n            const options = ctor.getPropertyOptions(propName);\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n            this[propName] =\n                // tslint:disable-next-line:no-any\n                ctor._propertyValueFromAttribute(value, options);\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n        }\n    }\n    /**\n     * This protected version of `requestUpdate` does not access or return the\n     * `updateComplete` promise. This promise can be overridden and is therefore\n     * not free to access.\n     */\n    requestUpdateInternal(name, oldValue, options) {\n        let shouldRequestUpdate = true;\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            const ctor = this.constructor;\n            options = options || ctor.getPropertyOptions(name);\n            if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n                if (!this._changedProperties.has(name)) {\n                    this._changedProperties.set(name, oldValue);\n                }\n                // Add to reflecting properties set.\n                // Note, it's important that every change has a chance to add the\n                // property to `_reflectingProperties`. This ensures setting\n                // attribute + property reflects correctly.\n                if (options.reflect === true &&\n                    !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n                    if (this._reflectingProperties === undefined) {\n                        this._reflectingProperties = new Map();\n                    }\n                    this._reflectingProperties.set(name, options);\n                }\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                shouldRequestUpdate = false;\n            }\n        }\n        if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n            this._updatePromise = this._enqueueUpdate();\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should\n     * be called when an element should update based on some state not triggered\n     * by setting a property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored. Returns the `updateComplete` Promise which is resolved\n     * when the update completes.\n     *\n     * @param name {PropertyKey} (optional) name of requesting property\n     * @param oldValue {any} (optional) old value of requesting property\n     * @returns {Promise} A Promise that is resolved when the update completes.\n     */\n    requestUpdate(name, oldValue) {\n        this.requestUpdateInternal(name, oldValue);\n        return this.updateComplete;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async _enqueueUpdate() {\n        this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await this._updatePromise;\n        }\n        catch (e) {\n            // Ignore any previous errors. We only care that the previous cycle is\n            // done. Any error should have been handled in the previous update.\n        }\n        const result = this.performUpdate();\n        // If `performUpdate` returns a Promise, we await it. This is done to\n        // enable coordinating updates with a scheduler. Note, the result is\n        // checked to avoid delaying an additional microtask unless we need to.\n        if (result != null) {\n            await result;\n        }\n        return !this._hasRequestedUpdate;\n    }\n    get _hasRequestedUpdate() {\n        return (this._updateState & STATE_UPDATE_REQUESTED);\n    }\n    get hasUpdated() {\n        return (this._updateState & STATE_HAS_UPDATED);\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * You can override this method to change the timing of updates. If this\n     * method is overridden, `super.performUpdate()` must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```\n     * protected async performUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.performUpdate();\n     * }\n     * ```\n     */\n    performUpdate() {\n        // Abort any update if one is not pending when this is called.\n        // This can happen if `performUpdate` is called early to \"flush\"\n        // the update.\n        if (!this._hasRequestedUpdate) {\n            return;\n        }\n        // Mixin instance properties once, if they exist.\n        if (this._instanceProperties) {\n            this._applyInstanceProperties();\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.update(changedProperties);\n            }\n            else {\n                this._markUpdated();\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            // Ensure element can accept additional updates after an exception.\n            this._markUpdated();\n            throw e;\n        }\n        if (shouldUpdate) {\n            if (!(this._updateState & STATE_HAS_UPDATED)) {\n                this._updateState = this._updateState | STATE_HAS_UPDATED;\n                this.firstUpdated(changedProperties);\n            }\n            this.updated(changedProperties);\n        }\n    }\n    _markUpdated() {\n        this._changedProperties = new Map();\n        this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update.\n     *\n     * To await additional asynchronous work, override the `_getUpdateComplete`\n     * method. For example, it is sometimes useful to await a rendered element\n     * before fulfilling this Promise. To do this, first await\n     * `super._getUpdateComplete()`, then any subsequent state.\n     *\n     * @returns {Promise} The Promise returns a boolean that indicates if the\n     * update resolved without triggering another update.\n     */\n    get updateComplete() {\n        return this._getUpdateComplete();\n    }\n    /**\n     * Override point for the `updateComplete` promise.\n     *\n     * It is not safe to override the `updateComplete` getter directly due to a\n     * limitation in TypeScript which means it is not possible to call a\n     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n     * This method should be overridden instead. For example:\n     *\n     *   class MyElement extends LitElement {\n     *     async _getUpdateComplete() {\n     *       await super._getUpdateComplete();\n     *       await this._myChild.updateComplete;\n     *     }\n     *   }\n     */\n    _getUpdateComplete() {\n        return this._updatePromise;\n    }\n    /**\n     * Controls whether or not `update` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(_changedProperties) {\n        if (this._reflectingProperties !== undefined &&\n            this._reflectingProperties.size > 0) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this._reflectingProperties.forEach((v, k) => this._propertyToAttribute(k, this[k], v));\n            this._reflectingProperties = undefined;\n        }\n        this._markUpdated();\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    updated(_changedProperties) {\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    firstUpdated(_changedProperties) {\n    }\n}\n_a = finalized;\n/**\n * Marks class as having finished creating properties.\n */\nUpdatingElement[_a] = true;\n//# sourceMappingURL=updating-element.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst legacyCustomElement = (tagName, clazz) => {\n    window.customElements.define(tagName, clazz);\n    // Cast as any because TS doesn't recognize the return type as being a\n    // subtype of the decorated class when clazz is typed as\n    // `Constructor<HTMLElement>` for some reason.\n    // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n    // applied to elements however.\n    // tslint:disable-next-line:no-any\n    return clazz;\n};\nconst standardCustomElement = (tagName, descriptor) => {\n    const { kind, elements } = descriptor;\n    return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz) {\n            window.customElements.define(tagName, clazz);\n        }\n    };\n};\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```\n * @customElement('my-element')\n * class MyElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n * @category Decorator\n * @param tagName The name of the custom element to define.\n */\nexport const customElement = (tagName) => (classOrDescriptor) => (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\nconst standardProperty = (options, element) => {\n    // When decorating an accessor, pass it through and add property metadata.\n    // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n    // stomp over the user's accessor.\n    if (element.kind === 'method' && element.descriptor &&\n        !('value' in element.descriptor)) {\n        return Object.assign(Object.assign({}, element), { finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            } });\n    }\n    else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n            kind: 'field',\n            key: Symbol(),\n            placement: 'own',\n            descriptor: {},\n            // When @babel/plugin-proposal-decorators implements initializers,\n            // do this instead of the initializer below. See:\n            // https://github.com/babel/babel/issues/9260 extras: [\n            //   {\n            //     kind: 'initializer',\n            //     placement: 'own',\n            //     initializer: descriptor.initializer,\n            //   }\n            // ],\n            initializer() {\n                if (typeof element.initializer === 'function') {\n                    this[element.key] = element.initializer.call(this);\n                }\n            },\n            finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            }\n        };\n    }\n};\nconst legacyProperty = (options, proto, name) => {\n    proto.constructor\n        .createProperty(name, options);\n};\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A [[`PropertyDeclaration`]] may optionally be\n * supplied to configure property features.\n *\n * This decorator should only be used for public fields. Private or protected\n * fields should use the [[`internalProperty`]] decorator.\n *\n * @example\n * ```ts\n * class MyElement {\n *   @property({ type: Boolean })\n *   clicked = false;\n * }\n * ```\n * @category Decorator\n * @ExportDecoratedItems\n */\nexport function property(options) {\n    // tslint:disable-next-line:no-any decorator\n    return (protoOrDescriptor, name) => (name !== undefined) ?\n        legacyProperty(options, protoOrDescriptor, name) :\n        standardProperty(options, protoOrDescriptor);\n}\n/**\n * Declares a private or protected property that still triggers updates to the\n * element when it changes.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like closure compiler.\n * @category Decorator\n */\nexport function internalProperty(options) {\n    return property({ attribute: false, hasChanged: options === null || options === void 0 ? void 0 : options.hasChanged });\n}\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n * @param cache An optional boolean which when true performs the DOM query only\n * once and caches the result.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n *\n * ```ts\n * class MyElement {\n *   @query('#first')\n *   first;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function query(selector, cache) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        if (cache) {\n            const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n            descriptor.get = function () {\n                if (this[key] === undefined) {\n                    (this[key] =\n                        this.renderRoot.querySelector(selector));\n                }\n                return this[key];\n            };\n        }\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n// Note, in the future, we may extend this decorator to support the use case\n// where the queried element may need to do work to become ready to interact\n// with (e.g. load some implementation code). If so, we might elect to\n// add a second argument defining a function that can be run to make the\n// queried element loaded/updated/ready.\n/**\n * A property decorator that converts a class property into a getter that\n * returns a promise that resolves to the result of a querySelector on the\n * element's renderRoot done after the element's `updateComplete` promise\n * resolves. When the queried property may change with element state, this\n * decorator can be used instead of requiring users to await the\n * `updateComplete` before accessing the property.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n * ```ts\n * class MyElement {\n *   @queryAsync('#first')\n *   first;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n *\n * // external usage\n * async doSomethingWithFirst() {\n *  (await aMyElement.first).doSomething();\n * }\n * ```\n * @category Decorator\n */\nexport function queryAsync(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            async get() {\n                await this.updateComplete;\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See:\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\n *\n * @example\n * ```ts\n * class MyElement {\n *   @queryAll('div')\n *   divs;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function queryAll(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelectorAll(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\nconst legacyQuery = (descriptor, proto, name) => {\n    Object.defineProperty(proto, name, descriptor);\n};\nconst standardQuery = (descriptor, element) => ({\n    kind: 'method',\n    placement: 'prototype',\n    key: element.key,\n    descriptor,\n});\nconst standardEventOptions = (options, element) => {\n    return Object.assign(Object.assign({}, element), { finisher(clazz) {\n            Object.assign(clazz.prototype[element.key], options);\n        } });\n};\nconst legacyEventOptions = \n// tslint:disable-next-line:no-any legacy decorator\n(options, proto, name) => {\n    Object.assign(proto[name], options);\n};\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifies event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n * ```ts\n * class MyElement {\n *   clicked = false;\n *\n *   render() {\n *     return html`\n *       <div @click=${this._onClick}`>\n *         <button></button>\n *       </div>\n *     `;\n *   }\n *\n *   @eventOptions({capture: true})\n *   _onClick(e) {\n *     this.clicked = true;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function eventOptions(options) {\n    // Return value typed as any to prevent TypeScript from complaining that\n    // standard decorator function signature does not match TypeScript decorator\n    // signature\n    // TODO(kschaaf): unclear why it was only failing on this decorator and not\n    // the others\n    return ((protoOrDescriptor, name) => (name !== undefined) ?\n        legacyEventOptions(options, protoOrDescriptor, name) :\n        standardEventOptions(options, protoOrDescriptor));\n}\n// x-browser support for matches\n// tslint:disable-next-line:no-any\nconst ElementProto = Element.prototype;\nconst legacyMatches = ElementProto.msMatchesSelector || ElementProto.webkitMatchesSelector;\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedNodes` of the given named `slot`. Note, the type of\n * this property should be annotated as `NodeListOf<HTMLElement>`.\n *\n * @param slotName A string name of the slot.\n * @param flatten A boolean which when true flattens the assigned nodes,\n * meaning any assigned nodes that are slot elements are replaced with their\n * assigned nodes.\n * @param selector A string which filters the results to elements that match\n * the given css selector.\n *\n * * @example\n * ```ts\n * class MyElement {\n *   @queryAssignedNodes('list', true, '.item')\n *   listItems;\n *\n *   render() {\n *     return html`\n *       <slot name=\"list\"></slot>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function queryAssignedNodes(slotName = '', flatten = false, selector = '') {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                const slotSelector = `slot${slotName ? `[name=${slotName}]` : ':not([name])'}`;\n                const slot = this.renderRoot.querySelector(slotSelector);\n                let nodes = slot && slot.assignedNodes({ flatten });\n                if (nodes && selector) {\n                    nodes = nodes.filter((node) => node.nodeType === Node.ELEMENT_NODE &&\n                        node.matches ?\n                        node.matches(selector) :\n                        legacyMatches.call(node, selector));\n                }\n                return nodes;\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n//# sourceMappingURL=decorators.js.map","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets = (window.ShadowRoot) &&\n    (window.ShadyCSS === undefined || window.ShadyCSS.nativeShadow) &&\n    ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\nconst constructionToken = Symbol();\nexport class CSSResult {\n    constructor(cssText, safeToken) {\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n    }\n    // Note, this is a getter so that it's lazy. In practice, this means\n    // stylesheets are not created until the first element instance is made.\n    get styleSheet() {\n        if (this._styleSheet === undefined) {\n            // Note, if `supportsAdoptingStyleSheets` is true then we assume\n            // CSSStyleSheet is constructable.\n            if (supportsAdoptingStyleSheets) {\n                this._styleSheet = new CSSStyleSheet();\n                this._styleSheet.replaceSync(this.cssText);\n            }\n            else {\n                this._styleSheet = null;\n            }\n        }\n        return this._styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\n/**\n * Wrap a value for interpolation in a [[`css`]] tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value) => {\n    return new CSSResult(String(value), constructionToken);\n};\nconst textFromCSSResult = (value) => {\n    if (value instanceof CSSResult) {\n        return value.cssText;\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Template tag which which can be used with LitElement's [[LitElement.styles |\n * `styles`]] property to set element styles. For security reasons, only literal\n * string values may be used. To incorporate non-literal values [[`unsafeCSS`]]\n * may be used inside a template string part.\n */\nexport const css = (strings, ...values) => {\n    const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, constructionToken);\n};\n//# sourceMappingURL=css-tag.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * The main LitElement module, which defines the [[`LitElement`]] base class and\n * related APIs.\n *\n *  LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n *  Import [[`LitElement`]] and [[`html`]] from this module to create a\n * component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends [[`UpdatingElement`]] and adds lit-html templating.\n * The `UpdatingElement` class is provided for users that want to build\n * their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\nimport { render } from 'lit-html/lib/shady-render.js';\nimport { UpdatingElement } from './lib/updating-element.js';\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport { html, svg, TemplateResult, SVGTemplateResult } from 'lit-html/lit-html.js';\nimport { supportsAdoptingStyleSheets, unsafeCSS } from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.4.0');\n/**\n * Sentinal value used to avoid calling lit-html's render function when\n * subclasses do not implement `render`\n */\nconst renderNotImplemented = {};\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the [[`properties`]] property or the [[`property`]] decorator.\n */\nexport class LitElement extends UpdatingElement {\n    /**\n     * Return the array of styles to apply to the element.\n     * Override this method to integrate into a style management system.\n     *\n     * @nocollapse\n     */\n    static getStyles() {\n        return this.styles;\n    }\n    /** @nocollapse */\n    static _getUniqueStyles() {\n        // Only gather styles once per class\n        if (this.hasOwnProperty(JSCompiler_renameProperty('_styles', this))) {\n            return;\n        }\n        // Take care not to call `this.getStyles()` multiple times since this\n        // generates new CSSResults each time.\n        // TODO(sorvell): Since we do not cache CSSResults by input, any\n        // shared styles will generate new stylesheet objects, which is wasteful.\n        // This should be addressed when a browser ships constructable\n        // stylesheets.\n        const userStyles = this.getStyles();\n        if (Array.isArray(userStyles)) {\n            // De-duplicate styles preserving the _last_ instance in the set.\n            // This is a performance optimization to avoid duplicated styles that can\n            // occur especially when composing via subclassing.\n            // The last item is kept to try to preserve the cascade order with the\n            // assumption that it's most important that last added styles override\n            // previous styles.\n            const addStyles = (styles, set) => styles.reduceRight((set, s) => \n            // Note: On IE set.add() does not return the set\n            Array.isArray(s) ? addStyles(s, set) : (set.add(s), set), set);\n            // Array.from does not work on Set in IE, otherwise return\n            // Array.from(addStyles(userStyles, new Set<CSSResult>())).reverse()\n            const set = addStyles(userStyles, new Set());\n            const styles = [];\n            set.forEach((v) => styles.unshift(v));\n            this._styles = styles;\n        }\n        else {\n            this._styles = userStyles === undefined ? [] : [userStyles];\n        }\n        // Ensure that there are no invalid CSSStyleSheet instances here. They are\n        // invalid in two conditions.\n        // (1) the sheet is non-constructible (`sheet` of a HTMLStyleElement), but\n        //     this is impossible to check except via .replaceSync or use\n        // (2) the ShadyCSS polyfill is enabled (:. supportsAdoptingStyleSheets is\n        //     false)\n        this._styles = this._styles.map((s) => {\n            if (s instanceof CSSStyleSheet && !supportsAdoptingStyleSheets) {\n                // Flatten the cssText from the passed constructible stylesheet (or\n                // undetectable non-constructible stylesheet). The user might have\n                // expected to update their stylesheets over time, but the alternative\n                // is a crash.\n                const cssText = Array.prototype.slice.call(s.cssRules)\n                    .reduce((css, rule) => css + rule.cssText, '');\n                return unsafeCSS(cssText);\n            }\n            return s;\n        });\n    }\n    /**\n     * Performs element initialization. By default this calls\n     * [[`createRenderRoot`]] to create the element [[`renderRoot`]] node and\n     * captures any pre-set values for registered properties.\n     */\n    initialize() {\n        super.initialize();\n        this.constructor._getUniqueStyles();\n        this.renderRoot = this.createRenderRoot();\n        // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n        // element's getRootNode(). While this could be done, we're choosing not to\n        // support this now since it would require different logic around de-duping.\n        if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n            this.adoptStyles();\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n    createRenderRoot() {\n        return this.attachShadow({ mode: 'open' });\n    }\n    /**\n     * Applies styling to the element shadowRoot using the [[`styles`]]\n     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n     * available and will fallback otherwise. When Shadow DOM is polyfilled,\n     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n     * is available but `adoptedStyleSheets` is not, styles are appended to the\n     * end of the `shadowRoot` to [mimic spec\n     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n     */\n    adoptStyles() {\n        const styles = this.constructor._styles;\n        if (styles.length === 0) {\n            return;\n        }\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map((s) => s.cssText), this.localName);\n        }\n        else if (supportsAdoptingStyleSheets) {\n            this.renderRoot.adoptedStyleSheets =\n                styles.map((s) => s instanceof CSSStyleSheet ? s : s.styleSheet);\n        }\n        else {\n            // This must be done after rendering so the actual style insertion is done\n            // in `update`.\n            this._needsShimAdoptedStyleSheets = true;\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        if (this.hasUpdated && window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(changedProperties) {\n        // Setting properties in `render` should not trigger an update. Since\n        // updates are allowed after super.update, it's important to call `render`\n        // before that.\n        const templateResult = this.render();\n        super.update(changedProperties);\n        // If render is not implemented by the component, don't call lit-html render\n        if (templateResult !== renderNotImplemented) {\n            this.constructor\n                .render(templateResult, this.renderRoot, { scopeName: this.localName, eventContext: this });\n        }\n        // When native Shadow DOM is used but adoptedStyles are not supported,\n        // insert styling after rendering to ensure adoptedStyles have highest\n        // priority.\n        if (this._needsShimAdoptedStyleSheets) {\n            this._needsShimAdoptedStyleSheets = false;\n            this.constructor._styles.forEach((s) => {\n                const style = document.createElement('style');\n                style.textContent = s.cssText;\n                this.renderRoot.appendChild(style);\n            });\n        }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method may return\n     * any value renderable by lit-html's `NodePart` - typically a\n     * `TemplateResult`. Setting properties inside this method will *not* trigger\n     * the element to update.\n     */\n    render() {\n        return renderNotImplemented;\n    }\n}\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See updating-element.ts for more information.\n */\nLitElement['finalized'] = true;\n/**\n * Reference to the underlying library method used to render the element's\n * DOM. By default, points to the `render` method from lit-html's shady-render\n * module.\n *\n * **Most users will never need to touch this property.**\n *\n * This  property should not be confused with the `render` instance method,\n * which should be overridden to define a template for the element.\n *\n * Advanced users creating a new base class based on LitElement can override\n * this property to point to a custom render method with a signature that\n * matches [shady-render's `render`\n * method](https://lit-html.polymer-project.org/api/modules/shady_render.html#render).\n *\n * @nocollapse\n */\nLitElement.render = render;\n//# sourceMappingURL=lit-element.js.map","export function RGBAToHexA(r, g, b, a) {\n  let _r = r.toString(16);\n  let _g = g.toString(16);\n  let _b = b.toString(16);\n  let _a = Math.round(a * 255).toString(16);\n\n  if (_r.length === 1) _r = '0' + _r;\n  if (_g.length === 1) _g = '0' + _g;\n  if (_b.length === 1) _b = '0' + _b;\n  if (_a.length === 1) _a = '0' + _a;\n\n  if (_a === 'ff') {\n    return '#' + _r + _g + _b;\n  }\n\n  return '#' + _r + _g + _b + _a;\n}\n\nexport function HSLAToRGBA(h, s, l, a, toHex) {\n  let _s = s / 100;\n  let _l = l / 100;\n\n  let c = (1 - Math.abs(2 * _l - 1)) * _s,\n    x = c * (1 - Math.abs(((h / 60) % 2) - 1)),\n    m = _l - c / 2,\n    r = 0,\n    g = 0,\n    b = 0;\n\n  if (h >= 0 && h < 60) {\n    r = c;\n    g = x;\n    b = 0;\n  } else if (h >= 60 && h < 120) {\n    r = x;\n    g = c;\n    b = 0;\n  } else if (h >= 120 && h < 180) {\n    r = 0;\n    g = c;\n    b = x;\n  } else if (h >= 180 && h < 240) {\n    r = 0;\n    g = x;\n    b = c;\n  } else if (h >= 240 && h < 300) {\n    r = x;\n    g = 0;\n    b = c;\n  } else if (h >= 300 && h < 360) {\n    r = c;\n    g = 0;\n    b = x;\n  }\n\n  r = Math.round((r + m) * 255);\n  g = Math.round((g + m) * 255);\n  b = Math.round((b + m) * 255);\n\n  if (toHex === true) {\n    return RGBAToHexA(r, g, b, a);\n  }\n\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a,\n  };\n}\n\nexport function RGBAToHSLA(r, g, b, a) {\n  let _r = r / 255;\n  let _g = g / 255;\n  let _b = b / 255;\n  let _a = a === undefined ? 1 : a;\n\n  let cmin = Math.min(_r, _g, _b),\n    cmax = Math.max(_r, _g, _b),\n    delta = cmax - cmin,\n    h = 0,\n    s = 0,\n    l = 0;\n\n  if (delta === 0) {\n    h = 0;\n  } else if (cmax === _r) {\n    h = ((_g - _b) / delta) % 6;\n  } else if (cmax === _g) {\n    h = (_b - _r) / delta + 2;\n  } else {\n    h = (_r - _g) / delta + 4;\n  }\n\n  h = Math.round(h * 60);\n\n  if (h < 0) h += 360;\n\n  l = (cmax + cmin) / 2;\n\n  s = delta === 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n\n  s = +(s * 100).toFixed(1);\n  l = +(l * 100).toFixed(1);\n\n  return {\n    h: h,\n    s: s,\n    l: l,\n    a: _a,\n  };\n}\n\nexport function hexAToRGBA(h, toHSL) {\n  let _h = h;\n\n  if (_h.length === 7) {\n    _h += 'ff';\n  } else if (_h.length === 4) {\n    _h += _h.substring(1, 4) + 'ff';\n  }\n\n  let r = 0,\n    g = 0,\n    b = 0,\n    a = 1;\n\n  if (_h.length === 5) {\n    r = '0x' + _h[1] + _h[1];\n    g = '0x' + _h[2] + _h[2];\n    b = '0x' + _h[3] + _h[3];\n    a = '0x' + _h[4] + _h[4];\n  } else if (_h.length === 9) {\n    r = '0x' + _h[1] + _h[2];\n    g = '0x' + _h[3] + _h[4];\n    b = '0x' + _h[5] + _h[6];\n    a = '0x' + _h[7] + _h[8];\n  }\n\n  a = +(a / 255).toFixed(3);\n\n  if (toHSL) {\n    return RGBAToHSLA(+r, +g, +b, a);\n  }\n\n  return 'rgba(' + +r + ',' + +g + ',' + +b + ',' + a + ')';\n}\n","import { hexAToRGBA, HSLAToRGBA } from '../utility/color-conversion';\n\nexport class ColorChangeEvent {\n  constructor(_component) {\n    this._component = _component;\n    this.colorChange = this.colorChange.bind(this);\n  }\n\n  /**\n   * @memberof WCColrPickr\n   * @method colorChange\n   * @description Function to change the color of the component\n   * @param {string} color - The color you are changing the instance to\n   * @param {HTMLElement} elem - The button HTMLElement that is a part of the instance\n   *\n   * @example\n   * const button = document.getElementById('my_button');\n   * this._component.colorChange('#ff0000', button);\n   */\n  colorChange(color) {\n    let _color = color;\n\n    // If the user send a string manually...\n    if (typeof _color === 'string') {\n      // Change it to the expected value of a HSLA object\n      _color = hexAToRGBA(_color, true);\n    }\n\n    // Defining the RGBA value conversion\n    const rgbaValue = HSLAToRGBA(_color.h, _color.s, _color.l, _color.a);\n    const hex = HSLAToRGBA(_color.h, _color.s, _color.l, _color.a, true);\n\n    /**\n     * @event colorChange\n     * @description Event to fire whenever the color picker is closed for new details on the color instance. Calling event.detail will return an object of the following:\n     * @return {object} color - Object of color values\n     * @return {string} color.hex - Hex value of chosen color\n     * @return {string} color.rgb - RGB value of chosen color\n     * @return {string} color.hsl - HSL value of chosen color\n     * @return {string} color.hexa - HexAlpha value of chosen color\n     * @return {string} color.rgba - RGBA value of chosen color\n     * @return {string} color.hsla - HSLA value of chosen color\n     */\n    const event = new CustomEvent('colorChange', {\n      // Adding the response details\n      detail: {\n        color: {\n          hsl: `hsla(${_color.h}, ${_color.s}%, ${_color.l}%)`,\n          rgb: `rgba(${rgbaValue.r}, ${rgbaValue.g}, ${rgbaValue.b})`,\n          hex: hex,\n          hsla: `hsla(${_color.h}, ${_color.s}%, ${_color.l}%, ${_color.a})`,\n          rgba: `rgba(${rgbaValue.r}, ${rgbaValue.g}, ${rgbaValue.b}, ${rgbaValue.a})`,\n          hexa: hex,\n        },\n      },\n    });\n\n    // Defining color\n    // Changing color attributes\n    this._component.button.setAttribute('data-color', hex);\n    this._component.button.style.background = hex;\n\n    // Dispatching the event for the active object\n    this._component.shadowRoot.dispatchEvent(event);\n  }\n}","import { HSLAToRGBA } from '../utility/color-conversion';\n\nexport class ColorTextValues {\n  constructor(_component) {\n    this._component = _component;\n    this.switchColorType = this.switchColorType.bind(this);\n    this.handleHexBlur = this.handleHexBlur.bind(this);\n    this.handleRgbaChange = this.handleRgbaChange.bind(this);\n    this.handleHslaChange = this.handleHslaChange.bind(this);\n  }\n\n  // Function to switch the color type inputs\n  switchColorType() {\n    // Checking the current selected input color type\n    if (this._component.colorTypeStatus === 'HEXA') {\n      // Updating the data object\n      this._component.colorTypeStatus = 'RGBA';\n\n      // Displaying the correct elements\n      this._component.shadowRoot.getElementById('hexa').style.display = 'none';\n      this._component.shadowRoot.getElementById('rgba').style.display = 'block';\n\n      // Converting the value\n      const RGBAValue = HSLAToRGBA(this._component.hue, this._component.saturation, this._component.lightness, this._component.alpha);\n\n      // Applying the value to the inputs\n      this._component.shadowRoot.querySelectorAll('.rgba_input')[0].value = RGBAValue.r;\n      this._component.shadowRoot.querySelectorAll('.rgba_input')[1].value = RGBAValue.g;\n      this._component.shadowRoot.querySelectorAll('.rgba_input')[2].value = RGBAValue.b;\n      this._component.shadowRoot.querySelectorAll('.rgba_input')[3].value = RGBAValue.a;\n    } else if (this._component.colorTypeStatus === 'RGBA') {\n      // Updating the data object\n      this._component.colorTypeStatus = 'HSLA';\n\n      // Displaying the correct elements\n      this._component.shadowRoot.getElementById('rgba').style.display = 'none';\n      this._component.shadowRoot.getElementById('hsla').style.display = 'block';\n\n      // Applying the value to the inputs\n      this._component.shadowRoot.querySelectorAll('.hsla_input')[0].value = this._component.hue;\n      this._component.shadowRoot.querySelectorAll('.hsla_input')[1].value = this._component.saturation;\n      this._component.shadowRoot.querySelectorAll('.hsla_input')[2].value = this._component.lightness;\n      this._component.shadowRoot.querySelectorAll('.hsla_input')[3].value = this._component.alpha;\n    } else if (this._component.colorTypeStatus === 'HSLA') {\n      // Updating the data object\n      this._component.colorTypeStatus = 'HEXA';\n\n      // Displaying the correct elements\n      this._component.shadowRoot.getElementById('hsla').style.display = 'none';\n      this._component.shadowRoot.getElementById('hexa').style.display = 'block';\n\n      // Converting the value\n      const hexValue = HSLAToRGBA(this._component.hue, this._component.saturation, this._component.lightness, this._component.alpha, true);\n\n      // Applying the value to the input\n      this._component.shadowRoot.getElementById('hex_input').value = hexValue;\n    }\n  }\n\n  handleHexBlur() {\n    // Value\n    const hexInput = this._component.shadowRoot.getElementById('hex_input').value;\n\n    // Check to see if the hex is formatted correctly\n    if (hexInput.match(/^#[0-9a-f]{3}([0-9a-f]{3})?([0-9a-f]{2})?$/)) {\n      // Updating the picker\n      this._component.UpdatePicker.updateColorDisplays(hexInput);\n\n      // Update\n      this._component.updatePicker();\n    }\n  }\n\n  handleRgbaChange() {\n    // Input boxes\n    const rgbaInput = this._component.shadowRoot.querySelectorAll('.rgba_input');\n\n    // Checking that the numbers are within the correct boundaries\n    if (rgbaInput[0].value > 255) throw new Error('Value must be below 256');\n    if (rgbaInput[1].value > 255) throw new Error('Value must be below 256');\n    if (rgbaInput[2].value > 255) throw new Error('Value must be below 256');\n    if (rgbaInput[3].value > 1) throw new Error('Value must be equal to or below 1');\n\n    // Updating the picker\n    this._component.UpdatePicker.updateColorDisplays(`rgba(${rgbaInput[0].value}, ${rgbaInput[1].value}, ${rgbaInput[2].value}, ${rgbaInput[3].value})`);\n\n    // Update\n    this._component.updatePicker();\n  }\n\n  handleHslaChange() {\n    // Input boxes\n    const hslaInput = this._component.shadowRoot.querySelectorAll('.hsla_input');\n\n    // Checking that the numbers are within the correct boundaries\n    if (hslaInput[0].value > 359) throw new Error('Value must be below 360');\n    if (hslaInput[1].value > 100) throw new Error('Value must be below 100');\n    if (hslaInput[2].value > 100) throw new Error('Value must be below 100');\n    if (hslaInput[3].value > 1) throw new Error('Value must be equal to or below 1');\n\n    // Updating the picker\n    this._component.UpdatePicker.updateColorDisplays(`hsla(${hslaInput[0].value}, ${hslaInput[1].value}%, ${hslaInput[2].value}%, ${hslaInput[3].value})`);\n\n    // Update\n    this._component.updatePicker();\n  }\n}","export class CustomColor {\n  constructor(_component) {\n    this._component = _component;\n    this.addCustomColor = this.addCustomColor.bind(this);\n    this.contextCustomColor = this.contextCustomColor.bind(this);\n    this.clearSingleCustomColor = this.clearSingleCustomColor.bind(this);\n    this.clearAllCustomColors = this.clearAllCustomColors.bind(this);\n    this.selectCustomColor = this.selectCustomColor.bind(this);\n  }\n\n  // Function to add a new custom color\n  addCustomColor() {\n    // Getting the color\n    const color = `hsla(${this._component.hue}, ${this._component.saturation}%, ${this._component.lightness}%, ${this._component.alpha})`;\n\n    // Creating the element\n    let customColorElem = document.createElement('BUTTON');\n    customColorElem.className = 'custom_colors_preview';\n    customColorElem.style.background = color;\n    customColorElem.setAttribute('data-custom-color', color);\n    // Placing the element in the DOM\n    this._component.shadowRoot.getElementById('custom_colors_box').appendChild(customColorElem);\n\n    // Pushing the color to the top of the array\n    this._component.LSCustomColors[0].unshift({ value: color });\n\n    // Updating the local storage with the new custom color\n    localStorage.setItem('custom_colors', JSON.stringify(this._component.LSCustomColors));\n  }\n\n  // Clears a selected custom color\n  clearSingleCustomColor(_element) {\n    const elemToRemove = _element === undefined ? this._component.contextMenuElem : _element;\n\n    // Removing the element\n    this._component.shadowRoot.getElementById('custom_colors_box').removeChild(elemToRemove);\n\n    // Clearing the variable\n    this._component.LSCustomColors = { 0: [] };\n\n    // Looping through the custom colors to repopulate the variable\n    for (let x in this._component.shadowRoot.querySelectorAll('.custom_colors_preview')) {\n      // Continuing if its a number\n      if (isNaN(x) === true) {\n        continue;\n      }\n\n      // Pushing the colors to the array\n      let el = this._component.shadowRoot.querySelectorAll('.custom_colors_preview')[x];\n      this._component.LSCustomColors[0].push({\n        value: el.getAttribute('data-custom-color'),\n        title: el.getAttribute('title'),\n      });\n    }\n\n    // Updating the local storage\n    localStorage.setItem('custom_colors', JSON.stringify(this._component.LSCustomColors));\n\n    // Making sure the add color button is displaying\n    this._component.shadowRoot.getElementById('custom_colors_add').style.display = 'inline-block';\n  }\n\n  // Clears all custom colors\n  clearAllCustomColors() {\n    // Clearing variable\n    this._component.LSCustomColors = { 0: [] };\n\n    // Looping through the custom colors to repopulate the variable\n    while (this._component.shadowRoot.querySelectorAll('.custom_colors_preview').length > 0) {\n      this._component.shadowRoot.getElementById('custom_colors_box').removeChild(this._component.shadowRoot.querySelectorAll('.custom_colors_preview')[0]);\n    }\n\n    // Updating the local storage\n    localStorage.setItem('custom_colors', JSON.stringify(this._component.LSCustomColors));\n\n    // Making sure the add color button is displaying\n    this._component.shadowRoot.getElementById('custom_colors_add').style.display = 'inline-block';\n  }\n\n  selectCustomColor(event) {\n    console.error(this, event.target.getAttribute('data-custom-color'));\n    // Making sure the users has selected a color preview\n    if (event.target.className === 'custom_colors_preview') {\n      // Color\n      const color = event.target.getAttribute('data-custom-color');\n\n      // Updating the picker with that color\n      this._component.UpdatePicker.updateColorDisplays(color);\n\n      // Update\n      this._component.updatePicker();\n    }\n  }\n\n  contextCustomColor(event) {\n    // Making sure the users has selected a color preview\n    if (event.target.className === 'custom_colors_preview') {\n      // Preventing default\n      event.preventDefault();\n\n      // Defining the context menu\n      const contextMenu = this._component.shadowRoot.getElementById('color_context_menu');\n\n      // Updating the styling of the menu\n      contextMenu.style.display = 'block';\n      contextMenu.style.top = event.target.getBoundingClientRect().top + 25 + 'px';\n      contextMenu.style.left = event.target.getBoundingClientRect().left + 'px';\n\n      // Defining the color selected\n      this._component.contextMenuElem = event.target;\n    }\n  }\n}\n","export class HueSlider {\n  constructor(_component) {\n    this._component = _component;\n    this.handleMouseDown = this.handleMouseDown.bind(this);\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.handleMouseUp = this.handleMouseUp.bind(this);\n    this.handleTouchStart = this.handleTouchStart.bind(this);\n    this.handleTouchMove = this.handleTouchMove.bind(this);\n    this.handleTouchEnd = this.handleTouchEnd.bind(this);\n    this.colorSliderHandler = this.colorSliderHandler.bind(this);\n  }\n\n  handleMouseDown(event) {\n    // Updating the status in the data object\n    this._component.sliderStatus = true;\n    // Calling handler function\n    this.colorSliderHandler(event.pageX);\n  }\n\n  handleMouseMove(event) {\n    // Checking that the drag has started\n    if (this._component.sliderStatus === true) {\n      // Calling handler function\n      this.colorSliderHandler(event.pageX);\n    }\n  }\n\n  handleMouseUp() {\n    // Checking that the drag has started\n    if (this._component.sliderStatus === true) {\n      // Updating the status in the data object\n      this._component.sliderStatus = false;\n    }\n  }\n\n  handleTouchStart(event) {\n    // Updating the status\n    this._component.sliderStatusTouch = true;\n    // Calling the handler function\n    this.colorSliderHandler(event.changedTouches[0].clientX);\n  }\n\n  handleTouchMove() {\n    // Checking that the touch drag has started\n    if (this._component.sliderStatusTouch === true) {\n      // Prevent page scrolling\n      event.preventDefault();\n      // Calling the handler function\n      this.colorSliderHandler(event.changedTouches[0].clientX);\n    }\n  }\n\n  handleTouchEnd() {\n    // Checking that the touch drag has started\n    if (this._component.sliderStatusTouch === true) {\n      // Updating the status\n      this._component.sliderStatusTouch = false;\n    }\n  }\n\n  // Function to handle changes to the HUE slider\n  colorSliderHandler(position) {\n    // Defining the slider and dragger\n    const sliderContainer = this._component.shadowRoot.getElementById('color_slider');\n    const sliderDragger = this._component.shadowRoot.getElementById('color_slider_dragger');\n\n    // Defining the X position\n    let eventX = position - sliderContainer.getBoundingClientRect().left;\n\n    // Making conditions so that the user don't drag outside the box\n    if (eventX < 11) eventX = 11;\n\n    if (eventX > 255) eventX = 255;\n\n    // Updating the X property of the dragger\n    sliderDragger.attributes.x.nodeValue = eventX;\n\n    // Percentage of the dragger on the X axis\n    const percent = ((eventX - 11) / 244) * 100;\n\n    // Calculating the color\n    // Max number for hue colors is 359, I find the percentage of this, from the percent variable\n    // I take it away from the max number because the slider should work backwards\n    const HColor = Math.round(359 - (359 / 100) * percent);\n\n    // Updating the Hue value in the data object\n    this._component.hue = HColor;\n\n    // Updating the Hue color in the Saturation and lightness box\n    this._component.shadowRoot.getElementById('saturation').children[1].setAttribute('stop-color', `hsla(${HColor}, 100%, 50%, ${this._component.alpha})`);\n\n    // Update the color text values\n    this._component.UpdatePicker.updateColorValueInput();\n\n    // Setting the data-color attribute to a color string\n    // This is so that the color updates properly on instances where the color has not been set\n    this._component.setAttribute('data-color', 'color');\n\n    // Update\n    this._component.updatePicker();\n  }\n}","export class OpacitySlider {\n  constructor(_component) {\n    this._component = _component;\n    this.handleMouseDown = this.handleMouseDown.bind(this);\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.handleMouseUp = this.handleMouseUp.bind(this);\n    this.handleTouchStart = this.handleTouchStart.bind(this);\n    this.handleTouchMove = this.handleTouchMove.bind(this);\n    this.handleTouchEnd = this.handleTouchEnd.bind(this);\n  }\n\n  handleMouseDown(event) {\n    // Updating the status in the data object\n    this._component.opacityStatus = true;\n    // Calling the handler function\n    this.opacitySliderHandler(event.pageX);\n  }\n\n  handleMouseMove(event) {\n    // Checking that the drag has started\n    if (this._component.opacityStatus === true) {\n      // Calling the handler function\n      this.opacitySliderHandler(event.pageX);\n    }\n  }\n\n  handleMouseUp() {\n    // Checking that the drag has started\n    if (this._component.opacityStatus === true) {\n      // Updating the status in the data object\n      this._component.opacityStatus = false;\n    }\n  }\n\n  handleTouchStart(event) {\n    // Updating the status\n    this._component.opacityStatusTouch = true;\n    // Calling the handler function\n    this.opacitySliderHandler(event.changedTouches[0].clientX);\n  }\n\n  handleTouchMove(event) {\n    // Checking that the touch drag has started\n    if (this._component.opacityStatusTouch === true) {\n      // Prevent page scrolling\n      event.preventDefault();\n      // Calling the handler function\n      this.opacitySliderHandler(event.changedTouches[0].clientX);\n    }\n  }\n\n  handleTouchEnd() {\n    // Checking that the touch drag has started\n    if (this._component.opacityStatusTouch === true) {\n      // Updating the status\n      this._component.opacityStatusTouch = false;\n    }\n  }\n\n  /**\n   * Opacity Slider\n   */\n\n  // Function to handle changes to the opacity slider\n  opacitySliderHandler(position) {\n    // Defining the slider and dragger\n    const sliderContainer = this._component.shadowRoot.getElementById('opacity_slider');\n    const sliderDragger = this._component.shadowRoot.getElementById('opacity_slider_dragger');\n\n    // Defining the X position\n    let eventX = position - sliderContainer.getBoundingClientRect().left;\n\n    // Making conditions so that the user don't drag outside the box\n    if (eventX < 11) eventX = 11;\n\n    if (eventX > 255) eventX = 255;\n\n    // Update the X property of the dragger\n    sliderDragger.attributes.x.nodeValue = eventX;\n\n    // Percentage of the dragger on the X axis\n    const percent = ((eventX - 11) / 244) * 100;\n\n    // Finding the value for the percentage of 1\n    let alpha = (1 / 100) * percent;\n    // Rounding the value to the nearest 2 decimals\n    alpha = Number(Math.round(alpha + 'e' + 2) + 'e-' + 2);\n\n    // Updating the data objects\n    this._component.alpha = alpha;\n\n    // Update the color text values\n    this._component.UpdatePicker.updateColorValueInput();\n\n    // Setting the data-color attribute to a color string\n    // This is so that the color updates properly on instances where the color has not been set\n    this._component.setAttribute('data-color', 'color');\n\n    // Update\n    this._component.updatePicker();\n  }\n}","export class SaturationLightnessBox {\n  constructor(_component) {\n    this._component = _component;\n    this.handleMouseDown = this.handleMouseDown.bind(this);\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.handleMouseUp = this.handleMouseUp.bind(this);\n    this.handleTouchStart = this.handleTouchStart.bind(this);\n    this.handleTouchMove = this.handleTouchMove.bind(this);\n    this.handleTouchEnd = this.handleTouchEnd.bind(this);\n    this.colorBoxHandler = this.colorBoxHandler.bind(this);\n  }\n\n  handleMouseDown(event) {\n    // Updating the status in the data object\n    this._component.boxStatus = true;\n    // Calling handler function\n    this.colorBoxHandler(event.pageX, event.pageY);\n  }\n\n  handleMouseMove(event) {\n    // Checking that the drag has started\n    if (this._component.boxStatus === true) {\n      // Calling handler function\n      this.colorBoxHandler(event.pageX, event.pageY);\n    }\n  }\n\n  handleMouseUp() {\n    // Checking that the drag has started\n    if (this._component.boxStatus === true) {\n      // Updating the status in the data object\n      this._component.boxStatus = false;\n    }\n  }\n\n  handleTouchStart(event) {\n    // Updating the status\n    this._component.boxStatusTouch = true;\n    // Calling the handler function\n    this.colorBoxHandler(event.changedTouches[0].clientX, event.changedTouches[0].clientY, true);\n  }\n\n  handleTouchMove(event) {\n    // Checking that the touch drag has started\n    if (this._component.boxStatusTouch === true) {\n      // Prevent page scrolling\n      event.preventDefault();\n      // Calling the handler function\n      this.colorBoxHandler(event.changedTouches[0].clientX, event.changedTouches[0].clientY, true);\n    }\n  }\n\n  handleTouchEnd() {\n    // Checking that the touch drag has started\n    if (this._component.boxStatusTouch === true) {\n      // Calling the handler function\n      this._component.boxStatusTouch = false;\n    }\n  }\n\n  /**\n   * Saturation and Lightness Box\n   */\n  // Function to handle changes to the saturation and lightness box\n  colorBoxHandler(positionX, positionY, touch) {\n    // Defining the box and dragger\n    const boxContainer = this._component.shadowRoot.getElementById('color_box');\n    const boxDragger = this._component.shadowRoot.getElementById('box_dragger');\n\n    // Defining X and Y position, Y differently works with scroll so I make conditions for that\n    let eventX = positionX - boxContainer.getBoundingClientRect().left;\n    let eventY = touch === true ? positionY - boxContainer.getBoundingClientRect().top : positionY - boxContainer.getBoundingClientRect().top - window.scrollY;\n\n    // Making conditions so that the user don't drag outside the box\n    if (eventX < 14) eventX = 14;\n\n    if (eventX > 252) eventX = 252;\n\n    if (eventY < 14) eventY = 14;\n\n    if (eventY > 119) eventY = 119;\n\n    // Changes X and Y properties of the dragger\n    boxDragger.attributes.y.nodeValue = eventY;\n    boxDragger.attributes.x.nodeValue = eventX;\n\n    // Calculating the Saturation Percent value\n    // SPercent is just the percent of where the dragger is on the X axis\n    // 322 is the max number of pixels the dragger can move\n    const SPercent = Math.round(((eventX - 15) / 238) * 100);\n\n    // Calculating the X and Y Percent Values\n    const percentX = 100 - SPercent / 2;\n    const percentY = 100 - ((eventY - 15) / 105) * 100;\n\n    // Calculating the LPercent\n    // LPercent is the the X percentage of the of the Y percentage of the dragger\n    const LPercent = Math.floor((percentY / 100) * percentX);\n\n    // Applying the Saturation and Lightness to the data object\n    this._component.saturation = SPercent;\n    this._component.lightness = LPercent;\n\n    // Update the color text values\n    this._component.UpdatePicker.updateColorValueInput();\n\n    // Setting the data-color attribute to a color string\n    // This is so that the color updates properly on instances where the color has not been set\n    this._component.setAttribute('data-color', 'color');\n\n    // Update\n    this._component.updatePicker();\n  }\n}","import { hexAToRGBA, RGBAToHSLA, HSLAToRGBA } from '../utility/color-conversion';\n\nexport class UpdatePicker {\n  constructor(_component) {\n    this._component = _component;\n    this.updateColorDisplays = this.updateColorDisplays.bind(this);\n    this.updateColorValueInput = this.updateColorValueInput.bind(this);\n  }\n\n  // Function to update color displays\n  updateColorDisplays(color) {\n    let uColor = color;\n\n    // Checking if color picker has not been set\n    if (!uColor) {\n      // Setting the default color positioning of the player to red\n      uColor = {\n        h: 0,\n        s: 100,\n        l: 50,\n        a: 1,\n      };\n    } else {\n      // Checking the color type that has been given\n      if (uColor.substring(0, 1) === '#') {\n        // Converting the color to HSLA\n        uColor = hexAToRGBA(uColor, true);\n      } else if (uColor.match(/rgba?/)) {\n        // Extracting the values\n        const rgb = uColor.match(/[.?\\d]+/g);\n\n        // Making sure there is a alpha value\n        rgb[3] = rgb[3] === undefined ? 1 : rgb[3];\n\n        // Converting the color to HSLA\n        uColor = RGBAToHSLA(rgb[0], rgb[1], rgb[2], rgb[3]);\n      } else {\n        // Extracting the values\n        const hsl = uColor.match(/[.?\\d]+/g);\n\n        if (hsl) { // undefined if we have no color yet\n          // Making sure there is a alpha value\n          hsl[3] = hsl[3] === undefined ? 1 : hsl[3];\n\n          // Formatting the value properly\n          uColor = {\n            h: hsl[0],\n            s: hsl[1],\n            l: hsl[2],\n            a: hsl[3],\n          };\n        } else { // try to get color from text\n          let a = document.createElement('div');\n          a.style.color = uColor;\n          let colors = window.getComputedStyle(this._component.shadowRoot.appendChild(a) ).color.match(/\\d+/g).map((a) => parseInt(a,10));\n          this._component.shadowRoot.removeChild(a);\n          if (colors.length >= 3) {\n            uColor = '#' + ((1 << 24) + (colors[0] << 16) + (colors[1] << 8) + colors[2]).toString(16).substr(1);\n            uColor = hexAToRGBA(uColor, true);\n          }\n        }\n      }\n    }\n\n    // Updating the data object\n    this._component.hue = uColor.h;\n    this._component.saturation = uColor.s;\n    this._component.lightness = uColor.l;\n    this._component.alpha = uColor.a;\n\n    // Updating the input values\n    this.updateColorValueInput();\n\n    // Updating the Hue color in the Saturation and lightness box\n    this._component.shadowRoot.getElementById('saturation').children[1].setAttribute('stop-color', `hsl(${uColor.h}, 100%, 50%)`);\n\n    // Color box (saturation and lightness) config\n    // Defining the box and dragger\n    const boxDragger = this._component.shadowRoot.getElementById('box_dragger');\n\n    // Calculating x value\n    let x = (238 / 100) * uColor.s + 14;\n\n    // Calculating y value\n    const percentY = 100 - (uColor.l / (100 - uColor.s / 2)) * 100;\n    let y = (105 / 100) * percentY + 14;\n\n    // Making conditions so that the user don't drag outside the box\n    if (x < 14) x = 14;\n\n    if (x > 252) x = 252;\n\n    if (y < 14) y = 14;\n\n    if (y > 119) y = 119;\n\n    // Making changes the the UI\n    boxDragger.attributes.x.nodeValue = x;\n    boxDragger.attributes.y.nodeValue = y;\n\n    // Hue slider config\n    // Defining the hue slider and dragger\n    const hueSliderDragger = this._component.shadowRoot.getElementById('color_slider_dragger');\n\n    // Calculating x value\n    let percentHue = 100 - (uColor.h / 359) * 100;\n    let hueX = (244 / 100) * percentHue + 11;\n\n    // Making changes the the UI\n    hueSliderDragger.attributes.x.nodeValue = hueX;\n\n    // Alpha slider config\n    // Defining the opacity slider and dragger\n    const alphaSliderDragger = this._component.shadowRoot.getElementById('opacity_slider_dragger');\n\n    // Calculating x value\n    let alphaX = (244 / 100) * (uColor.a * 100) + 11;\n\n    // Making changes the the UI\n    alphaSliderDragger.attributes.x.nodeValue = alphaX;\n  }\n\n  // Update the color value inputs\n  updateColorValueInput() {\n    // Checking the value color type the user has selected\n    if (this._component.colorTypeStatus === 'HEXA') {\n      // Converting the value\n      const hexValue = HSLAToRGBA(this._component.hue, this._component.saturation, this._component.lightness, this._component.alpha, true);\n\n      // Applying the value to the input\n      this._component.shadowRoot.getElementById('hex_input').value = hexValue;\n    } else if (this._component.colorTypeStatus === 'RGBA') {\n      // Converting the value\n      const RGBAValue = HSLAToRGBA(this._component.hue, this._component.saturation, this._component.lightness, this._component.alpha);\n\n      // Applying the value to the inputs\n      this._component.shadowRoot.querySelectorAll('.rgba_input')[0].value = RGBAValue.r;\n      this._component.shadowRoot.querySelectorAll('.rgba_input')[1].value = RGBAValue.g;\n      this._component.shadowRoot.querySelectorAll('.rgba_input')[2].value = RGBAValue.b;\n      this._component.shadowRoot.querySelectorAll('.rgba_input')[3].value = RGBAValue.a;\n    } else {\n      // Applying the value to the inputs\n      this._component.shadowRoot.querySelectorAll('.hsla_input')[0].value = this._component.hue;\n      this._component.shadowRoot.querySelectorAll('.hsla_input')[1].value = this._component.saturation;\n      this._component.shadowRoot.querySelectorAll('.hsla_input')[2].value = this._component.lightness;\n      this._component.shadowRoot.querySelectorAll('.hsla_input')[3].value = this._component.alpha;\n    }\n  }\n}","import { LitElement, html, css } from 'lit-element';\nimport scss from './wc-colr-pickr.scss';\nimport { ColorChangeEvent } from './mixins/color-change-event';\nimport { ColorTextValues } from './mixins/color-text-values';\nimport { CustomColor } from './mixins/custom-color';\nimport { HueSlider } from './mixins/hue-slider';\nimport { OpacitySlider } from './mixins/opacity-slider';\nimport { SaturationLightnessBox } from './mixins/saturation-lightness-box';\nimport { UpdatePicker } from './mixins/update-picker';\n\n/**\n * Private properties used inside the module.\n * @type {Object}\n */\nconst Static = {\n  elementInstance: 0,\n  component: 'wc-colr-pickr',\n  debug: !production,\n};\nObject.seal(Static);\n\n/**\n * WCColrPickr web component.\n *\n * @element wc-colr-pickr\n */\nexport class WCColrPickr extends LitElement {\n  // This decorator creates a property accessor that triggers rendering and\n  // an observed attribute.\n  static get properties() {\n    return {\n      selectedColor: { type: String },\n    };\n  }\n\n  static get styles() {\n    return css(scss);\n  }\n\n  get button() {\n    if (this.shadowRoot.getElementById('toggle_pickr')) {\n      return this.shadowRoot.getElementById('toggle_pickr');\n    }\n\n    return null;\n  }\n\n  /**\n   * Creates an instance of WCColrPickr.\n   * @memberof WCColrPickr\n   */\n  constructor() {\n    super();\n    Static.elementInstance++;\n\n    this.selectedColor = '#ff0000';\n    this.pickerOpen = false;\n    this.instance = null;\n    this.boxStatus = false;\n    this.boxStatusTouch = false;\n    this.sliderStatus = false;\n    this.sliderStatusTouch = false;\n    this.opacityStatus = false;\n    this.opacityStatusTouch = false;\n    this.colorTypeStatus = 'HEXA';\n    this.hue = 0;\n    this.saturation = 100;\n    this.lightness = 50;\n    this.alpha = 1;\n    this.contextMenuElem = null;\n    this.doubleTapTime = 0;\n    this.LSCustomColors = {\n      0: [\n        {\n          value: 'red',\n        },\n        {\n          value: 'blue',\n        },\n        {\n          value: 'green',\n        },\n        {\n          value: 'yellow',\n        },\n        {\n          value: 'purple',\n        },\n        {\n          value: 'orange',\n        },\n        {\n          value: 'lime',\n        },\n      ],\n    };\n    this.UpdatePicker = new UpdatePicker(this);\n    this.SaturationLightnessBox = new SaturationLightnessBox(this);\n    this.OpacitySlider = new OpacitySlider(this);\n    this.ColorChangeEvent = new ColorChangeEvent(this);\n    this.CustomColor = new CustomColor(this);\n    this.ColorTextValues = new ColorTextValues(this);\n    this.HueSlider = new HueSlider(this);\n    this._togglePicker = this._togglePicker.bind(this);\n    this._rootMouseMove = this._rootMouseMove.bind(this);\n    this._rootMouseUp = this._rootMouseUp.bind(this);\n    this._rootTouchMove = this._rootTouchMove.bind(this);\n    this._rootTouchEnd = this._rootTouchEnd.bind(this);\n  }\n\n  // Render element DOM by returning a `lit-html` template.\n  render() {\n    return this._getTemplate();\n  }\n\n  /**\n   * Invoked when the custom element is first connected to the document's DOM\n   * @memberof WCColrPickr\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    // init properties by attributes or set default\n    if (Static.debug) {\n      console.debug(`${Static.component}.connectedCallback, initialized properties:`);\n    }\n\n    this.initPickR();\n  }\n\n  /**\n   * Invoked when the custom element is disconnected from the document's DOM\n   * @memberof WCColrPickr\n   */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    if (Static.debug) {\n      console.debug(`${Static.component}.disconnectCallback`);\n    }\n  }\n\n  /**\n   * Invoked when the custom element is moved to a new document\n   * @memberof WCColrPickr\n   */\n  adoptedCallback() {\n    super.adoptedCallback();\n    if (Static.debug) {\n      console.debug(`${Static.component}.adoptedCallback`, this);\n    }\n  }\n\n  initPickR() {\n    // Checking if a local storage variable has been set\n    if (localStorage.getItem('custom_colors') === null) {\n      // If not then I set one\n      localStorage.setItem('custom_colors', JSON.stringify(this.LSCustomColors));\n    } else {\n      // If it has then I define the LSCustomColors with the value for this\n      this.LSCustomColors = JSON.parse(localStorage.getItem('custom_colors'));\n    }\n\n    // Click anywhere to close a pop-up\n    window.addEventListener('mousedown', (event) => {\n      // Close context menu\n      if (event.target.id !== 'color_context_menu') {\n        this.shadowRoot.getElementById('color_context_menu').style.display = 'none';\n      }\n    });\n\n    // Click the darken background to close the color picker\n    window.addEventListener('mousedown', (event) => {\n      // Define the target\n      let target = event.target;\n      // close if picker is open and target is picker tag...\n      if (this.pickerOpen && target.tagName !== 'WC-COLR-PICKR') {\n        this.closePicker();\n      }\n    });\n\n    // When scrolling\n    window.addEventListener('scroll', () => {\n      // If picker is open...\n      if (this.pickerOpen) {\n        this.closePicker(); // Close picker\n      }\n    });\n\n    // When using mouse wheel\n    window.addEventListener('resize', () => {\n      // If picker is open...\n      if (this.pickerOpen) {\n        this.closePicker(); // Close picker\n      }\n    });\n  }\n\n  keyShortcuts(event) {\n    // Define key code\n    const key = event.keyCode;\n\n    // Check for key code\n    switch (key) {\n      // Del\n      case 46:\n        // If focused element is a custom color...\n        if (document.activeElement.className === 'custom_colors_preview') {\n          // Delete it\n          CustomColor.clearSingleCustomColor(document.activeElement);\n        }\n        break;\n      // Esc\n      case 27:\n        // If picker is open...\n        if (this.pickerOpen) {\n          this.closePicker(); // Close picker\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  // Close the picker\n  closePicker() {\n    // Update state\n    this.pickerOpen = false;\n\n    // Hiding elements\n    this.shadowRoot.getElementById('color_picker').style.display = 'none';\n\n    // Checking if the color for this instance has not been set yet\n    if (!this.button.getAttribute('data-color')) {\n      return;\n    }\n\n    // Update\n    this.updatePicker();\n  }\n\n  updatePicker() {\n    // Calling Event to make all the necessary changes\n    this.ColorChangeEvent.colorChange({\n      h: this.hue,\n      s: this.saturation,\n      l: this.lightness,\n      a: this.alpha,\n    });\n  }\n\n  _togglePicker() {\n    // Update state\n    this.pickerOpen = true;\n\n    // Define picker\n    const picker = this.shadowRoot.getElementById('color_picker');\n\n    // Displaying the color picker\n    picker.style.display = 'grid';\n\n    if (!this.button) {\n      return;\n    }\n\n    // Find position of button\n    let top = this.button.getBoundingClientRect().top;\n    let left = this.button.getBoundingClientRect().left;\n\n    // If the picker will go off bottom of screen...\n    if (top + picker.offsetHeight > window.innerHeight) {\n      // Place it above the button\n      top = top - picker.offsetHeight - 2;\n    }\n    // If the picker will go off top of screen...\n    else {\n      // Place it beneath the button\n      top = top + this.button.offsetHeight + 2;\n    }\n\n    // If the picker will go off the right of screen...\n    if (left + picker.offsetWidth > window.innerWidth - 20) {\n      // Calculate the difference\n      let difference = left + picker.offsetWidth - window.innerWidth;\n\n      // Move the picker back by the difference\n      left = left - difference - 20;\n    }\n\n    // Applying the position\n    picker.style.top = top + 'px';\n    picker.style.left = left + 'px';\n\n    // Updating the color picker\n    this.UpdatePicker.updateColorDisplays(this.button.getAttribute('data-color'));\n\n    // Focus on a picker item\n    this.shadowRoot.getElementById('color_text_values').focus();\n\n    picker.addEventListener('keydown', this.keyShortcuts.bind(this));\n  }\n\n  handleMouseDown() {\n    // Define outline element\n    let outlineElements = this.shadowRoot.querySelectorAll('.add_outline');\n\n    // Loop through the array of outline element until they are all gone\n    while (outlineElements.length > 0) {\n      // Remove outline\n      outlineElements[0].classList.add('remove_outline');\n\n      // Remove outline class\n      outlineElements[0].classList.remove('add_outline');\n\n      // Update list\n      outlineElements = this.shadowRoot.querySelectorAll('.add_outline');\n    }\n  }\n\n  _rootMouseMove(event) {\n    this.HueSlider.handleMouseMove(event);\n    this.OpacitySlider.handleMouseMove(event);\n    this.SaturationLightnessBox.handleMouseMove(event);\n  }\n\n  _rootMouseUp(event) {\n    this.HueSlider.handleMouseUp(event);\n    this.OpacitySlider.handleMouseUp(event);\n    this.SaturationLightnessBox.handleMouseUp(event);\n  }\n\n  _rootTouchMove(event) {\n    this.HueSlider.handleTouchMove(event);\n    this.OpacitySlider.handleTouchMove(event);\n    this.SaturationLightnessBox.handleTouchMove(event);\n  }\n\n  _rootTouchEnd(event) {\n    this.HueSlider.handleTouchEnd(event);\n    this.OpacitySlider.handleTouchEnd(event);\n    this.SaturationLightnessBox.handleTouchEnd(event);\n  }\n\n  _getTemplate() {\n    return html`\n      <div class=\"wc-colr-pickr\" \n        @mousedown=${this.handleMouseDown}\n        @mousemove=${this._rootMouseMove}\n        @mouseup=${this._rootMouseUp}\n        @touchmove=${this._rootTouchMove}\n        @touchend=${this._rootTouchEnd}\n      >\n        <!-- Add a button to your HTML document and give it any ID -->\n        <button id=\"toggle_pickr\"\n          data-color=\"${this.selectedColor}\"\n          style=\"background-color: ${this.selectedColor}\" \n          @click=\"${this._togglePicker}\"\n        ></button>\n        <aside id=\"color_picker\" class=\"picker-container\">\n          <div class=\"picker-main\">\n            <svg id=\"color_box\" width=\"263\" height=\"130\"\n              @mousedown=${this.SaturationLightnessBox.handleMouseDown}\n              @touchstart=${this.SaturationLightnessBox.handleTouchStart}\n            >\n              <defs>\n                <linearGradient id=\"saturation\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n                  <stop offset=\"0%\" stop-color=\"#fff\"></stop>\n                  <stop offset=\"100%\" stop-color=\"hsl(0,100%,50%)\"></stop>\n                </linearGradient>\n                <linearGradient id=\"brightness\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n                  <stop offset=\"0%\" stop-color=\"rgba(0,0,0,0)\"></stop>\n                  <stop offset=\"100%\" stop-color=\"#000\"></stop>\n                </linearGradient>\n                <pattern id=\"pattern_config\" width=\"100%\" height=\"100%\">\n                  <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"url(#saturation)\"></rect>\n                  }\n                  <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"url(#brightness)\"></rect>\n                </pattern>\n              </defs>\n              <rect rx=\"5\" ry=\"5\" x=\"1\" y=\"1\" width=\"263\" height=\"130\" stroke=\"#fff\" stroke-width=\"2\" fill=\"url(#pattern_config)\"></rect>\n              <svg id=\"box_dragger\" x=\"336\" y=\"14\" style=\"overflow: visible\">\n                <circle r=\"9\" fill=\"none\" stroke=\"#000\" stroke-width=\"2\"></circle>\n                <circle r=\"7\" fill=\"none\" stroke=\"#fff\" stroke-width=\"2\"></circle>\n              </svg>\n            </svg>\n            <div id=\"sliders\">\n              <svg id=\"color_slider\" width=\"263\" height=\"20\" \n                @mousedown=${this.HueSlider.handleMouseDown}\n                @touchstart=${this.HueSlider.handleTouchStart}\n              >\n                <defs>\n                  <linearGradient id=\"hue\" x1=\"100%\" y1=\"0%\" x2=\"0%\" y2=\"0%\">\n                    <stop offset=\"0%\" stop-color=\"#f00\"></stop>\n                    <stop offset=\"16.666%\" stop-color=\"#ff0\"></stop>\n                    <stop offset=\"33.333%\" stop-color=\"#0f0\"></stop>\n                    <stop offset=\"50%\" stop-color=\"#0ff\"></stop>\n                    <stop offset=\"66.666%\" stop-color=\"#00f\"></stop>\n                    <stop offset=\"83.333%\" stop-color=\"#f0f\"></stop>\n                    <stop offset=\"100%\" stop-color=\"#f00\"></stop>\n                  </linearGradient>\n                </defs>\n                <rect rx=\"5\" ry=\"5\" x=\"1\" y=\"1\" width=\"263\" height=\"20\" stroke=\"#fff\" stroke-width=\"2\" fill=\"url(#hue)\"></rect>\n                <svg id=\"color_slider_dragger\" x=\"277\" y=\"11\" style=\"overflow: visible\">\n                  <circle r=\"7\" fill=\"none\" stroke=\"#000\" stroke-width=\"2\"></circle>\n                  <circle r=\"5\" fill=\"none\" stroke=\"#fff\" stroke-width=\"2\"></circle>\n                </svg>\n              </svg>\n              <svg id=\"opacity_slider\" width=\"263\" height=\"20\"\n                @mousedown=${this.OpacitySlider.handleMouseDown}\n                @touchstart=${this.OpacitySlider.handleTouchStart}\n              >\n                <defs>\n                  <linearGradient id=\"opacity\" x1=\"100%\" y1=\"0%\" x2=\"0%\" y2=\"0%\">\n                    <stop offset=\"0%\" stop-color=\"#000\"></stop>\n                    <stop offset=\"100%\" stop-color=\"#fff\"></stop>\n                  </linearGradient>\n                </defs>\n                <rect rx=\"5\" ry=\"5\" x=\"1\" y=\"6\" width=\"263\" height=\"10\" stroke=\"#fff\" stroke-width=\"2\" fill=\"url(#opacity)\"></rect>\n                <svg id=\"opacity_slider_dragger\" x=\"277\" y=\"11\" style=\"overflow: visible\">\n                  <circle r=\"7\" fill=\"none\" stroke=\"#000\" stroke-width=\"2\"></circle>\n                  <circle r=\"5\" fill=\"none\" stroke=\"#fff\" stroke-width=\"2\"></circle>\n                </svg>\n              </svg>\n            </div>\n            <div id=\"color_text_values\" tabindex=\"0\">\n              <div id=\"hexa\">\n                <input id=\"hex_input\" name=\"hex_input\" type=\"text\" maxlength=\"9\" spellcheck=\"false\" \n                  @blur=${this.ColorTextValues.handleHexBlur}\n                />\n                <br />\n                <label for=\"hex_input\" class=\"label_text\">HEX</label>\n              </div>\n              <div id=\"rgba\" style=\"display: none\">\n                <div class=\"rgba_divider\">\n                  <input class=\"rgba_input\" name=\"r\" type=\"number\" min=\"0\" max=\"255\" \n                    @change=${this.ColorTextValues.handleRgbaChange}\n                  />\n                  <br />\n                  <label for=\"r\" class=\"label_text\">R</label>\n                </div>\n                <div class=\"rgba_divider\">\n                  <input class=\"rgba_input\" name=\"g\" type=\"number\" min=\"0\" max=\"255\" \n                    @change=${this.ColorTextValues.handleRgbaChange}\n                  />\n                  <br />\n                  <label for=\"g\" class=\"label_text\">G</label>\n                </div>\n                <div class=\"rgba_divider\">\n                  <input class=\"rgba_input\" name=\"b\" type=\"number\" min=\"0\" max=\"255\" \n                    @change=${this.ColorTextValues.handleRgbaChange}\n                  />\n                  <br />\n                  <label for=\"b\" class=\"label_text\">B</label>\n                </div>\n                <div class=\"rgba_divider\">\n                  <input class=\"rgba_input\" name=\"a\" type=\"number\" step=\"0.1\" min=\"0\" max=\"1\" \n                    @change=${this.ColorTextValues.handleRgbaChange}\n                  />\n                  <br />\n                  <label for=\"a\" class=\"label_text\">A</label>\n                </div>\n              </div>\n              <div id=\"hsla\" style=\"display: none\">\n                <div class=\"hsla_divider\">\n                  <input class=\"hsla_input\" name=\"h\" type=\"number\" min=\"0\" max=\"359\"\n                    @change=${this.ColorTextValues.handleHslaChange}\n                  />\n                  <br />\n                  <label for=\"h\" class=\"label_text\">H</label>\n                </div>\n                <div class=\"hsla_divider\">\n                  <input class=\"hsla_input\" name=\"s\" type=\"number\" min=\"0\" max=\"100\"\n                    @change=${this.ColorTextValues.handleHslaChange}\n                  />\n                  <br />\n                  <label for=\"s\" class=\"label_text\">S%</label>\n                </div>\n                <div class=\"hsla_divider\">\n                  <input class=\"hsla_input\" name=\"l\" type=\"number\" min=\"0\" max=\"100\"\n                    @change=${this.ColorTextValues.handleHslaChange}\n                  />\n                  <br />\n                  <label for=\"l\" class=\"label_text\">L%</label>\n                </div>\n                <div class=\"rgba_divider\">\n                  <input class=\"hsla_input\" name=\"a\" type=\"number\" step=\"0.1\" min=\"0\" max=\"1\"\n                    @change=${this.ColorTextValues.handleHslaChange}\n                  />\n                  <br />\n                  <label for=\"a\" class=\"label_text\">A</label>\n                </div>\n              </div>\n              <button id=\"switch_color_type\" class=\"remove_outline\" name=\"switch-color-type\"\n                @mousedown=${this.ColorTextValues.switchColorType}\n              >\n                <svg viewBox=\"0 -2 24 24\" width=\"20\" height=\"20\">\n                  <path fill=\"#555\" d=\"M6 11v-4l-6 5 6 5v-4h12v4l6-5-6-5v4z\" />\n                </svg>\n              </button>\n            </div>\n          </div>\n          <div id=\"custom_colors\" class=\"picker-custom-colors\">\n            <div id=\"custom_colors_header\">\n              <svg id=\"custom_colors_pallet_icon\" viewBox=\"0 0 24 24\" width=\"15\" height=\"18\">\n                <path\n                  fill=\"#555\"\n                  d=\"M4 21.832c4.587.38 2.944-4.493 7.188-4.538l1.838 1.534c.458 5.538-6.315 6.773-9.026 3.004zm14.065-7.115c1.427-2.239 5.847-9.749 5.847-9.749.352-.623-.43-1.273-.976-.813 0 0-6.572 5.714-8.511 7.525-1.532 1.432-1.539 2.086-2.035 4.447l1.68 1.4c2.227-.915 2.868-1.039 3.995-2.81zm-11.999 3.876c.666-1.134 1.748-2.977 4.447-3.262.434-2.087.607-3.3 2.547-5.112 1.373-1.282 4.938-4.409 7.021-6.229-1-2.208-4.141-4.023-8.178-3.99-6.624.055-11.956 5.465-11.903 12.092.023 2.911 1.081 5.571 2.82 7.635 1.618.429 2.376.348 3.246-1.134zm6.952-15.835c1.102-.006 2.005.881 2.016 1.983.004 1.103-.882 2.009-1.986 2.016-1.105.009-2.008-.88-2.014-1.984-.013-1.106.876-2.006 1.984-2.015zm-5.997 2.001c1.102-.01 2.008.877 2.012 1.983.012 1.106-.88 2.005-1.98 2.016-1.106.007-2.009-.881-2.016-1.988-.009-1.103.877-2.004 1.984-2.011zm-2.003 5.998c1.106-.007 2.01.882 2.016 1.985.01 1.104-.88 2.008-1.986 2.015-1.105.008-2.005-.88-2.011-1.985-.011-1.105.879-2.004 1.981-2.015zm10.031 8.532c.021 2.239-.882 3.718-1.682 4.587l-.046.044c5.255-.591 9.062-4.304 6.266-7.889-1.373 2.047-2.534 2.442-4.538 3.258z\"\n                />\n              </svg>\n              <button id=\"custom_colors_add\" class=\"remove_outline\" name=\"add-a-custom-color\"\n                @mousedown=${this.CustomColor.addCustomColor}\n              >\n                <svg viewBox=\"0 -2 24 24\" width=\"14\" height=\"16\">\n                  <path fill=\"#555\" d=\"M24 10h-10v-10h-4v10h-10v4h10v10h4v-10h10z\" />\n                </svg>\n              </button>\n            </div>\n            <div id=\"custom_colors_box\" \n              @mousedown=${this.CustomColor.selectCustomColor} \n              @contextmenu=${this.CustomColor.contextCustomColor}\n            >\n              ${this.LSCustomColors[0].map(\n                (color) =>\n                  html`<button                  \n                    class=\"custom_colors_preview\"\n                    style=\"background-color: ${color.value};\"\n                    data-custom-color=\"${color.value}\"\n                    title=\"${color.label ? color.label + ' (' + color.value + ')' : color.value}\"\n                  ></button>`\n              )}\n            </div>\n          </div>\n          <div id=\"color_context_menu\" class=\"color_ctx_menu\">\n            <button id=\"color_clear_single\" class=\"color_ctx_menu\" name=\"remove-single-color\"\n              @mousedown=${this.CustomColor.clearSingleCustomColor}\n            >\n              Remove\n            </button>\n            <button id=\"color_clear_all\" class=\"color_ctx_menu\" name=\"remove-all-colors\"\n              @mousedown=${this.CustomColor.clearAllCustomColors}\n            >\n              Remove All\n            </button>\n          </div>\n        </aside>\n      </div>\n    `;\n  }\n}\nwindow.customElements.define('wc-colr-pickr', WCColrPickr);\n"],"sourceRoot":""}